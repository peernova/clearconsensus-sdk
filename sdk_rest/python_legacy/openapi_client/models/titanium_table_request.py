# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class TitaniumTableRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'filter_pack': 'TitaniumFilterPack',
        'filters': 'list[TitaniumFilter]',
        'order_by': 'TitaniumOrderBy',
        'page': 'TitaniumPage'
    }

    attribute_map = {
        'filter_pack': 'filterPack',
        'filters': 'filters',
        'order_by': 'orderBy',
        'page': 'page'
    }

    def __init__(self, filter_pack=None, filters=None, order_by=None, page=None, local_vars_configuration=None):  # noqa: E501
        """TitaniumTableRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._filter_pack = None
        self._filters = None
        self._order_by = None
        self._page = None
        self.discriminator = None

        if filter_pack is not None:
            self.filter_pack = filter_pack
        if filters is not None:
            self.filters = filters
        if order_by is not None:
            self.order_by = order_by
        if page is not None:
            self.page = page

    @property
    def filter_pack(self):
        """Gets the filter_pack of this TitaniumTableRequest.  # noqa: E501


        :return: The filter_pack of this TitaniumTableRequest.  # noqa: E501
        :rtype: TitaniumFilterPack
        """
        return self._filter_pack

    @filter_pack.setter
    def filter_pack(self, filter_pack):
        """Sets the filter_pack of this TitaniumTableRequest.


        :param filter_pack: The filter_pack of this TitaniumTableRequest.  # noqa: E501
        :type filter_pack: TitaniumFilterPack
        """

        self._filter_pack = filter_pack

    @property
    def filters(self):
        """Gets the filters of this TitaniumTableRequest.  # noqa: E501


        :return: The filters of this TitaniumTableRequest.  # noqa: E501
        :rtype: list[TitaniumFilter]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this TitaniumTableRequest.


        :param filters: The filters of this TitaniumTableRequest.  # noqa: E501
        :type filters: list[TitaniumFilter]
        """

        self._filters = filters

    @property
    def order_by(self):
        """Gets the order_by of this TitaniumTableRequest.  # noqa: E501


        :return: The order_by of this TitaniumTableRequest.  # noqa: E501
        :rtype: TitaniumOrderBy
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this TitaniumTableRequest.


        :param order_by: The order_by of this TitaniumTableRequest.  # noqa: E501
        :type order_by: TitaniumOrderBy
        """

        self._order_by = order_by

    @property
    def page(self):
        """Gets the page of this TitaniumTableRequest.  # noqa: E501


        :return: The page of this TitaniumTableRequest.  # noqa: E501
        :rtype: TitaniumPage
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this TitaniumTableRequest.


        :param page: The page of this TitaniumTableRequest.  # noqa: E501
        :type page: TitaniumPage
        """

        self._page = page

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TitaniumTableRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, TitaniumTableRequest):
            return True

        return self.to_dict() != other.to_dict()
