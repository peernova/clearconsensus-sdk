# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.get_challenge_details_response_result import GetChallengeDetailsResponseResult  # noqa: E501
from openapi_client.rest import ApiException

class TestGetChallengeDetailsResponseResult(unittest.TestCase):
    """GetChallengeDetailsResponseResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GetChallengeDetailsResponseResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.get_challenge_details_response_result.GetChallengeDetailsResponseResult()  # noqa: E501
        if include_optional :
            return GetChallengeDetailsResponseResult(
                attachments = [
                    openapi_client.models.titanium_attachment.titaniumAttachment(
                        attachment_id = '', 
                        name = '', 
                        url = '', )
                    ], 
                challenge_data = None, 
                common_challenge_data = openapi_client.models.get_challenge_details_response_common_challenge_data.GetChallengeDetailsResponseCommonChallengeData(
                    date = '', 
                    evidence_type = '', 
                    time = '', ), 
                total_number = None
            )
        else :
            return GetChallengeDetailsResponseResult(
        )

    def testGetChallengeDetailsResponseResult(self):
        """Test GetChallengeDetailsResponseResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
