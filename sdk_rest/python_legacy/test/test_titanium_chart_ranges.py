# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.titanium_chart_ranges import TitaniumChartRanges  # noqa: E501
from openapi_client.rest import ApiException

class TestTitaniumChartRanges(unittest.TestCase):
    """TitaniumChartRanges unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TitaniumChartRanges
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.titanium_chart_ranges.TitaniumChartRanges()  # noqa: E501
        if include_optional :
            return TitaniumChartRanges(
                challenge_overlay_consensus = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), ), 
                evp = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), ), 
                expert_post_challenge = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), ), 
                expert_pre_challenge = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), ), 
                market_data_overlay_consensus = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), ), 
                submission_mean_median = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), ), 
                submission_min_max = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), ), 
                submission_only_consensus = openapi_client.models.titanium_range.titaniumRange(
                    max = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    min = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), )
            )
        else :
            return TitaniumChartRanges(
        )

    def testTitaniumChartRanges(self):
        """Test TitaniumChartRanges"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
