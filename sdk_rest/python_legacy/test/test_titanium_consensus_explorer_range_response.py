# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.titanium_consensus_explorer_range_response import TitaniumConsensusExplorerRangeResponse  # noqa: E501
from openapi_client.rest import ApiException

class TestTitaniumConsensusExplorerRangeResponse(unittest.TestCase):
    """TitaniumConsensusExplorerRangeResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TitaniumConsensusExplorerRangeResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.titanium_consensus_explorer_range_response.TitaniumConsensusExplorerRangeResponse()  # noqa: E501
        if include_optional :
            return TitaniumConsensusExplorerRangeResponse(
                data = openapi_client.models.titanium_consensus_explorer_range_data.titaniumConsensusExplorerRangeData(
                    all_participant_crs_consensus_price = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    challenge_overlay_crs_consensus_price = openapi_client.models.titanium_range_point.titaniumRangePoint(
                        label = '', 
                        value = openapi_client.models.value.value(), ), 
                    chart_ranges = openapi_client.models.titanium_chart_ranges.titaniumChartRanges(
                        challenge_overlay_consensus = openapi_client.models.titanium_range.titaniumRange(
                            max = , 
                            min = , ), 
                        evp = openapi_client.models.titanium_range.titaniumRange(), 
                        expert_post_challenge = , 
                        expert_pre_challenge = , 
                        market_data_overlay_consensus = , 
                        submission_mean_median = , 
                        submission_min_max = , 
                        submission_only_consensus = , ), 
                    evp_mid = , 
                    expert_post_challenge_consensus_price = , 
                    expert_pre_challenge_consensus_price = , 
                    market_data_crs_consensus_price = , 
                    submission_mean_point = , 
                    submission_point = , ), 
                error = openapi_client.models.titanium_error.titaniumError(
                    code = 56, 
                    message = '', )
            )
        else :
            return TitaniumConsensusExplorerRangeResponse(
        )

    def testTitaniumConsensusExplorerRangeResponse(self):
        """Test TitaniumConsensusExplorerRangeResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
