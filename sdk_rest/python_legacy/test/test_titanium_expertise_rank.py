# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.titanium_expertise_rank import TitaniumExpertiseRank  # noqa: E501
from openapi_client.rest import ApiException

class TestTitaniumExpertiseRank(unittest.TestCase):
    """TitaniumExpertiseRank unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TitaniumExpertiseRank
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.titanium_expertise_rank.TitaniumExpertiseRank()  # noqa: E501
        if include_optional :
            return TitaniumExpertiseRank(
                abs_distance_to_anchor = openapi_client.models.abs_distance_to_anchor.absDistanceToAnchor(), 
                anchor_price = openapi_client.models.anchor_price.anchorPrice(), 
                expertise_score = openapi_client.models.expertise_score.expertiseScore(), 
                experts_count = 56, 
                history = [
                    openapi_client.models.titanium_expertise_rank_history_element.titaniumExpertiseRankHistoryElement(
                        date = '', 
                        experts_count = 56, 
                        rank = openapi_client.models.rank.rank(), )
                    ], 
                rank = openapi_client.models.rank.rank(), 
                submission_price = openapi_client.models.submission_price.submissionPrice()
            )
        else :
            return TitaniumExpertiseRank(
        )

    def testTitaniumExpertiseRank(self):
        """Test TitaniumExpertiseRank"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
