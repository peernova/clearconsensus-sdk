# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.titanium_consensus_column import TitaniumConsensusColumn  # noqa: E501
from openapi_client.rest import ApiException

class TestTitaniumConsensusColumn(unittest.TestCase):
    """TitaniumConsensusColumn unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TitaniumConsensusColumn
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.titanium_consensus_column.TitaniumConsensusColumn()  # noqa: E501
        if include_optional :
            return TitaniumConsensusColumn(
                abs_diff_from_consensus = openapi_client.models.abs_diff_from_consensus.absDiffFromConsensus(), 
                accepted_max = openapi_client.models.accepted_max.acceptedMax(), 
                accepted_min = openapi_client.models.accepted_min.acceptedMin(), 
                cons_abs_diff_from_anchor_evp_mid = openapi_client.models.cons_abs_diff_from_anchor_evp_mid.consAbsDiffFromAnchorEvpMid(), 
                cons_abs_diff_from_anchor_evp_mid_calc = openapi_client.models.cons_abs_diff_from_anchor_evp_mid_calc.consAbsDiffFromAnchorEvpMidCalc(), 
                cons_abs_diff_from_anchor_sub = openapi_client.models.cons_abs_diff_from_anchor_sub.consAbsDiffFromAnchorSub(), 
                cons_abs_diff_from_anchor_trade = openapi_client.models.cons_abs_diff_from_anchor_trade.consAbsDiffFromAnchorTrade(), 
                consensus = openapi_client.models.consensus.consensus(), 
                number_of_instruments = openapi_client.models.number_of_instruments.numberOfInstruments(), 
                std_dev = openapi_client.models.std_dev.stdDev(), 
                sub_price_diff = openapi_client.models.sub_price_diff.subPriceDiff()
            )
        else :
            return TitaniumConsensusColumn(
        )

    def testTitaniumConsensusColumn(self):
        """Test TitaniumConsensusColumn"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
