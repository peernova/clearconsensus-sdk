# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.titanium_trade_periods_with_metrics import TitaniumTradePeriodsWithMetrics  # noqa: E501
from openapi_client.rest import ApiException

class TestTitaniumTradePeriodsWithMetrics(unittest.TestCase):
    """TitaniumTradePeriodsWithMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TitaniumTradePeriodsWithMetrics
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.titanium_trade_periods_with_metrics.TitaniumTradePeriodsWithMetrics()  # noqa: E501
        if include_optional :
            return TitaniumTradePeriodsWithMetrics(
                less_day = openapi_client.models.titanium_trade_period_metrics.titaniumTradePeriodMetrics(
                    max_notional_amount = 1.337, 
                    min_notional_amount = 1.337, 
                    trade_count = '', ), 
                less_month = openapi_client.models.titanium_trade_period_metrics.titaniumTradePeriodMetrics(
                    max_notional_amount = 1.337, 
                    min_notional_amount = 1.337, 
                    trade_count = '', ), 
                less_week = openapi_client.models.titanium_trade_period_metrics.titaniumTradePeriodMetrics(
                    max_notional_amount = 1.337, 
                    min_notional_amount = 1.337, 
                    trade_count = '', )
            )
        else :
            return TitaniumTradePeriodsWithMetrics(
        )

    def testTitaniumTradePeriodsWithMetrics(self):
        """Test TitaniumTradePeriodsWithMetrics"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
