# coding: utf-8

"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.titanium_evidental_pricing import TitaniumEvidentalPricing  # noqa: E501
from openapi_client.rest import ApiException

class TestTitaniumEvidentalPricing(unittest.TestCase):
    """TitaniumEvidentalPricing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TitaniumEvidentalPricing
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.titanium_evidental_pricing.TitaniumEvidentalPricing()  # noqa: E501
        if include_optional :
            return TitaniumEvidentalPricing(
                abs_diff_from_evp_mid = openapi_client.models.abs_diff_from_evp_mid.absDiffFromEvpMid(), 
                ask = openapi_client.models.ask.ask(), 
                bid = openapi_client.models.bid.bid(), 
                evp_lower_boundary = openapi_client.models.evp_lower_boundary.evpLowerBoundary(), 
                evp_mid_abs_diff_from_latest_trade = openapi_client.models.evp_mid_abs_diff_from_latest_trade.evpMidAbsDiffFromLatestTrade(), 
                evp_upper_boundary = openapi_client.models.evp_upper_boundary.evpUpperBoundary(), 
                mid = openapi_client.models.mid.mid(), 
                sub_price_diff = openapi_client.models.sub_price_diff.subPriceDiff(), 
                trades_or_orders_count = openapi_client.models.trades_or_orders_count.tradesOrOrdersCount()
            )
        else :
            return TitaniumEvidentalPricing(
        )

    def testTitaniumEvidentalPricing(self):
        """Test TitaniumEvidentalPricing"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
