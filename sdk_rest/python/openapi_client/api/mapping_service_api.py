"""
    clearconsensus-sdk

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.rpc_status import RpcStatus
from openapi_client.model.titanium_descriptor_pair_based_acknowledge_response import TitaniumDescriptorPairBasedAcknowledgeResponse
from openapi_client.model.titanium_descriptor_pair_based_get_definition import TitaniumDescriptorPairBasedGetDefinition
from openapi_client.model.titanium_list_request import TitaniumListRequest
from openapi_client.model.titanium_list_version_response import TitaniumListVersionResponse
from openapi_client.model.titanium_mapping_rule_definition import TitaniumMappingRuleDefinition
from openapi_client.model.titanium_mapping_rule_list import TitaniumMappingRuleList
from openapi_client.model.titanium_mapping_rule_response import TitaniumMappingRuleResponse


class MappingServiceApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.mapping_service_add_mapping_rule_endpoint = _Endpoint(
            settings={
                'response_type': (TitaniumDescriptorPairBasedAcknowledgeResponse,),
                'auth': [],
                'endpoint_path': '/api/v1/mapping/rule/add',
                'operation_id': 'mapping_service_add_mapping_rule',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (TitaniumMappingRuleDefinition,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.mapping_service_disable_mapping_rule_endpoint = _Endpoint(
            settings={
                'response_type': (TitaniumDescriptorPairBasedAcknowledgeResponse,),
                'auth': [],
                'endpoint_path': '/api/v1/mapping/rule/disable',
                'operation_id': 'mapping_service_disable_mapping_rule',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (TitaniumDescriptorPairBasedGetDefinition,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.mapping_service_enable_mapping_rule_endpoint = _Endpoint(
            settings={
                'response_type': (TitaniumDescriptorPairBasedAcknowledgeResponse,),
                'auth': [],
                'endpoint_path': '/api/v1/mapping/rule/enable',
                'operation_id': 'mapping_service_enable_mapping_rule',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (TitaniumDescriptorPairBasedGetDefinition,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.mapping_service_get_mapping_rule_endpoint = _Endpoint(
            settings={
                'response_type': (TitaniumMappingRuleResponse,),
                'auth': [],
                'endpoint_path': '/api/v1/mapping/rule/get',
                'operation_id': 'mapping_service_get_mapping_rule',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (TitaniumDescriptorPairBasedGetDefinition,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.mapping_service_get_mapping_rule_version_endpoint = _Endpoint(
            settings={
                'response_type': (TitaniumMappingRuleResponse,),
                'auth': [],
                'endpoint_path': '/api/v1/mapping/rule/version/{scope}/{srcDescriptor}/{destDescriptor}/{versionId}',
                'operation_id': 'mapping_service_get_mapping_rule_version',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'scope',
                    'src_descriptor',
                    'dest_descriptor',
                    'version_id',
                ],
                'required': [
                    'scope',
                    'src_descriptor',
                    'dest_descriptor',
                    'version_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'scope':
                        (str,),
                    'src_descriptor':
                        (str,),
                    'dest_descriptor':
                        (str,),
                    'version_id':
                        (str,),
                },
                'attribute_map': {
                    'scope': 'scope',
                    'src_descriptor': 'srcDescriptor',
                    'dest_descriptor': 'destDescriptor',
                    'version_id': 'versionId',
                },
                'location_map': {
                    'scope': 'path',
                    'src_descriptor': 'path',
                    'dest_descriptor': 'path',
                    'version_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.mapping_service_list_mapping_rule_versions_endpoint = _Endpoint(
            settings={
                'response_type': (TitaniumListVersionResponse,),
                'auth': [],
                'endpoint_path': '/api/v1/mapping/rule/versions',
                'operation_id': 'mapping_service_list_mapping_rule_versions',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (TitaniumDescriptorPairBasedGetDefinition,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.mapping_service_list_mapping_rules_endpoint = _Endpoint(
            settings={
                'response_type': (TitaniumMappingRuleList,),
                'auth': [],
                'endpoint_path': '/api/v1/mapping/rule/list',
                'operation_id': 'mapping_service_list_mapping_rules',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (TitaniumListRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def mapping_service_add_mapping_rule(
        self,
        body,
        **kwargs
    ):
        """AddMappingRule AddMappingRule is an API used to add a specific mapping rule to the system. The name provided for the mapping rule must match the asset class and descriptor names. If a mapping rule with the same name already exists, it will be updated. This API accepts a MappingRuleDefinition object as its parameter,which includes information about the mapping rule being added. The response from this API is a DescriptorPairBasedAcknowledgeResponse,which acknowledges the addition of the mapping rule.  # noqa: E501

        Example of request for regular user : {   \"src_descriptor\":\"foreign_exchange-vanilla-forwards\",   \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\",   \"transformations\":[      {         \"targetColumn\":\"submission_date\",         \"sourceColumn\":\"date\"      },      {         \"targetColumn\":\"submission_asset\",         \"rule\":\"{ \\\"$to_upper\\\": { \\\"$trim\\\" : \\\"fx_test_for_bank1.submission_asset\\\" }}\",         \"name\": \"upper case asset\",         \"description\": \"i am optional...\"      }   ] }  Example of request for Back Office : {   \"src_descriptor\":\"foreign_exchange-vanilla-forwards\",   \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\",   \"scope\":\"global\",   \"transformations\":[      {         \"targetColumn\":\"submission_date\",         \"sourceColumn\":\"another_date\"      },      {         \"targetColumn\":\"submission_asset\",         \"rule\":\"{ \\\"$to_upper\\\": { \\\"$trim\\\" : \\\"fx_test_for_bank1.submission_asset\\\" }}\",         \"name\": \"upper case asset\",         \"description\": \"i am optional...\"      }   ] }  Example of response : {   \"data\":{      \"uid\":\"fc8b57b7-cc90-11ec-b784-8dfc726b351f\",      \"src_descriptor\":\"foreign_exchange-vanilla-forwards\",      \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\"   } }  Example of error response : {   \"error\":{      \"code\":70,      \"message\":\"Missing argument: rule name.\"   } }  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.mapping_service_add_mapping_rule(body, async_req=True)
        >>> result = thread.get()

        Args:
            body (TitaniumMappingRuleDefinition):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            TitaniumDescriptorPairBasedAcknowledgeResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['body'] = \
            body
        return self.mapping_service_add_mapping_rule_endpoint.call_with_http_info(**kwargs)

    def mapping_service_disable_mapping_rule(
        self,
        body,
        **kwargs
    ):
        """DisableMappingRule is used to disable a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a DescriptorPairBasedAcknowledgeResponse, which acknowledges the disablement of the mapping rule.  # noqa: E501

        Request: {  \"src_descriptor\":\"foreign_exchange-vanilla-options\",  \"dest_descriptor\":\"foreign_exchange-vanilla-options\"  \"scope\": \"Zbank1\" }  Response: {    \"data\": {        \"uid\": \"\",        \"src_descriptor\":\"foreign_exchange-vanilla-options\",        \"dest_descriptor\":\"foreign_exchange-vanilla-options\"    } }  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.mapping_service_disable_mapping_rule(body, async_req=True)
        >>> result = thread.get()

        Args:
            body (TitaniumDescriptorPairBasedGetDefinition):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            TitaniumDescriptorPairBasedAcknowledgeResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['body'] = \
            body
        return self.mapping_service_disable_mapping_rule_endpoint.call_with_http_info(**kwargs)

    def mapping_service_enable_mapping_rule(
        self,
        body,
        **kwargs
    ):
        """EnableMappingRule is used to enable a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a DescriptorPairBasedAcknowledgeResponse, which acknowledges the enablement of the mapping rule.  # noqa: E501

        Request: {  \"src_descriptor\":\"foreign_exchange-vanilla-options\",  \"dest_descriptor\":\"foreign_exchange-vanilla-options\"  \"scope\": \"Zbank1\" }  Response: {    \"data\": {        \"uid\": \"\",        \"src_descriptor\":\"foreign_exchange-vanilla-options\",        \"dest_descriptor\":\"foreign_exchange-vanilla-options\"    } }  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.mapping_service_enable_mapping_rule(body, async_req=True)
        >>> result = thread.get()

        Args:
            body (TitaniumDescriptorPairBasedGetDefinition):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            TitaniumDescriptorPairBasedAcknowledgeResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['body'] = \
            body
        return self.mapping_service_enable_mapping_rule_endpoint.call_with_http_info(**kwargs)

    def mapping_service_get_mapping_rule(
        self,
        body,
        **kwargs
    ):
        """GetMappingRule is used to retrieve a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a MappingRuleResponse, which includes information about the retrieved mapping rule.  # noqa: E501

        Example of request for regular user : {   \"identifier\":{      \"uid\":\"fc8b57b7-cc90-11ec-b784-8dfc726b351f\"   } } Or : {      \"src_descriptor\":\"foreign_exchange-vanilla-forwards\",      \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\" }  Example of request for Back Office : {   \"identifier\":{       \"uid\":\"fc8b57b7-cc90-11ec-b784-8dfc726b351f\"   },   \"scope\":\"bank1\" } Or : {   \"src_descriptor\":\"foreign_exchange-vanilla-forwards\",   \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\",   \"scope\":\"bank1\" }  Example of response : { \"data\": {  \"uid\": \"\",  \"srcDescriptor\": \"foreign_exchange-vanilla-options\",  \"destDescriptor\": \"foreign_exchange-vanilla-options\",  \"transformations\": [   {    \"name\": \"\",    \"targetColumn\": \"snap_date\",    \"sourceColumn\": \"submission_date\",    \"rule\": \"\",    \"description\": \"\"   }  ],  \"scope\": \"\" } }  Example of error response : {   \"error\":{      \"code\":70,      \"message\":\"Can't get mapping rule: [[empty] of service [MAPPINGRULESET] does not exist in namespace [bank1]].\"   } }  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.mapping_service_get_mapping_rule(body, async_req=True)
        >>> result = thread.get()

        Args:
            body (TitaniumDescriptorPairBasedGetDefinition):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            TitaniumMappingRuleResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['body'] = \
            body
        return self.mapping_service_get_mapping_rule_endpoint.call_with_http_info(**kwargs)

    def mapping_service_get_mapping_rule_version(
        self,
        scope,
        src_descriptor,
        dest_descriptor,
        version_id,
        **kwargs
    ):
        """GetMappingRuleVersion is used to retrieve a specific version of a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedVersionRequest object as its parameter, which includes the scope, source descriptor, destination descriptor, and version ID for the mapping rule. The response from it is a MappingRuleResponse, which includes information about the retrieved version of the mapping rule.  # noqa: E501

        Example of request : GET /api/v1/validation/rule/version/fx_fwd_1/fx_fwd_2/teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk=  Example of response : {   \"definition\":\"{\\\"src_descriptor\\\":\\\"foreign_exchange-vanilla-forwards\\\",\\\"dest_descriptor\\\":\\\"foreign_exchange-vanilla-forwards\\\",\\\"transformations\\\":[{\\\"targetColumnName\\\":\\\"submission_date\\\",\\\"sourceColumnName\\\":\\\"another_date\\\"},{\\\"rule\\\":\\\"{ \\\\\\\"$to_upper\\\\\\\": { \\\\\\\"$trim\\\\\\\" : \\\\\\\"fx_test_for_bank1.submission_asset\\\\\\\" }}\\\",\\\"targetColumnName\\\":\\\"submission_asset\\\", \\\"name\\\": \\\"upper case asset\\\", \\\"description\\\": \\\"i am optional...\\\"}]}\" }  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.mapping_service_get_mapping_rule_version(scope, src_descriptor, dest_descriptor, version_id, async_req=True)
        >>> result = thread.get()

        Args:
            scope (str):
            src_descriptor (str):
            dest_descriptor (str):
            version_id (str):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            TitaniumMappingRuleResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['scope'] = \
            scope
        kwargs['src_descriptor'] = \
            src_descriptor
        kwargs['dest_descriptor'] = \
            dest_descriptor
        kwargs['version_id'] = \
            version_id
        return self.mapping_service_get_mapping_rule_version_endpoint.call_with_http_info(**kwargs)

    def mapping_service_list_mapping_rule_versions(
        self,
        body,
        **kwargs
    ):
        """ListMappingRuleVersions is used to retrieve a list of all versions of a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a ListVersionResponse, which includes information about all versions of the mapping rule.  # noqa: E501

        Example of request : {  \"scope\": \"global\",  \"src_descriptor\":\"foreign_exchange-vanilla-options\",  \"dest_descriptor\":\"foreign_exchange-vanilla-options\" }  Example of response : {   \"data\":{      \"versions\":[         {            \"versionId\":\"EKc9bpBGCbLJmBqOpP0FTqtNusxgZrgCheGXj_MTj7A=\",            \"createdAt\":\"2022-05-05 11:33:59.0\"         },         {            \"versionId\":\"JKLFLkhV3SC-fqO0L-WTswr5ttHLfnvF8rMlLnkafAc=\",            \"createdAt\":\"2022-05-05 11:32:42.0\"         }      ]   } }  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.mapping_service_list_mapping_rule_versions(body, async_req=True)
        >>> result = thread.get()

        Args:
            body (TitaniumDescriptorPairBasedGetDefinition):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            TitaniumListVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['body'] = \
            body
        return self.mapping_service_list_mapping_rule_versions_endpoint.call_with_http_info(**kwargs)

    def mapping_service_list_mapping_rules(
        self,
        body,
        **kwargs
    ):
        """ListMappingRules is used to retrieve a list of all mapping rules in the system. It accepts a ListRequest object as its parameter, which includes optional parameters for filtering the results. The response from this it is a MappingRuleList, which includes information about all mapping rules in the system that match the provided filter parameters.  # noqa: E501

        Example of request : {   \"scope\":\"global\" } Or optionally use filter: {   \"scope\":\"global\",   \"filter\": \".*vanilla.*__.*vanilla.*\" // all mapping rules from any vanilla to any vanilla }  Example of response : {    \"data\": {        \"results\": [            {                \"uid\": \"Djqreg7gTs7CV2rSyyucOWCFjK7ldgS9yQX0o0rEiV0=\",                \"src_descriptor\": \"foreign_exchange-vanilla-forwards\",                \"dest_descriptor\": \"foreign_exchange-vanilla-forwards\"             },            {                \"uid\": \"Djqreg7gTs7CV2rSyyucOWCFjK7ldgS9yQX0o0rEiV0=\",                \"src_descriptor\": \"foreign_exchange-vanilla-options\",                \"dest_descriptor\": \"foreign_exchange-vanilla-options\"            }        ]    } }  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.mapping_service_list_mapping_rules(body, async_req=True)
        >>> result = thread.get()

        Args:
            body (TitaniumListRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            TitaniumMappingRuleList
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['body'] = \
            body
        return self.mapping_service_list_mapping_rules_endpoint.call_with_http_info(**kwargs)

