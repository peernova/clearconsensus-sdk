openapi: 3.0.1
info:
  title: clearconsensus-sdk
  version: 1.0.0
servers:
- url: //api-dev.clearconsensus.io/
paths:
  /api/v1/analytics/chart-data:
    post:
      operationId: ChartService_getChartData
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetChartDataRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetChartDataResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ChartService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/analytics/consensus/find:
    post:
      operationId: AnalyticsController_FindConsensusAnalytics
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGenericChartMetadataDataQuality'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGenericChartMetadataDataQualityResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: FindConsensusAnalytics returns analytics related to specific consensus
        according to request.
      tags:
      - AnalyticsController
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/analytics/consensus/get-all:
    post:
      operationId: AnalyticsController_GetAllConsensusAnalytics
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGenericChartMetadataDataQualityResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetAllConsensusAnalytics returns analytics related to all consensuses.
      tags:
      - AnalyticsController
      x-accepts: '*/*'
  /api/v1/analytics/data-quality-errors/find:
    post:
      operationId: AnalyticsController_FindDataQualityErrors
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGenericChartMetadataDataQuality'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGenericChartMetadataDataQualityResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: FindDataQualityErrors returns data quality errors according to request.
      tags:
      - AnalyticsController
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/analytics/data-quality-errors/get-all:
    post:
      operationId: AnalyticsController_GetAllDataQualityErrors
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGenericChartMetadataDataQualityResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetAllDataQualityErrors returns all existing data quality errors in
        the system.
      tags:
      - AnalyticsController
      x-accepts: '*/*'
  /api/v1/analytics/histogram/get-all:
    post:
      operationId: AnalyticsController_GetHistogram
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumHistogramResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetHistogram returns analytics(submission and consensus) represented
        by histogram according to request.
      tags:
      - AnalyticsController
      x-accepts: '*/*'
  /api/v1/analytics/predefined/filters:
    post:
      operationId: AnalyticsController_GetPredefinedFilter
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetPredefinedFiltersResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetPredefinedFilter returns pre defined filters according to request.
      tags:
      - AnalyticsController
      x-accepts: '*/*'
  /api/v1/analytics/table:
    post:
      operationId: ChartService_getTableData
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetChartDataRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetTableResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ChartService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/assets:
    post:
      operationId: AssetsService_Assets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumAssetsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAssetsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Assets returns asset from the system according to request.
      tags:
      - AssetsService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/assets/list:
    post:
      operationId: AssetsService_AssetsList
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumAssetsListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAssetsListResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: AssetsList return list of assets according to snap time.
      tags:
      - AssetsService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/calculator/run:
    post:
      operationId: AdminService_RunCalculator
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumRunCalculatorRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - AdminService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/challenge-details:
    post:
      operationId: ChallengeService_GetChallengeDetails
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetChallengeDetailsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetChallengeDetailsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/challenge/attachment_upload_urls:
    post:
      operationId: ChallengeService_GetChallengeAttachmentUploadUrl
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetAttachmentUploadUrlRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetAttachmentUploadUrlResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetChallengeAttachmentUploadUrl returns string that represents s3\
        \ URL that can be used to upload attachment for the challenge.\nThe file in\
        \ attachment can be any file that provides additional information about the\
        \ disputable outlier.\nNeed to specify asset ID, submitted ID and file name."
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/challenge/create:
    post:
      operationId: ChallengeService_ChallengeCreate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeCreateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumChallengeCreateResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: |-
        ChallengeCreate creates challenge in the system.(Initiate process by dealer)
        To create "challenger" needs to be authorised and challenge can be created only if one of their own submitted data points has been declared an outlier in the published Consensus.
        Need to specify asset and fill out evidence information.
        Returns response that contains ticket ID of the Challenge or the Error.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/challenge/form-meta:
    post:
      operationId: ChallengeService_ChallengeFormMeta
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeFormMetaRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumChallengeFormMetaResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: |-
        ChallengeFormMeta is used to request information(template) about the form fields required to submit a challenge for a specific asset and evidence type.
        Returns response with template with pre-filled data.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/challenge/freeze/status:
    post:
      operationId: ChallengeService_ChallengeFreezeStatus
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeFreezeStatusRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumStatusResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: |-
        ChallengeFreezeStatus returns StatusResponse that contains string that represents freeze status of challenges if the challenge process is stopped and nothing if the one is not.
        Challenge can be stopped by operator.Dealer can see the freeze status using this method.
        Need to specify consensus(where outliers exists) run timestamp.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/charts:
    post:
      operationId: ChartsService_Charts
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChartsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumChartsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Charts returns information about specific chart related to the specific
        asset.
      tags:
      - ChartsService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/charts/currencies:
    post:
      operationId: ChartsService_ChartsCurrencies
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChartsCurrenciesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumChartsCurrenciesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ChartsCurrencies returns information about the chart related to specific
        currency pair.
      tags:
      - ChartsService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/consensus:
    post:
      description: "This is a test of a different commenting type:\nBelow we will\
        \ be shown a placeholder for the Consensus RPC request.\n*sample input**\n\
        \n>`{`<br>\n>`   \"asset_id\": \"238917-2131-341ff\",`<br>\n>`   \"trace_name\"\
        : \"placeholder value\",`<br>\n>`   \"submitted_date\": \"238472301213\"`<br>\n\
        >`}`"
      operationId: ConsensusService_Consensus
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "Consensus return information about consensus according to request.\n\
        Need to specify consensus run timestamp, asset ID and etc.(See ConsensusRequest\
        \ definition)\nReturns ConsensusResponse that contains information about column\
        \ and rows related to consensus."
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/consensus-explorer/details:
    post:
      operationId: ConsensusService_ConsensusExplorerInstrumentDetails
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusExplorerInstrumentDetailsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-accepts: '*/*'
  /api/v1/consensus-explorer/range:
    post:
      operationId: ConsensusService_ConsensusExplorerRanges
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusExplorerRangeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-accepts: '*/*'
  /api/v1/consensus-explorer/table:
    post:
      operationId: ConsensusService_ConsensusExplorerTable
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusExplorerTableResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-accepts: '*/*'
  /api/v1/consensus-result-set-view:
    post:
      operationId: ConsensusService_CohortConsensusTab
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusTabRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusResultSetValuesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/consensus-result-set-view/submission-evidence:
    post:
      operationId: ConsensusService_SubmissionEvidenceTab
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusTabRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusResultSetValuesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/consensus-runs-view:
    post:
      operationId: ConsensusService_GetConsensusRuns
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetConsensusRunsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetConsensusRunsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get Consensus Run's consensus result sets
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/consensus/run:
    post:
      operationId: AdminService_RunConsensus
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumRunConsensusRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - AdminService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/consensus/timestamps:
    post:
      description: "This is a test to see how detailed we can make a RPC method's\
        \ documentation using this commenting type:\nBelow we will be shown sample\
        \ input for the ConsensusTimestamps endpoint.\n**sample input**\n\n>`{`<br>\n\
        >`   \"asset_id\": \"238917-2131-341ff\",`<br>\n>`   \"trace_name\": \"placeholder\
        \ value\"`<br>\n>`}`"
      operationId: ConsensusService_ConsensusTimestamps
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusTimestampsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusTimestampsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: |-
        ConsensusTimestamps returns timestamps when it was submitted.
        Need to specify asset ID and trace name.
        Returns ConsensusTimestampsResponse that contains all the timestamps related to specified asset ID.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/customfunction/add:
    post:
      operationId: CustomFunctionService_AddCustomFunction
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumCustomFunction'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: AddCustomFunction allows the user to create a new custom function by
        sending a CustomFunction message. It returns an AcknowledgeResponse indicating
        whether the custom function was successfully added or not.
      tags:
      - CustomFunctionService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/customfunction/get:
    post:
      operationId: CustomFunctionService_GetCustomFunction
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumCustomFunctionGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumCustomFunctionDefinitionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetCustomFunction retrieves the definition of a specific custom function.\
        \ The custom function is specified in the CustomFunctionGetDefinition message,\
        \ which includes its ID and scope. The method returns a CustomFunctionDefinitionResponse\
        \ that contains either the custom function definition or an error."
      tags:
      - CustomFunctionService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/customfunction/list:
    post:
      operationId: CustomFunctionService_ListCustomFunctions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListCustomFunctionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListCustomFunctionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListCustomFunctions lists all the custom functions that match the\
        \ specified criteria. The criteria are defined in the ListCustomFunctionRequest\
        \ message, which includes the descriptor name and the type of the custom function\
        \ descriptor. The method returns a ListCustomFunctionResponse that contains\
        \ either a list of custom functions or an error."
      tags:
      - CustomFunctionService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/customfunction/versions:
    post:
      operationId: CustomFunctionService_ListCustomFunctionVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListCustomFunctionVersions lists all the versions of a specific custom\
        \ function. The custom function is specified in the GetDefinition message,\
        \ which includes its ID and scope. The method returns a ListVersionResponse\
        \ that contains either a list of versions or an error."
      tags:
      - CustomFunctionService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/data-quality-errors:
    post:
      operationId: DataQualityService_GetDataQualityErrors
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDataQualityErrorsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetDataQualityErrorsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DataQualityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/dataprocessingapp/run:
    post:
      operationId: DataProcessingAppService_RunDataProcessingApp
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumRunDataProcessingAppRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumRunDataProcessingAppResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: RunDataProcessingApp triggers jobs that are responsible to processing
        of received data.
      tags:
      - DataProcessingAppService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/db/descriptor/add:
    post:
      operationId: DbDescriptorService_AddDbDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDescriptorDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/db/descriptor/dependencies:
    post:
      operationId: DbDescriptorService_DescriptorDependencies
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorDependenciesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/db/descriptor/disable:
    post:
      operationId: DbDescriptorService_DisableDbDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEnableDisableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/db/descriptor/enable:
    post:
      operationId: DbDescriptorService_EnableDbDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEnableDisableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/db/descriptor/get:
    post:
      operationId: DbDescriptorService_GetDbDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorDefinitionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/db/descriptor/list:
    post:
      operationId: DbDescriptorService_ListDbDescriptors
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorList'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/db/descriptor/version/{name}/{versionId}:
    get:
      operationId: DbDescriptorService_GetDbDescriptorVersion
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: descriptorName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorDefinitionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-accepts: '*/*'
  /api/v1/db/descriptor/versions:
    post:
      operationId: DbDescriptorService_ListDbDescriptorVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DbDescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/descriptor/add:
    post:
      description: "Example of request for regular user :\n{\n  \"name\":\"foreign_exchange-vanilla-forwards\"\
        ,\n  \"fields\":[\n     {\n[data]=\"typeEnumToDisplayName[cellData]\"v   \
        \     \"name\":\"submission_date\",\n        \"nullable\":true,\n        \"\
        type\":\"string\"\n     },\n     {\n        \"name\":\"submission_asset\"\
        ,\n        \"nullable\":true,\n        \"type\":\"string\"\n     }\n  ]\n\
        }\n\nExample of request for Back Office :\n{\n  \"name\":\"foreign_exchange-vanilla-forwards\"\
        ,\n  \"scope\": \"global\",\n  \"fields\":[\n     {\n        \"name\":\"snap_date\"\
        ,\n        \"alias\":\"snap_date\",\n        \"type\":\"date\",\n        \"\
        options\":{\n           \"format\":\"MM/dd/yy\"\n        }\n     },\n    \
        \ {\n        \"name\":\"asset\",\n        \"alias\":\"asset\",\n        \"\
        type\":\"string\"\n     },\n     {\n       \"name\": \"sub-asset\",\n    \
        \   \"alias\": \"sub-asset\",\n       \"type\": \"string\"\n     }\n  ]\n\
        }\n\nExample of response :\n{\n  \"data\":{\n     \"uid\":\"98fd0526-cc88-11ec-b784-0fe7a41b45e0\"\
        ,\n     \"name\":\"foreign_exchange-vanilla-forwards\"\n  }\n}\n\nExample\
        \ of error response :\n{\n  \"error\":{\n     \"code\":70,\n     \"message\"\
        :\"Can't add descriptor: [com.peernova.api.searchmetadata.metadata.exceptions.MetaDataServiceException:\
        \ Namespace [bank11] is not valid].\"\n  }\n}"
      operationId: DescriptorService_AddDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDescriptorDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "AddDescriptor is used to add specific descriptor with specific definition\
        \ to the system.\nRegular users can store a descriptor within their own scope,\
        \ and any attempts to push it to a different scope will be declined.\nBack\
        \ office users can store descriptors in any scope, provided that a scope key\
        \ is provided.\nThe name of the descriptor must match the name of the asset\
        \ class to be mapped correctly.\nIf a descriptor with the same name already\
        \ exists, it will be updated."
      tags:
      - DescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/descriptor/dependencies:
    post:
      operationId: DescriptorService_DescriptorDependencies
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorDependenciesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/descriptor/disable:
    post:
      operationId: DescriptorService_DisableDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEnableDisableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "DisableDescriptor is used to disable specific descriptor.\nExample\
        \ of response :\n{\n   \"data\": {\n       \"uid\": \"\",\n       \"name\"\
        : \"foreign_exchange-vanilla-forwards\"\n   }\n}"
      tags:
      - DescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/descriptor/enable:
    post:
      description: "Example of request :\n{\n \"name\" : \"foreign_exchange-vanilla-forwards\"\
        ,\n \"scope\": \"global\"\n}\n\nExample of response :\n{\n   \"data\": {\n\
        \       \"uid\": \"\",\n       \"name\": \"foreign_exchange-vanilla-forwards\"\
        \n   }\n}"
      operationId: DescriptorService_EnableDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEnableDisableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: EnableDescriptor is used to enable specific descriptor.
      tags:
      - DescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/descriptor/get:
    post:
      description: "Example of request :\n{\n  \"identifier\":{\n     \"name\":\"\
        foreign_exchange-vanilla-forwards\"\n  },\n  \"scope\":\"global\"\n}\n\nExample\
        \ of response :\n{\n   \"data\": \"{\\\"name\\\":\\\"foreign_exchange-vanilla-forwards\\\
        \",\\\"fields\\\":[{\\\"name\\\":\\\"snap_date\\\",\\\"type\\\":\\\"date\\\
        \",\\\"options\\\":{\\\"format\\\":\\\"MM/dd/yy\\\"},\\\"alias\\\":\\\"snap_date\\\
        \"},{\\\"name\\\":\\\"asset\\\",\\\"type\\\":\\\"string\\\",\\\"alias\\\"\
        :\\\"asset\\\"},{\\\"name\\\":\\\"sub-asset\\\",\\\"type\\\":\\\"string\\\"\
        ,\\\"alias\\\":\\\"sub-asset\\\"},{\\\"name\\\":\\\"service\\\",\\\"type\\\
        \":\\\"string\\\",\\\"nullable\\\":true,\\\"alias\\\":\\\"service\\\"},{\\\
        \"name\\\":\\\"snap_time\\\",\\\"type\\\":\\\"string\\\",\\\"alias\\\":\\\"\
        snap_time\\\"},{\\\"name\\\":\\\"curr_1\\\",\\\"type\\\":\\\"string\\\",\\\
        \"alias\\\":\\\"curr_1\\\"},{\\\"name\\\":\\\"curr_2\\\",\\\"type\\\":\\\"\
        string\\\",\\\"alias\\\":\\\"curr_2\\\"},{\\\"name\\\":\\\"onshore_offshore_curr_1\\\
        \",\\\"type\\\":\\\"string\\\",\\\"nullable\\\":true,\\\"alias\\\":\\\"onshore_offshore_curr_1\\\
        \"},{\\\"name\\\":\\\"onshore_offshore_curr_2\\\",\\\"type\\\":\\\"string\\\
        \",\\\"nullable\\\":true,\\\"alias\\\":\\\"onshore_offshore_curr_2\\\"},{\\\
        \"name\\\":\\\"instrument_type\\\",\\\"type\\\":\\\"string\\\",\\\"alias\\\
        \":\\\"instrument_type\\\"},{\\\"name\\\":\\\"tenor\\\",\\\"type\\\":\\\"\
        string\\\",\\\"nullable\\\":true,\\\"alias\\\":\\\"tenor\\\"},{\\\"name\\\"\
        :\\\"value_source\\\",\\\"type\\\":\\\"string\\\",\\\"nullable\\\":true,\\\
        \"alias\\\":\\\"value_source\\\"},{\\\"name\\\":\\\"fwrd_conversion_factor\\\
        \",\\\"type\\\":\\\"double\\\",\\\"nullable\\\":true,\\\"alias\\\":\\\"fwrd_conversion_factor\\\
        \"},{\\\"name\\\":\\\"mid_fwrd_outright\\\",\\\"type\\\":\\\"double\\\",\\\
        \"nullable\\\":true,\\\"alias\\\":\\\"mid_fwrd_outright\\\"},{\\\"name\\\"\
        :\\\"value_source_ref_id\\\",\\\"type\\\":\\\"string\\\",\\\"nullable\\\"\
        :true,\\\"alias\\\":\\\"value_source_ref_id\\\"},{\\\"name\\\":\\\"client\\\
        \",\\\"type\\\":\\\"string\\\",\\\"alias\\\":\\\"client\\\"},{\\\"name\\\"\
        :\\\"spot_reference_price\\\",\\\"type\\\":\\\"double\\\",\\\"nullable\\\"\
        :true,\\\"alias\\\":\\\"spot_reference_price\\\"},{\\\"name\\\":\\\"mid_fwrd_points\\\
        \",\\\"type\\\":\\\"double\\\",\\\"alias\\\":\\\"mid_fwrd_points\\\"}]}\"\n\
        }\n\nExample of error response :\n{\n   \"error\": {\n       \"code\": 70,\n\
        \       \"message\": \"Can't get descriptor: [[foreign_exchange-vanilla-forwards1]\
        \ of service [DESCRIPTOR] does not exist in namespace [global]].\"\n   }\n\
        }"
      operationId: DescriptorService_GetDescriptor
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorDefinitionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: |-
        GetDescriptor is used to get specific descriptor definition based on get definition.
        Regular users can retrieve only their own descriptors and descriptors associated with asset classes.
        Back office users can retrieve any of the existing descriptors.
      tags:
      - DescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/descriptor/list:
    post:
      description: "Example of request :\n{\n  \"scope\":\"global\"\n}\n\nExample\
        \ of response :\n{\n   \"data\": {\n       \"results\": [\n           {\n\
        \               \"uid\": \"\",\n               \"name\": \"foreign_exchange-vanilla-options\"\
        \n           },\n           {\n               \"uid\": \"\",\n           \
        \    \"name\": \"foreign_exchange-exotics-barriers_and_digitals\"\n      \
        \     },\n           {\n               \"uid\": \"\",\n               \"name\"\
        : \"foreign_exchange-exotics-tarfs\"\n           }\n       ]\n   }\n}"
      operationId: DescriptorService_ListDescriptors
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorList'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListDescriptors returns list of specific descriptors according to request.
      tags:
      - DescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/descriptor/version/{scope}/{name}/{versionId}:
    get:
      description: "Example of response :\n{\n\"data\":\"{\\\"name\\\":\\\"fx_test_for_bank1\\\
        \",\\\"fields\\\":[{\\\"name\\\":\\\"submission_date\\\",\\\"type\\\":\\\"\
        date\\\",\\\"options\\\":{\\\"format\\\":\\\"MM/dd/yyyy\\\"},\\\"alias\\\"\
        :\\\"date12\\\"},{\\\"name\\\":\\\"submission_asset\\\",\\\"type\\\":\\\"\
        string\\\",\\\"nullable\\\":true}],\\\"options\\\":{\\\"DEDUPLICATION\\\"\
        :{\\\"GROUP_BY\\\":[\\\"submission_date\\\",\\\"submission_asset\\\"]}}}\"\
        \n}"
      operationId: DescriptorService_GetDescriptorVersion
      parameters:
      - explode: false
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: descriptorName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorDefinitionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetDescriptorVersion returns current version of the specific descriptor.
      tags:
      - DescriptorService
      x-accepts: '*/*'
  /api/v1/descriptor/versions:
    post:
      description: "Example of request :\n{\n  \"scope\":\"global\",\n  \"identifier\"\
        :{\n     \"name\":\"foreign_exchange-vanilla-forwards\"\n  }\n}\n\nExample\
        \ of response : {\n   \"data\": {\n       \"versions\": [\n           {\n\
        \               \"versionId\": \"fM9AukEqTJXKOcbW_tQ7Sfr4Clp5qinKq_liXZYzyiI=\"\
        ,\n               \"createdAt\": \"2022-06-14 10:57:42.0\"\n           },\n\
        \           {\n               \"versionId\": \"LmVlkPbnsUKFBw8qIbUHEzBsRrcnG_BSMnopA5Ptd7I=\"\
        ,\n               \"createdAt\": \"2022-06-14 10:20:48.0\"\n           }\n\
        \       ]\n   }\n}"
      operationId: DescriptorService_ListDescriptorVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListDescriptorVersions returns list of version of the specific descriptor
        versions.
      tags:
      - DescriptorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/dqerrors:
    post:
      operationId: DataQualityService_DQErrors
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDQErrorsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDQErrorsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DataQualityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/dtcc/tab:
    post:
      operationId: DtccService_GetDtccTable
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDtccTabRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDtccTabResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DtccService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/entity/add:
    post:
      operationId: MetadataEntityService_AddEntity
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEntityDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - MetadataEntityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/entity/disable:
    post:
      operationId: MetadataEntityService_DisableEntity
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEntityIdentifier'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - MetadataEntityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/entity/enable:
    post:
      operationId: MetadataEntityService_EnableEntity
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEntityIdentifier'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - MetadataEntityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/entity/get:
    post:
      operationId: MetadataEntityService_GetEntity
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEntityIdentifier'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumEntityDefinition'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - MetadataEntityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/evaluated-price:
    post:
      operationId: ConsensusService_EvaluatedPrice
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEVPRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumEVPResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/export:
    post:
      operationId: DataService_Export
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumExportRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumExportResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Export exports data according to the request.
      tags:
      - DataService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/file-history:
    post:
      operationId: FileService_FileHistory
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumFileHistoryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumFileHistoryResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: FileHistory retrieves the history for a specified file.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/file-submission:
    post:
      operationId: FileService_FileSubmission
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumFileSubmissionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: FileSubmission submits a file for processing.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/import/list:
    post:
      operationId: FileService_ListFiles
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumFileList'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListFiles retrieves a list of files.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/import/{fileIdentifier.filename}/delimiter:
    post:
      operationId: FileService_SetFileDelimiter
      parameters:
      - explode: false
        in: path
        name: fileIdentifier.filename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumSetFileDelimiterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: SetFileDelimiter sets the delimiter for a specified file.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/import/{fileIdentifier.filename}/descriptor:
    post:
      operationId: FileService_SetFileDescriptor
      parameters:
      - explode: false
        in: path
        name: fileIdentifier.filename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumSetFileDescriptorRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: SetFileDescriptor sets the descriptor for a specified file.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/import/{filename}:
    post:
      operationId: FileService_GetFilePreview
      parameters:
      - explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FileService_GetFilePreview_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumFilePreview'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetFilePreview retrieves a preview of a specified file.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/import/{filename}/delimiter:
    post:
      operationId: FileService_GetFileDelimiter
      parameters:
      - explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FileService_GetFilePreview_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumFileDelimiterSetting'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetFileDelimiter retrieves the delimiter for a specified file.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/import/{filename}/descriptor:
    post:
      operationId: FileService_GetFileDescriptor
      parameters:
      - explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FileService_GetFilePreview_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumFileDescriptorSetting'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetFileDescriptor retrieves the descriptor for a specified file.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/internal/upload/authorize:
    post:
      operationId: DataService_AuthorizeUpload
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUploadURLRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUploadAuthorizationResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: AuthorizeUpload shows availability of uploading for user.
      tags:
      - DataService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/internal/upload/notify:
    post:
      operationId: DataService_NotifyUpload
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUploadNotifyRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: NotifyUpload returns message with notify that data was uploaded according
        to url in request.
      tags:
      - DataService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/kv/add:
    post:
      operationId: KVService_AddKey
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumKVAsset'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumKVOperationResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - KVService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/kv/delete:
    post:
      operationId: KVService_DeleteKey
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumKVRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumKVOperationResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - KVService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/kv/get:
    post:
      operationId: KVService_GetKey
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumKVRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetKVResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - KVService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/kv/list:
    post:
      operationId: KVService_ListKeys
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListKVRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListKVResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - KVService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/kv/update:
    post:
      operationId: KVService_UpdateKey
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumKVAsset'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumKVOperationResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - KVService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/list/field-values:
    post:
      operationId: SupportedFieldsService_GetSupportedFieldsValues
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumSupportedField'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetFieldValuesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - SupportedFieldsService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/list/fields:
    post:
      operationId: SupportedFieldsService_ListSupportedFields
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetSupportedFields'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetSupportedFieldsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - SupportedFieldsService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/login:
    post:
      operationId: LoginService_Login
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumLoginRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumLoginResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - LoginService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/lookuptable/add:
    post:
      operationId: LookupTableService_AddLookupTable
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumAddLookupTableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - LookupTableService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/lookuptable/disable:
    post:
      operationId: LookupTableService_DisableLookupTable
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEnableDisableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - LookupTableService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/lookuptable/enable:
    post:
      operationId: LookupTableService_EnableLookupTable
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEnableDisableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - LookupTableService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/lookuptable/get:
    post:
      operationId: LookupTableService_GetLookupTable
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetLookupTableResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - LookupTableService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/lookuptable/list:
    post:
      operationId: LookupTableService_ListLookupTables
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListLookupTableResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - LookupTableService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/lookuptable/versions:
    post:
      operationId: LookupTableService_ListLookupTableVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - LookupTableService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/mapping/rule/add:
    post:
      description: "Example of request for regular user :\n{\n  \"src_descriptor\"\
        :\"foreign_exchange-vanilla-forwards\",\n  \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\"\
        ,\n  \"transformations\":[\n     {\n        \"targetColumn\":\"submission_date\"\
        ,\n        \"sourceColumn\":\"date\"\n     },\n     {\n        \"targetColumn\"\
        :\"submission_asset\",\n        \"rule\":\"{ \\\"$to_upper\\\": { \\\"$trim\\\
        \" : \\\"fx_test_for_bank1.submission_asset\\\" }}\",\n        \"name\": \"\
        upper case asset\",\n        \"description\": \"i am optional...\"\n     }\n\
        \  ]\n}\n\nExample of request for Back Office :\n{\n  \"src_descriptor\":\"\
        foreign_exchange-vanilla-forwards\",\n  \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\"\
        ,\n  \"scope\":\"global\",\n  \"transformations\":[\n     {\n        \"targetColumn\"\
        :\"submission_date\",\n        \"sourceColumn\":\"another_date\"\n     },\n\
        \     {\n        \"targetColumn\":\"submission_asset\",\n        \"rule\"\
        :\"{ \\\"$to_upper\\\": { \\\"$trim\\\" : \\\"fx_test_for_bank1.submission_asset\\\
        \" }}\",\n        \"name\": \"upper case asset\",\n        \"description\"\
        : \"i am optional...\"\n     }\n  ]\n}\n\nExample of response :\n{\n  \"data\"\
        :{\n     \"uid\":\"fc8b57b7-cc90-11ec-b784-8dfc726b351f\",\n     \"src_descriptor\"\
        :\"foreign_exchange-vanilla-forwards\",\n     \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\"\
        \n  }\n}\n\nExample of error response :\n{\n  \"error\":{\n     \"code\":70,\n\
        \     \"message\":\"Missing argument: rule name.\"\n  }\n}"
      operationId: MappingService_AddMappingRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumMappingRuleDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorPairBasedAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "AddMappingRule AddMappingRule is an API used to add a specific mapping\
        \ rule to the system.\nThe name provided for the mapping rule must match the\
        \ asset class and descriptor names.\nIf a mapping rule with the same name\
        \ already exists, it will be updated.\nThis API accepts a MappingRuleDefinition\
        \ object as its parameter,which includes information about the mapping rule\
        \ being added.\nThe response from this API is a DescriptorPairBasedAcknowledgeResponse,which\
        \ acknowledges the addition of the mapping rule."
      tags:
      - MappingService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/mapping/rule/disable:
    post:
      description: "Request:\n{\n \"src_descriptor\":\"foreign_exchange-vanilla-options\"\
        ,\n \"dest_descriptor\":\"foreign_exchange-vanilla-options\"\n \"scope\":\
        \ \"Zbank1\"\n}\n\nResponse:\n{\n   \"data\": {\n       \"uid\": \"\",\n \
        \      \"src_descriptor\":\"foreign_exchange-vanilla-options\",\n       \"\
        dest_descriptor\":\"foreign_exchange-vanilla-options\"\n   }\n}"
      operationId: MappingService_DisableMappingRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDescriptorPairBasedGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorPairBasedAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "DisableMappingRule is used to disable a mapping rule for a given descriptor\
        \ pair.\nIt accepts a DescriptorPairBasedGetDefinition object as its parameter,\
        \ which specifies the source and destination descriptors for the mapping rule.\n\
        The response from this it is a DescriptorPairBasedAcknowledgeResponse, which\
        \ acknowledges the disablement of the mapping rule."
      tags:
      - MappingService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/mapping/rule/enable:
    post:
      description: "Request:\n{\n \"src_descriptor\":\"foreign_exchange-vanilla-options\"\
        ,\n \"dest_descriptor\":\"foreign_exchange-vanilla-options\"\n \"scope\":\
        \ \"Zbank1\"\n}\n\nResponse:\n{\n   \"data\": {\n       \"uid\": \"\",\n \
        \      \"src_descriptor\":\"foreign_exchange-vanilla-options\",\n       \"\
        dest_descriptor\":\"foreign_exchange-vanilla-options\"\n   }\n}"
      operationId: MappingService_EnableMappingRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDescriptorPairBasedGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumDescriptorPairBasedAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "EnableMappingRule is used to enable a mapping rule for a given descriptor\
        \ pair.\nIt accepts a DescriptorPairBasedGetDefinition object as its parameter,\
        \ which specifies the source and destination descriptors for the mapping rule.\n\
        The response from this it is a DescriptorPairBasedAcknowledgeResponse, which\
        \ acknowledges the enablement of the mapping rule."
      tags:
      - MappingService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/mapping/rule/get:
    post:
      description: "Example of request for regular user :\n{\n  \"identifier\":{\n\
        \     \"uid\":\"fc8b57b7-cc90-11ec-b784-8dfc726b351f\"\n  }\n}\nOr :\n{\n\
        \     \"src_descriptor\":\"foreign_exchange-vanilla-forwards\",\n     \"dest_descriptor\"\
        :\"foreign_exchange-vanilla-forwards\"\n}\n\nExample of request for Back Office\
        \ :\n{\n  \"identifier\":{\n      \"uid\":\"fc8b57b7-cc90-11ec-b784-8dfc726b351f\"\
        \n  },\n  \"scope\":\"bank1\"\n}\nOr :\n{\n  \"src_descriptor\":\"foreign_exchange-vanilla-forwards\"\
        ,\n  \"dest_descriptor\":\"foreign_exchange-vanilla-forwards\",\n  \"scope\"\
        :\"bank1\"\n}\n\nExample of response :\n{\n\"data\": {\n \"uid\": \"\",\n\
        \ \"srcDescriptor\": \"foreign_exchange-vanilla-options\",\n \"destDescriptor\"\
        : \"foreign_exchange-vanilla-options\",\n \"transformations\": [\n  {\n  \
        \ \"name\": \"\",\n   \"targetColumn\": \"snap_date\",\n   \"sourceColumn\"\
        : \"submission_date\",\n   \"rule\": \"\",\n   \"description\": \"\"\n  }\n\
        \ ],\n \"scope\": \"\"\n}\n}\n\nExample of error response :\n{\n  \"error\"\
        :{\n     \"code\":70,\n     \"message\":\"Can't get mapping rule: [[empty]\
        \ of service [MAPPINGRULESET] does not exist in namespace [bank1]].\"\n  }\n\
        }"
      operationId: MappingService_GetMappingRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDescriptorPairBasedGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMappingRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetMappingRule is used to retrieve a mapping rule for a given descriptor\
        \ pair.\nIt accepts a DescriptorPairBasedGetDefinition object as its parameter,\
        \ which specifies the source and destination descriptors for the mapping rule.\n\
        The response from this it is a MappingRuleResponse, which includes information\
        \ about the retrieved mapping rule."
      tags:
      - MappingService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/mapping/rule/list:
    post:
      description: "Example of request :\n{\n  \"scope\":\"global\"\n}\nOr optionally\
        \ use filter:\n{\n  \"scope\":\"global\",\n  \"filter\": \".*vanilla.*__.*vanilla.*\"\
        \ // all mapping rules from any vanilla to any vanilla\n}\n\nExample of response\
        \ :\n{\n   \"data\": {\n       \"results\": [\n           {\n            \
        \   \"uid\": \"Djqreg7gTs7CV2rSyyucOWCFjK7ldgS9yQX0o0rEiV0=\",\n         \
        \      \"src_descriptor\": \"foreign_exchange-vanilla-forwards\",\n      \
        \         \"dest_descriptor\": \"foreign_exchange-vanilla-forwards\"\n\n \
        \          },\n           {\n               \"uid\": \"Djqreg7gTs7CV2rSyyucOWCFjK7ldgS9yQX0o0rEiV0=\"\
        ,\n               \"src_descriptor\": \"foreign_exchange-vanilla-options\"\
        ,\n               \"dest_descriptor\": \"foreign_exchange-vanilla-options\"\
        \n           }\n       ]\n   }\n}"
      operationId: MappingService_ListMappingRules
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMappingRuleList'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListMappingRules is used to retrieve a list of all mapping rules in\
        \ the system.\nIt accepts a ListRequest object as its parameter, which includes\
        \ optional parameters for filtering the results.\nThe response from this it\
        \ is a MappingRuleList, which includes information about all mapping rules\
        \ in the system that match the provided filter parameters."
      tags:
      - MappingService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/mapping/rule/version/{scope}/{srcDescriptor}/{destDescriptor}/{versionId}:
    get:
      description: "Example of request : GET /api/v1/validation/rule/version/fx_fwd_1/fx_fwd_2/teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk=\n\
        \nExample of response :\n{\n  \"definition\":\"{\\\"src_descriptor\\\":\\\"\
        foreign_exchange-vanilla-forwards\\\",\\\"dest_descriptor\\\":\\\"foreign_exchange-vanilla-forwards\\\
        \",\\\"transformations\\\":[{\\\"targetColumnName\\\":\\\"submission_date\\\
        \",\\\"sourceColumnName\\\":\\\"another_date\\\"},{\\\"rule\\\":\\\"{ \\\\\
        \\\"$to_upper\\\\\\\": { \\\\\\\"$trim\\\\\\\" : \\\\\\\"fx_test_for_bank1.submission_asset\\\
        \\\\\" }}\\\",\\\"targetColumnName\\\":\\\"submission_asset\\\", \\\"name\\\
        \": \\\"upper case asset\\\", \\\"description\\\": \\\"i am optional...\\\"\
        }]}\"\n}"
      operationId: MappingService_GetMappingRuleVersion
      parameters:
      - explode: false
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: srcDescriptor
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: destDescriptor
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMappingRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetMappingRuleVersion is used to retrieve a specific version of a\
        \ mapping rule for a given descriptor pair.\nIt accepts a DescriptorPairBasedVersionRequest\
        \ object as its parameter, which includes the scope, source descriptor, destination\
        \ descriptor, and version ID for the mapping rule.\nThe response from it is\
        \ a MappingRuleResponse, which includes information about the retrieved version\
        \ of the mapping rule."
      tags:
      - MappingService
      x-accepts: '*/*'
  /api/v1/mapping/rule/versions:
    post:
      description: "Example of request :\n{\n \"scope\": \"global\",\n \"src_descriptor\"\
        :\"foreign_exchange-vanilla-options\",\n \"dest_descriptor\":\"foreign_exchange-vanilla-options\"\
        \n}\n\nExample of response :\n{\n  \"data\":{\n     \"versions\":[\n     \
        \   {\n           \"versionId\":\"EKc9bpBGCbLJmBqOpP0FTqtNusxgZrgCheGXj_MTj7A=\"\
        ,\n           \"createdAt\":\"2022-05-05 11:33:59.0\"\n        },\n      \
        \  {\n           \"versionId\":\"JKLFLkhV3SC-fqO0L-WTswr5ttHLfnvF8rMlLnkafAc=\"\
        ,\n           \"createdAt\":\"2022-05-05 11:32:42.0\"\n        }\n     ]\n\
        \  }\n}"
      operationId: MappingService_ListMappingRuleVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumDescriptorPairBasedGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListMappingRuleVersions is used to retrieve a list of all versions\
        \ of a mapping rule for a given descriptor pair.\nIt accepts a DescriptorPairBasedGetDefinition\
        \ object as its parameter, which specifies the source and destination descriptors\
        \ for the mapping rule.\nThe response from this it is a ListVersionResponse,\
        \ which includes information about all versions of the mapping rule."
      tags:
      - MappingService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/market/snap-time:
    get:
      operationId: MarketService_MarketSnapTime
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMarketSnapTimeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: MarketSnapTime returns time for which the prices(calculated in consensus)
        are valid.(Time of market closing)
      tags:
      - MarketService
      x-accepts: '*/*'
  /api/v1/normalization/rule/add:
    post:
      operationId: NormalizationService_AddNormalizationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumNormalizationRuleDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - NormalizationService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/normalization/rule/disable:
    post:
      operationId: NormalizationService_DisableNormalizationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - NormalizationService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/normalization/rule/enable:
    post:
      operationId: NormalizationService_EnableNormalizationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - NormalizationService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/normalization/rule/get:
    post:
      operationId: NormalizationService_GetNormalizationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumNormalizationRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - NormalizationService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/normalization/rule/list:
    post:
      operationId: NormalizationService_ListNormalizationRules
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - NormalizationService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/normalization/rule/version/{descriptorName}/{versionId}:
    get:
      operationId: NormalizationService_GetNormalizationRuleVersion
      parameters:
      - explode: false
        in: path
        name: descriptorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumNormalizationRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - NormalizationService
      x-accepts: '*/*'
  /api/v1/normalization/rule/versions:
    post:
      operationId: NormalizationService_ListNormalizationRuleVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - NormalizationService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/onboard:
    post:
      operationId: AdminService_OnBoard
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumOnBoardRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - AdminService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator-outliers:
    post:
      operationId: OperatorServicePrivate_OperatorOutliers
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumOperatorOutliersRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumOperatorOutliersResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/add/field-values:
    post:
      operationId: OperatorServicePrivate_AddSupportedFields
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumSupportedFieldsValues'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/assets:
    post:
      operationId: OperatorServicePrivate_Assets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumAssetsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAssetsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/assets/add:
    post:
      operationId: OperatorServicePrivate_AddAsset
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumAddAssetRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: AddAsset adds asset to the system.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/challenge/active:
    post:
      operationId: ChallengeService_ChallengeActive
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeActiveRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumChallengeActiveResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ChallengeActive returns active challenges(according to request) in
        active status(challenge process is active).
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/challenge/decision:
    post:
      operationId: ChallengeService_ChallengeDecision
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeDecisionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ChallengeDecision sets decision of the challenge according to request.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/challenge/freeze:
    post:
      operationId: ChallengeService_ChallengeFreezeAction
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeFreezeActionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ChallengeFreezeAction makes challenge process stopped or not according
        to request.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/challenge/history:
    post:
      operationId: ChallengeService_ChallengeHistory
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeHistoryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumChallengeHistoryResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ChallengeHistory return already closed challenges according to request.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/challenge/list:
    post:
      operationId: ChallengeService_ChallengeList
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumChallengeListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumChallengeListResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ChallengeList returns list of challenges according to request.
      tags:
      - ChallengeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/client/add:
    post:
      operationId: OperatorServicePrivate_AddClient
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumClientName'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/client/list:
    get:
      operationId: OperatorServicePrivate_ListClients
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListClientsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-accepts: '*/*'
  /api/v1/operator/consensus/active:
    post:
      operationId: ConsensusService_ConsensusActive
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusActiveRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusActiveResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/consensus/decision:
    post:
      operationId: ConsensusService_ConsensusDecision
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusDecisionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/consensus/history:
    post:
      operationId: ConsensusService_ConsensusHistory
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusHistoryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusHistoryResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/consensus/publish:
    post:
      operationId: ConsensusService_ConsensusPublish
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusPublishRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/consensus/to-publish:
    post:
      operationId: ConsensusService_ConsensusToPublish
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumConsensusToPublishRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusToPublishResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/create/field-values:
    post:
      operationId: OperatorServicePrivate_CreateSupportedFields
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumSupportedFieldsValues'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/delete/field-values:
    post:
      operationId: OperatorServicePrivate_DeleteSupportedFields
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumSupportedFieldsValues'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/dtcc-trades/upload:
    post:
      operationId: OperatorServicePrivate_UploadDTCC
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUploadDTCCRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUploadURLResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/evaluated-prices/slice:
    post:
      operationId: OperatorServicePrivate_EvpStatuses
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumEvpStatusesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumEvpStatusesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/evp/upload:
    post:
      operationId: OperatorServicePrivate_UploadEVP
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUploadEVPRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUploadURLResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/outliers:
    post:
      operationId: OperatorServicePrivate_Outliers
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumOutliersRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumOutliersResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/recentassets:
    post:
      operationId: OperatorServicePrivate_RecentAssets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumRecentAssetsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumRecentAssetsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/operator/report:
    post:
      operationId: OperatorServicePrivate_ExportReport
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumExportReportRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumExportResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ExportReport returns pre signed s3 urls which can be used for export
        report(and compression type)
      tags:
      - OperatorServicePrivate
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/outliers:
    post:
      operationId: OutliersService_Outliers
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumOutliersRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumOutliersResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Outliers returns outliers according to request.
      tags:
      - OutliersService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/outliers-list:
    post:
      operationId: ConsensusService_ConsensusOutliers
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumOutliersListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumConsensusActiveResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: |-
        ConsensusOutliers return list of outliers according to specified consensus.
        Need to identify consensus tun timestamp and etc.(Described in OutliersListRequest)
        Return ConsensusActiveResponse that contains active consensuses with specified run timestamp.
      tags:
      - ConsensusService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/popup-view:
    post:
      operationId: PopUpService_PopUpView
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumPopUpViewRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumPopUpViewResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: PopUpView returns information according to request for the popup view.
      tags:
      - PopUpService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/raw-file:
    post:
      operationId: FileService_GetFileExportUrl
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetFileExportUrlRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetFileExportUrlResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetFileExportUrl retrieves the export URL for a specified file.
      tags:
      - FileService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/recentassets:
    post:
      operationId: AssetsService_RecentAssets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumRecentAssetsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumRecentAssetsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: RecentAssets returns recent added assets according to request.
      tags:
      - AssetsService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/scope/add:
    post:
      operationId: ScopeService_AddScope
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumScopeIdentifier'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: AddScope creates scope in the system.
      tags:
      - ScopeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/scope/exist:
    post:
      operationId: ScopeService_ExistScope
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumScopeIdentifier'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumScopeExistResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ExistScope return boolean value about existence of scope according
        to request.
      tags:
      - ScopeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/scope/list:
    post:
      operationId: ScopeService_ListScope
      requestBody:
        content:
          '*/*':
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumScopeListResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: ListScope returns list of all existing scopes.
      tags:
      - ScopeService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/submission/files-view:
    post:
      operationId: SubmissionService_GetFilesView
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetSubmissionFilesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetSubmissionFilesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: GetFilesView returns information about submitted to s3 storage files.
      tags:
      - SubmissionService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/submitted:
    post:
      operationId: DataService_Submitted
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumSubmittedRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumSubmittedResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Submitted returns submitted data based on the request made.
      tags:
      - DataService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/supported/assets:
    get:
      operationId: AssetsService_SupportedAssets
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAssetsListResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - AssetsService
      x-accepts: '*/*'
  /api/v1/uniquekey/add:
    post:
      description: "Example of request :\n{\n  \"name\":\"foreign_exchange-vanilla-forwards\"\
        ,\n  \"scope\":\"global\",\n  \"uniqueKey\":[\n     \"snap_date\",\n     \"\
        asset\",\n     \"service\",\n     \"client\",\n     \"service\",\n     \"\
        tenor\",\n     \"snap_time\",\n     \"instrument_type\",\n     \"spot_reference_price\"\
        ,\n     \"mid_fwrd_outright\",\n     \"mid_fwrd_points\",\n     \"onshore_offshore_curr_1\"\
        ,\n     \"onshore_offshore_curr_2\"\n  ]\n}"
      operationId: UniqueKeyService_AddUniqueKey
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUniqueKeyDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: AddUniqueKey is used to add a new unique key definition to the system.
      tags:
      - UniqueKeyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/uniquekey/get:
    post:
      description: "Response:\n{\n   \"data\": {\n       \"name\": \"foreign_exchange-vanilla-forwards\"\
        ,\n       \"scope\": \"global\",\n       \"uniqueKey\": [\n           \"snap_date\"\
        ,\n           \"asset\",\n           \"service\",\n           \"client\",\n\
        \           \"service\",\n           \"tenor\",\n           \"snap_time\"\
        ,\n           \"instrument_type\",\n           \"spot_reference_price\",\n\
        \           \"mid_fwrd_outright\",\n           \"mid_fwrd_points\",\n    \
        \       \"onshore_offshore_curr_1\",\n           \"onshore_offshore_curr_2\"\
        \n       ],\n       \"orderBy\": [\n           \"__input_row_num\"\n     \
        \  ],\n       \"order\": \"ASC\"\n   }\n}"
      operationId: UniqueKeyService_GetUniqueKey
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUniqueKeyDefinitionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetUniqueKey is used to retrieve a unique key definition by its scope\
        \ and name.\nRequest:\n{\n  \"identifier\":{\n     \"name\":\"foreign_exchange-vanilla-forwards\"\
        \n  },\n  \"scope\":\"global\"\n}"
      tags:
      - UniqueKeyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/uniquekey/list:
    post:
      description: "Response:\n{\n   \"data\": {\n       \"results\": [\n        \
        \   {\n               \"name\": \"foreign_exchange-vanilla-forwards\",\n \
        \              \"scope\": \"global\",\n               \"uniqueKey\": [\n \
        \                  \"asset\",\n                   \"service\",\n         \
        \          \"sub-asset\",\n                   \"instrument_type\",\n     \
        \              \"tenor\",\n                   \"snap_date\",\n           \
        \        \"snap_time\",\n                   \"curr_1\",\n                \
        \   \"curr_2\",\n                   \"onshore_offshore_curr_1\",\n       \
        \            \"onshore_offshore_curr_2\"\n               ],\n            \
        \   \"orderBy\": [\n                   \"__input_row_num\"\n             \
        \  ],\n               \"order\": \"ASC\"\n           },\n           {\n  \
        \             \"name\": \"foreign_exchange-vanilla-options\",\n          \
        \     \"scope\": \"global\",\n               \"uniqueKey\": [\n          \
        \         \"snap_date\",\n                   \"asset\",\n                \
        \   \"service\",\n                   \"snap_time\",\n                   \"\
        instrument_type\",\n                   \"option_instrument_parameter\",\n\
        \                   \"exercise_style\",\n                   \"option_execution_cut_time\"\
        ,\n                   \"curr_1\",\n                   \"curr_2\",\n      \
        \             \"tenor\",\n                   \"delta\",\n                \
        \   \"vol_format\",\n                   \"instrument_convention\",\n     \
        \              \"delta_convention\",\n                   \"premium_currency\"\
        ,\n                   \"settlement_convention\"\n               ],\n     \
        \          \"orderBy\": [\n                   \"__input_row_num\"\n      \
        \         ],\n               \"order\": \"ASC\"\n           }\n       ]\n\
        \   }\n}"
      operationId: UniqueKeyService_ListUniqueKeys
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListUniqueKeysResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListUniqueKeys is used to retrieve a list of all unique key definitions\
        \ in the system.\nRequest:\n{\n  \"scope\":\"global\"\n}"
      tags:
      - UniqueKeyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/uniquekey/version/{scope}/{name}/{versionId}:
    get:
      operationId: UniqueKeyService_GetUniqueKeyVersion
      parameters:
      - explode: false
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: descriptorName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUniqueKeyDefinitionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetUniqueKeyVersion is used to retrieve a specific version of a unique\
        \ key definition by its scope, name, and version ID.\nResponse:\n{\n   \"\
        data\": {\n       \"name\": \"foreign_exchange-vanilla-forwards\",\n     \
        \  \"scope\": \"global\",\n       \"uniqueKey\": [\n           \"asset\",\n\
        \           \"service\",\n           \"sub-asset\",\n           \"instrument_type\"\
        ,\n           \"tenor\",\n           \"snap_date\",\n           \"snap_time\"\
        ,\n           \"curr_1\",\n           \"curr_2\",\n           \"onshore_offshore_curr_1\"\
        ,\n           \"onshore_offshore_curr_2\"\n       ],\n       \"orderBy\":\
        \ [\n           \"__input_row_num\"\n       ],\n       \"order\": \"ASC\"\n\
        \   }\n}"
      tags:
      - UniqueKeyService
      x-accepts: '*/*'
  /api/v1/uniquekey/versions:
    post:
      description: "Response:\n{\n   \"data\": {\n       \"versions\": [\n       \
        \    {\n               \"versionId\":\"0bmhRR-7hISwkb_H2MvIqafpJCAoy3YgEySZjntZF9o=\"\
        ,\n               \"createdAt\": \"2022-08-22 15:23:44.0\"\n           }\n\
        \       ]\n   }\n}"
      operationId: UniqueKeyService_ListUniqueKeyVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListUniqueKeyVersions is used to retrieve a list of all versions of\
        \ a specific unique key definition by its scope and name.\nRequest:\n{\n \
        \ \"scope\":\"global\",\n  \"identifier\": {\n       \"name\": \"foreign_exchange-vanilla-forwards\"\
        \n   }\n}"
      tags:
      - UniqueKeyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/upload/data:
    post:
      operationId: DataService_UploadData
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUploadDataRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUploadDataResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DataService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/upload/done:
    post:
      operationId: DataService_CompleteDataUpload
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumCompleteDataUploadRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumCompleteDataUploadResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - DataService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/upload/evaluated-price:
    post:
      operationId: AdminService_UploadEvaluatedPrice
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUploadEvaluatedPriceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - AdminService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/upload/url:
    post:
      operationId: DataService_UploadURL
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUploadURLRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUploadURLResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: UploadURL returns a pre-signed S3 URL for uploading data.
      tags:
      - DataService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user:
    post:
      operationId: UserService_GetUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/entities:
    get:
      operationId: EntityService_getAllEnabledOnly
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoEntitiesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - EntityService
      x-accepts: '*/*'
    post:
      operationId: EntityService_find
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoSearchCriteria'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoTableResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - EntityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/entities/create:
    post:
      operationId: EntityService_create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoEntityDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoEntityResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - EntityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/entities/{id}:
    get:
      operationId: EntityService_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoEntityResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - EntityService
      x-accepts: '*/*'
    put:
      operationId: EntityService_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EntityService_update_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoEntityResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - EntityService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/group-policies/create:
    post:
      operationId: GroupPolicyService_create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoGroupPolicies'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoOperationSuccess'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - GroupPolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/group-policies/getPolicies:
    post:
      operationId: GroupPolicyService_getPolicies
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoPolicyType'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoGroupPoliciesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - GroupPolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/policies/checkPolicy:
    post:
      operationId: PolicyService_checkPolicy
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoPolicyDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoOperationSuccess'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - PolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/policies/create:
    post:
      operationId: PolicyService_create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoPolicies'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoOperationSuccess'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - PolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/policies/getAddons:
    post:
      operationId: PolicyService_getAddons
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoUsernamePermissionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoPoliciesListResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - PolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/policies/getApis:
    post:
      operationId: PolicyService_getApis
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoUsernamePermissionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoPoliciesListResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - PolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/policies/getAssets:
    post:
      operationId: PolicyService_getAssets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoUsernamePermissionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoPoliciesListResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - PolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/policies/getPolicies:
    post:
      operationId: PolicyService_getPolicies
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoPolicyType'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoPoliciesResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - PolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/policies/removePolicy:
    post:
      operationId: PolicyService_removePolicy
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoPolicyDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoOperationSuccess'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - PolicyService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/users/create:
    post:
      operationId: UserService_create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoUserDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/grpcprotoUserResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/users/getAll:
    post:
      operationId: UserService_getAll
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoUserEnabled'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/protoUsersResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/users/getById:
    post:
      operationId: UserService_getById
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoUserId'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/grpcprotoUserResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user-management/users/update:
    post:
      operationId: UserService_update
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/protoUserDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/grpcprotoUserResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/add:
    post:
      operationId: UserService_AddUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/delete:
    post:
      operationId: UserService_DeleteUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/notifications:
    post:
      operationId: UserService_GetUserNotifications
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetUserNotificationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserNotificationsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/notifications/add:
    post:
      operationId: UserService_AddUserNotification
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUserNotificationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserNotificationResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/notifications/delete:
    post:
      operationId: UserService_DeleteUserNotification
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUserNotificationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserNotificationResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/notifications/market:
    post:
      operationId: UserService_GetUserNotificationsByMarket
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetUserNotificationByMarketRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserNotificationsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/notifications/update:
    post:
      operationId: UserService_UpdateUserNotification
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUserNotificationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserNotificationResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/permissions:
    post:
      operationId: UserService_GetUserPermissions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetUserPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserPermissionsResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/user/update:
    post:
      operationId: UserService_UpdateUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumUserResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UserService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/add:
    post:
      description: "Request for backoffice user:\n{\n\"definition\": {\n  \"descriptor_name\"\
        :\"foreign_exchange-vanilla-options\",\n  \"criteria\":[\n    {\n      \"\
        name\":\"FX-V-FXO: Option Instrument Parameter: Forward Points\",\n      \"\
        description\":\"This criteria element contains validation rules that will\
        \ be applied to all fx-vanilla-options data submission rows where option_instrument_parameter\
        \ equals \\\"Forward Points\\\".\",\n      \"tags\":[\n        \"forward points\"\
        \n      ],\n      \"metadata\":[\n\n      ],\n      \"rule\":\"[\\\"foreign_exchange-vanilla-options.option_instrument_parameter\\\
        \",\\\"$eq_case_insensitive\\\",\\\"Forward Points\\\"]\",\n      \"validations\"\
        :[\n        {\n          \"name\":\"FX-V-FXO: Forward Points: Forward Conversion\
        \ Factor: Exiting Value Check\",\n          \"severity\":1,\n          \"\
        rule_type\":\"input_data\",\n          \"tags\":[\n\n          ],\n      \
        \    \"description\":\"Compare the fwrd_conversion_factor for a given underlying\
        \ against the expected values.\",\n          \"rule\":\"[ { \\\"$lut_name\\\
        \": \\\"conversion_factor\\\", \\\"$get\\\": [ \\\"foreign_exchange-vanilla-options.underlying\\\
        \" ] }, \\\"$eq\\\", \\\"foreign_exchange-vanilla-options.fwrd_conversion_factor\\\
        \" ]\",\n          \"error\":{\n            \"message\":\"[%s] is not a conversion\
        \ factor used in consensus. Please update the conversion factor for this underlying\
        \ -- [%s].\",\n            \"message_args\":[\n              \"foreign_exchange-vanilla-options.fwrd_conversion_factor\"\
        ,\n              \"foreign_exchange-vanilla-options.underlying\"\n       \
        \     ]\n          }\n        }\n      ]\n    }\n  ]\n},\n\"scope\": \"global\"\
        ,\n\"descriptor_name\": \"foreign_exchange-vanilla-options\"\n}\n\nResponse:\n\
        {\n   \"data\": {\n       \"uid\": \"ac49453d-cc9c-11ec-8bac-5314d58ea570\"\
        ,\n       \"descriptor_name\": \"fx_forward\"\n   }\n}\n\nError response:\n\
        \nPush to non ‘global’ scope :\n{\n   \"error\": {\n       \"code\": 70,\n\
        \       \"message\": \"Invalid argument: only support 'global' scope\"\n \
        \  }\n}\n\nUnauthorized user :\n{\n   \"error\": {\n       \"code\": 70,\n\
        \       \"message\": \"Invalid auth token - only operator is allowed to add\
        \ validation rules\"\n   }\n}\n\nMissing argument :\n{\n   \"error\": {\n\
        \       \"code\": 70,\n       \"message\": \"Missing argument: descriptor_name\"\
        \n   }\n}\n\nInvalid rule definition - rule col mismatch with descriptor :\n\
        {\n   \"error\": {\n       \"code\": 70,\n       \"message\": \"Rule [fx_fwd]\
        \ compile failed, details: Column [submission_clienttt] not found in schema\
        \ [fx_forward]\"\n   }\n}\n\nInvalid rule definition - RDL syntax error :\n\
        {\n   \"error\": {\n       \"code\": 70,\n       \"message\": \"Rule [fx_fwd]\
        \ compile failed, details: line 1:14 no viable alternative at input '[{\\\"\
        $lower\\\":\\\"fx_forward.submission_service\\\"'\"\n   }\n}\n\nDependencies\
        \ not found - dependencies could be: descriptor, named lut, custom function\
        \ :\n{\n   \"error\": {\n       \"code\": 70,\n       \"message\": \"Rule\
        \ [fx_fwd] compile failed, details: Invalid rule expression [ { \\\"$lut_name\\\
        \" : \\\"tenor\\\", \\\"$exist\\\" : [\\\"fx_forward.submission_tenor\\\"\
        ] } ]\\n\\terr: com.peernova.api.searchmetadata.metadata.exceptions.MetadataNotFoundException:\
        \ No Look Up Table by name [tenor] found in scope [global]\"\n   }\n}\n\n\
        Ruleset with same name already exist :\n{\n   \"error\": {\n       \"code\"\
        : 70,\n       \"message\": \"Validation rule for descriptor [fx_fwd] already\
        \ exist\"\n   }\n}"
      operationId: ValidatorService_AddValidationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumValidationRuleDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "AddValidationRule is a method used to add a validation rule to the\
        \ system.\nBackoffice users can create a new validation ruleset in the 'global'\
        \ scope, for each asset class.\nParticipant users can create a new validation\
        \ ruleset in its own scope, for each asset class.\nBackoffice users can represent\
        \ any participant and create a new validation ruleset in that participant's\
        \ scope.\nThe default scope is used if no scope is given in the request ('global'\
        \ for the operator, participant scope for that participant user).\nThe authorization\
        \ will be fetched from the user's token. It will do an update if a validation\
        \ rule with the same name already exists."
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/check:
    post:
      description: "Example of Request:\n{\n \"rdl\": \"[\\\"a\\\", \\\"$eq\\\", \\\
        \"b\\\"\"\n}\n\nExample of Response:\n{\n   \"data\": {\n       \"message\"\
        : \"success\"\n   }\n}\n\nExample of Error response:\nResource not found:\n\
        {\n   \"error\": {\n       \"code\": 69,\n       \"message\": \"rdl [[\\\"\
        a\\\", \\\"$eq\\\", \\\"b\\\"] cannot be parsed. Error: line 1:16 missing\
        \ ']' at '<EOF>'\"\n   }\n}"
      operationId: ValidatorService_RdlCheck
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumRdlCheckRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumMessageResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: |-
        RdlCheck method checks the syntax of a given RDL (Rule Description Language) expression.
        It takes a RdlCheckRequest message as input and returns a MessageResponse message.
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/disable:
    post:
      description: "Example of Response:\n{\n   \"data\": {\n       \"uid\": \"\"\
        ,\n       \"descriptor_name\": \"foreign_exchange-vanilla-forwards\"\n   }\n\
        }"
      operationId: ValidatorService_DisableValidationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "DisableValidationRule method disables a validation rule in the system.\n\
        The request includes the descriptor name and scope of the rule.\nExample of\
        \ Request:\n{\n\"descriptor_name\" : \"foreign_exchange-vanilla-forwards\"\
        ,\n\"scope\": \"global\"\n}"
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/enable:
    post:
      description: "Example of Response:\n{\n   \"data\": {\n       \"uid\": \"\"\
        ,\n       \"descriptor_name\": \"foreign_exchange-vanilla-forwards\"\n   }\n\
        }"
      operationId: ValidatorService_EnableValidationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumAcknowledgeResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "EnableValidationRule method enables a validation rule that has been\
        \ previously disabled.\nThe request includes the descriptor name and scope\
        \ of the rule.\nExample of Request:\n{\n\"descriptor_name\" : \"foreign_exchange-vanilla-forwards\"\
        ,\n\"scope\": \"global\"\n}"
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/generated:
    post:
      description: "Example of Request:\n{\n \"descriptor_name\": \"foreign_exchange-vanilla-forwards\"\
        \n}"
      operationId: ValidatorService_GetGeneratedValidationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetGeneratedValidationRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetGeneratedValidationRule method allows back office users to view\
        \ all generated validation rulesets, including Java rulesets.\nParticipant\
        \ users can only view global generated validation rulesets and rulesets within\
        \ their own scope.\nIf no scope is given in the request, the default scope\
        \ is used (\"global\" for operators and participant scope for the participant\
        \ user).\nAuthorization is fetched from the user's token.\nThis method returns\
        \ the latest version of the generated ruleset if multiple versions exist."
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/generated/version/{descriptorName}/{versionId}:
    get:
      description: "Example of Request:\nGET /api/v1/validation/rule/generated/version/foreign_exchange-vanilla-forwards\n\
        /QHF5uuOTjGprb3FRsI7ybBnU6-Ub32Xq8Q399PtQWeQ=\n{\n \"scope\": \"global\"\n\
        }\n\nExample of Response:\n{\n    \"data\": {\n         \"versions\": [\n\
        \             {\n                \"versionId\": \"teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk=\"\
        ,\n                \"createdAt\": \"2022-05-04 16:20:58.0\"\n            \
        \ },\n             {\n                 \"versionId\": \"mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM=\"\
        ,\n                 \"createdAt\": \"2022-05-04 16:17:19.0\"\n           \
        \  },\n             {\n                 \"versionId\": \"6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc=\"\
        ,\n                 \"createdAt\": \"2022-05-04 15:02:00.0\"\n           \
        \  }\n         ]\n     }\n }"
      operationId: ValidatorService_GetGeneratedValidationRuleVersion
      parameters:
      - explode: false
        in: path
        name: descriptorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetGeneratedValidationRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetGeneratedValidationRuleVersion method allows the user to view a\
        \ particular version of a generated ruleset.\nThe request requires a descriptor\
        \ name and a version ID.\nIf the requested ruleset version is not found, an\
        \ error response is returned."
      tags:
      - ValidatorService
      x-accepts: '*/*'
  /api/v1/validation/rule/generated/versions:
    post:
      description: "Example of Request:\n{\n \"descriptor_name\": \"fx_fwd\"\n}\n\n\
        \nExample of Response:\n{\n   \"data\": {\n       \"versions\": [\n      \
        \     {\n               \"versionId\": \"teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk=\"\
        ,\n               \"createdAt\": \"2022-05-04 16:20:58.0\"\n           },\n\
        \           {\n               \"versionId\": \"mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM=\"\
        ,\n               \"createdAt\": \"2022-05-04 16:17:19.0\"\n           },\n\
        \           {\n               \"versionId\": \"6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc=\"\
        ,\n               \"createdAt\": \"2022-05-04 15:02:00.0\"\n           }\n\
        \       ]\n   }\n}\n\nExample of Error response:\nResource not found:\n{\n\
        \   \"error\": {\n       \"code\": 70,\n       \"message\": \"Failed to get\
        \ rule [fx_fwd] versions, details: Rule [fx_fwd] not found\"\n   }\n}"
      operationId: ValidatorService_ListGeneratedValidationRuleVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListGeneratedValidationRuleVersions method returns a list of generated\
        \ ruleset version IDs along with their creation timestamps.\nThe request requires\
        \ a descriptor name. If the requested ruleset is not found, an error response\
        \ is returned."
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/get:
    post:
      description: "Example of Request:\n{\n \"descriptor_name\": \"fx_fwd\"\n}\n\n\
        \nOr:\n{\n \"uid\": \"ac49453d-cc9c-11ec-8bac-5314d58ea570\"\n}\n\n\n\nExample\
        \ of Response:\n{\n   \"data\": {\n       \"uid\": \"\",\n       \"definition\"\
        : {\n           \"descriptorName\": \"foreign_exchange-vanilla-options\",\n\
        \           \"criteria\": [\n               {\n                   \"name\"\
        : \"FX-V-FXO: Option Instrument Parameter: Forward Points\",\n           \
        \        \"description\": \"This criteria element contains validation rules\
        \ that will be applied to all fx-vanilla-options data submission rows where\
        \ option_instrument_parameter equals \\\"Forward Points\\\".\",\n        \
        \           \"rule\": \"[\\\"foreign_exchange-vanilla-options.option_instrument_parameter\\\
        \",\\\"$eq_case_insensitive\\\",\\\"Forward Points\\\"]\",\n             \
        \      \"tags\": [\n                       \"forward points\"\n          \
        \         ],\n                   \"metadata\": [],\n                   \"\
        validations\": [\n                       {\n                           \"\
        name\": \"FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value\
        \ Check\",\n                           \"description\": \"Compare the fwrd_conversion_factor\
        \ for a given underlying against the expected values.\",\n               \
        \            \"rule\": \"[ { \\\"$lut_name\\\": \\\"conversion_factor\\\"\
        , \\\"$get\\\": [ \\\"foreign_exchange-vanilla-options.underlying\\\" ] },\
        \ \\\"$eq\\\", \\\"foreign_exchange-vanilla-options.fwrd_conversion_factor\\\
        \" ]\",\n                           \"ruleType\": \"INPUT_DATA\",\n      \
        \                     \"severity\": 1,\n                           \"tags\"\
        : [],\n                           \"error\": {\n                         \
        \      \"message\": \"[%s] is not a conversion factor used in consensus. Please\
        \ update the conversion factor for this underlying -- [%s].\",\n         \
        \                      \"messageArgs\": [\n                              \
        \     \"foreign_exchange-vanilla-options.fwrd_conversion_factor\",\n     \
        \                              \"foreign_exchange-vanilla-options.underlying\"\
        \n                               ]\n                           },\n      \
        \                     \"filter\": \"\"\n                       }\n       \
        \            ]\n               }\n           ]\n       },\n       \"scope\"\
        : \"global\",\n       \"descriptorName\": \"foreign_exchange-vanilla-options\"\
        \n   }\n}\n\nExample of Error response:\n\nMissing argument:\n{\n   \"error\"\
        : {\n       \"code\": 70,\n       \"message\": \"Missing argument: need either\
        \ descriptor name or uid to get validation rule\"\n   }\n}\n\nResource not\
        \ found :\n{\n   \"error\": {\n       \"code\": 70,\n       \"message\": \"\
        Rule [fx_fwd] not found, details: [fx_fwd] of service [VALIDATIONRULESET]\
        \ does not exist in namespace [global]\"\n   }\n}"
      operationId: ValidatorService_GetValidationRule
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetValidationRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "GetValidationRule method retrieves information about a validation\
        \ rule.\nBoth back office users and participant users can view validation\
        \ rulesets.\nThe default scope is used if no scope is given in the request.\
        \ Authorization is fetched from the user's token.\nThe rule can be retrieved\
        \ by either descriptor name or UID.\nIf multiple versions of the rule exist,\
        \ this method returns the latest version."
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/list:
    post:
      description: "Example of Request:\n{\n \"scope\": \"global\",\n \"filter\":\
        \ \".*exchange.*\",\n \"orderBy\": {\n \t\"order\": \"DESC\"\n }\n}\n\nExample\
        \ of Response:\n{\n   \"data\": {\n       \"results\": [\n           {\n \
        \              \"uid\": \"\",\n               \"descriptor_name\": \"foreign_exchange-vanilla-options\"\
        \n           },\n           {\n               \"uid\": \"\",\n           \
        \    \"descriptor_name\": \"foreign_exchange-vanilla-forwards\"\n        \
        \   },\n           {\n               \"uid\": \"\",\n               \"descriptor_name\"\
        : \"foreign_exchange-exotics-tarfs\"\n           }\n       ]\n   }\n}\n\n\
        Example of Request with pagination:\n{\n \"scope\": \"global\",\n \"filter\"\
        : \".*exchange.*\",\n \"orderBy\": {\n \t\"order\": \"DESC\"\n },\n \"limit\"\
        : {\n \t\"value\": 2\n },\n \"offset\": 1\n}\n\nExample of Response:\n{\n\
        \   \"data\": {\n       \"results\": [\n           {\n               \"uid\"\
        : \"\",\n               \"descriptor_name\": \"foreign_exchange-vanilla-forwards\"\
        \n           },\n           {\n               \"uid\": \"\",\n           \
        \    \"descriptor_name\": \"foreign_exchange-exotics-tarfs\"\n           }\n\
        \       ]\n   }\n}\n\nExample of Error response:\nnot ‘global’ scope:\n{\n\
        \   \"error\": {\n       \"code\": 70,\n       \"message\": \"Invalid argument:\
        \ only support 'global' scope\"\n   }\n}\n\nInvalid filter/regex:\n{\n   \"\
        error\": {\n       \"code\": 70,\n       \"message\": \"Failed to list rules:\
        \ Dangling meta character '*' near index 0\\n*May*\\n^\"\n   }\n}"
      operationId: ValidatorService_ListValidationRules
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumListRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListValidationRules method is used to retrieve a list of validation\
        \ rule names.\nBoth back office users and participant users can retrieve validation\
        \ rulesets, but the scope and authorization will depend on the user.\nThe\
        \ default scope is used if no scope is specified in the request.\nThe request\
        \ may include an optional filter and orderBy parameter to refine the search\
        \ results.\nPagination is also supported. The response will include a list\
        \ of rule names matching the filter criteria."
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
  /api/v1/validation/rule/version/{descriptorName}/{versionId}:
    get:
      description: "Example of Request:\nGET /api/v1/validation/rule/version/fx_fwd_May04/teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk=\n\
        \nExample of Response:\n{\n   \"data\": {\n       \"uid\": \"\",\n       \"\
        definition\": {\n           \"descriptorName\": \"foreign_exchange-vanilla-options\"\
        ,\n           \"criteria\": [\n               {\n                   \"name\"\
        : \"FX-V-FXO: Option Instrument Parameter: Forward Points\",\n           \
        \        \"description\": \"This criteria element contains validation rules\
        \ that will be applied to all fx-vanilla-options data submission rows where\
        \ option_instrument_parameter equals \\\"Forward Points\\\".\",\n        \
        \           \"rule\": \"[\\\"foreign_exchange-vanilla-options.option_instrument_parameter\\\
        \",\\\"$eq_case_insensitive\\\",\\\"Forward Points\\\"]\",\n             \
        \      \"tags\": [\n                       \"forward points\"\n          \
        \         ],\n                   \"metadata\": [],\n                   \"\
        validations\": [\n                       {\n                           \"\
        name\": \"FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value\
        \ Check\",\n                           \"description\": \"Compare the fwrd_conversion_factor\
        \ for a given underlying against the expected values.\",\n               \
        \            \"rule\": \"[ { \\\"$lut_name\\\": \\\"conversion_factor\\\"\
        , \\\"$get\\\": [ \\\"foreign_exchange-vanilla-options.underlying\\\" ] },\
        \ \\\"$eq\\\", \\\"foreign_exchange-vanilla-options.fwrd_conversion_factor\\\
        \" ]\",\n                           \"ruleType\": \"INPUT_DATA\",\n      \
        \                     \"severity\": 1,\n                           \"tags\"\
        : [],\n                           \"error\": {\n                         \
        \      \"message\": \"[%s] is not a conversion factor used in consensus. Please\
        \ update the conversion factor for this underlying -- [%s].\",\n         \
        \                      \"messageArgs\": [\n                              \
        \     \"foreign_exchange-vanilla-options.fwrd_conversion_factor\",\n     \
        \                              \"foreign_exchange-vanilla-options.underlying\"\
        \n                               ]\n                           },\n      \
        \                     \"filter\": \"\"\n                       }\n       \
        \            ]\n               }\n           ]\n       },\n       \"scope\"\
        : \"global\",\n       \"descriptorName\": \"foreign_exchange-vanilla-options\"\
        \n   }\n}\n\nExample of Error response:\nResource not found:\n{\n   \"error\"\
        : {\n       \"code\": 70,\n       \"message\": \"Failed to get rule [fx_fwd_May04],\
        \ details: MetaData entity not found: name [fx_fwd_May04] version: [teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk]\
        \ in namespace: [global]\"\n   }\n}"
      operationId: ValidatorService_GetValidationRuleVersion
      parameters:
      - explode: false
        in: path
        name: descriptorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: versionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumGetValidationRuleResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "This is a method that allows both back office users and regular users\
        \ to retrieve a specific version of a ruleset given the descriptor name and\
        \ version ID.\nThe ruleset is used for validation purposes and contains criteria\
        \ and rules for validating data submissions.\nBack office users can retrieve\
        \ a particular version of a ruleset from any scope, while participant users\
        \ can only retrieve a version of a ruleset from either the global scope or\
        \ their own scope."
      tags:
      - ValidatorService
      x-accepts: '*/*'
  /api/v1/validation/rule/versions:
    post:
      description: "Example of Request:\n{\n \"descriptor_name\": \"fx_fwd\"\n}\n\n\
        Example of Response:\n{\n   \"data\": {\n       \"versions\": [\n        \
        \   {\n               \"versionId\": \"teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk=\"\
        ,\n               \"createdAt\": \"2022-05-04 16:20:58.0\"\n           },\n\
        \           {\n               \"versionId\": \"mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM=\"\
        ,\n               \"createdAt\": \"2022-05-04 16:17:19.0\"\n           },\n\
        \           {\n               \"versionId\": \"6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc=\"\
        ,\n               \"createdAt\": \"2022-05-04 15:02:00.0\"\n           }\n\
        \       ]\n   }\n}\n\nExample of Error response:\nResource not found:\n{\n\
        \   \"error\": {\n       \"code\": 70,\n       \"message\": \"Failed to get\
        \ rule [fx_fwd] versions, details: Rule [fx_fwd_validation] not found\"\n\
        \   }\n}"
      operationId: ValidatorService_ListValidationRuleVersions
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/titaniumGetDefinition'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/titaniumListVersionResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: "ListValidationRuleVersions method is used to retrieve a list of versions\
        \ for a given validation rule.\nBoth back office users and participant users\
        \ can retrieve versions of validation rulesets, but the scope will depend\
        \ on the user.\nThe request must specify the descriptor name for the validation\
        \ rule.\nThe response will include a list of versions and their created timestamp.\n\
        If the requested rule is not found, an error response will be returned."
      tags:
      - ValidatorService
      x-codegen-request-body-name: body
      x-content-type: '*/*'
      x-accepts: '*/*'
components:
  schemas:
    DynamicLutDynamicLutType:
      type: string
    ErrorValidationErrorDetail:
      example:
        fieldName: fieldName
        description: description
      properties:
        description:
          type: string
        fieldName:
          type: string
      type: object
    GetAttachmentUploadUrlResponseAttachmentUploadUrl:
      example:
        fileName: fileName
        uploadUrl: uploadUrl
        attachmentId: attachmentId
      properties:
        attachmentId:
          type: string
        fileName:
          type: string
        uploadUrl:
          type: string
      type: object
    GetChallengeDetailsResponseCommonChallengeData:
      example:
        date: date
        evidenceType: evidenceType
        time: time
      properties:
        date:
          type: string
        evidenceType:
          type: string
        time:
          type: string
      type: object
    GetChallengeDetailsResponseResult:
      example:
        commonChallengeData:
          date: date
          evidenceType: evidenceType
          time: time
        totalNumber: "{}"
        challengeData: "{}"
        attachments:
        - name: name
          attachmentId: attachmentId
          url: url
        - name: name
          attachmentId: attachmentId
          url: url
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/titaniumAttachment'
          type: array
        challengeData:
          properties: {}
          type: object
        commonChallengeData:
          $ref: '#/components/schemas/GetChallengeDetailsResponseCommonChallengeData'
        totalNumber:
          properties: {}
          type: object
      type: object
    GetFileExportUrlResponseFileExportUrl:
      example:
        s3Url: s3Url
      properties:
        s3Url:
          type: string
      type: object
    RuleDefinitionRuleType:
      type: string
    TableColumn:
      example:
        columnType: columnType
        rawColumnName: rawColumnName
        columnName: columnName
      properties:
        columnName:
          type: string
        columnType:
          type: string
        rawColumnName:
          type: string
      type: object
    grpcprotoError:
      example:
        code: 0
        validationErrorDetails:
        - fieldName: fieldName
          description: description
        - fieldName: fieldName
          description: description
        message: message
      properties:
        code:
          type: integer
        message:
          type: string
        validationErrorDetails:
          items:
            $ref: '#/components/schemas/ErrorValidationErrorDetail'
          type: array
      type: object
    grpcprotoTable:
      example:
        columns:
        - columnType: columnType
          columnDbType: columnDbType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          columnDbType: columnDbType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - values
          - values
        - values:
          - values
          - values
      properties:
        columns:
          items:
            $ref: '#/components/schemas/protoColumnDefinition'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/grpcprotoTableRow'
          type: array
        totalRows:
          type: integer
      type: object
    grpcprotoTableRow:
      example:
        values:
        - values
        - values
      properties:
        values:
          items:
            type: string
          type: array
      type: object
    grpcprotoUserResponse:
      example:
        data:
          firstName: firstName
          lastName: lastName
          id: id
          email: email
          enabled: true
          entity:
            name: name
            externalId: externalId
            id: id
            enabled: true
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/protoUserDto'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protoColumnDefinition:
      example:
        columnType: columnType
        columnDbType: columnDbType
        rawColumnName: rawColumnName
        columnName: columnName
      properties:
        columnDbType:
          type: string
        columnName:
          type: string
        columnType:
          type: string
        rawColumnName:
          type: string
      type: object
    protoEntitiesDto:
      example:
        entities:
        - name: name
          externalId: externalId
          id: id
          enabled: true
        - name: name
          externalId: externalId
          id: id
          enabled: true
      properties:
        entities:
          items:
            $ref: '#/components/schemas/protoEntityDto'
          type: array
      type: object
    protoEntitiesResponse:
      example:
        data:
          entities:
          - name: name
            externalId: externalId
            id: id
            enabled: true
          - name: name
            externalId: externalId
            id: id
            enabled: true
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/protoEntitiesDto'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protoEntityDto:
      example:
        name: name
        externalId: externalId
        id: id
        enabled: true
      properties:
        enabled:
          type: boolean
        externalId:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    protoEntityResponse:
      example:
        data:
          name: name
          externalId: externalId
          id: id
          enabled: true
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/protoEntityDto'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protoGroupPolicies:
      example:
        groupPolicy:
        - type: type
          group: group
          username: username
        - type: type
          group: group
          username: username
      properties:
        groupPolicy:
          items:
            $ref: '#/components/schemas/protoGroupPolicyDto'
          type: array
      type: object
    protoGroupPoliciesResponse:
      example:
        data:
          groupPolicy:
          - type: type
            group: group
            username: username
          - type: type
            group: group
            username: username
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/protoGroupPolicies'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protoGroupPolicyDto:
      example:
        type: type
        group: group
        username: username
      properties:
        group:
          type: string
        type:
          type: string
        username:
          type: string
      type: object
    protoOperationSuccess:
      example:
        success: true
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        error:
          $ref: '#/components/schemas/grpcprotoError'
        success:
          type: boolean
      type: object
    protoPolicies:
      example:
        policyDto:
        - assetPermission: assetPermission
          addon: addon
          api: api
          apiPermission: apiPermission
          asset: asset
          type: type
          username: username
        - assetPermission: assetPermission
          addon: addon
          api: api
          apiPermission: apiPermission
          asset: asset
          type: type
          username: username
      properties:
        policyDto:
          items:
            $ref: '#/components/schemas/protoPolicyDto'
          type: array
      type: object
    protoPoliciesList:
      example:
        policies:
        - policies
        - policies
      properties:
        policies:
          items:
            type: string
          type: array
      type: object
    protoPoliciesListResponse:
      example:
        data:
          policies:
          - policies
          - policies
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/protoPoliciesList'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protoPoliciesResponse:
      example:
        data:
          policyDto:
          - assetPermission: assetPermission
            addon: addon
            api: api
            apiPermission: apiPermission
            asset: asset
            type: type
            username: username
          - assetPermission: assetPermission
            addon: addon
            api: api
            apiPermission: apiPermission
            asset: asset
            type: type
            username: username
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/protoPolicies'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protoPolicyDto:
      example:
        assetPermission: assetPermission
        addon: addon
        api: api
        apiPermission: apiPermission
        asset: asset
        type: type
        username: username
      properties:
        addon:
          type: string
        api:
          type: string
        apiPermission:
          type: string
        asset:
          type: string
        assetPermission:
          type: string
        type:
          type: string
        username:
          type: string
      type: object
    protoPolicyType:
      properties:
        type:
          type: string
      type: object
    protoSearchCriteria:
      properties:
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/protoSearchCriteriaLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/protoSearchCriteriaOrderBy'
      type: object
    protoSearchCriteriaLimit:
      properties:
        value:
          type: integer
      type: object
    protoSearchCriteriaOrderBy:
      properties:
        column:
          type: string
        order:
          type: string
      type: object
    protoTableResponse:
      example:
        data:
          columns:
          - columnType: columnType
            columnDbType: columnDbType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            columnDbType: columnDbType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - values
            - values
          - values:
            - values
            - values
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/grpcprotoTable'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protoUserDto:
      example:
        firstName: firstName
        lastName: lastName
        id: id
        email: email
        enabled: true
        entity:
          name: name
          externalId: externalId
          id: id
          enabled: true
      properties:
        email:
          type: string
        enabled:
          type: boolean
        entity:
          $ref: '#/components/schemas/protoEntityDto'
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
      type: object
    protoUserEnabled:
      properties:
        enabled:
          type: boolean
      type: object
    protoUserId:
      properties:
        id:
          type: string
      type: object
    protoUsernamePermissionRequest:
      properties:
        permission:
          type: string
        username:
          type: string
      type: object
    protoUsersDto:
      example:
        user:
        - firstName: firstName
          lastName: lastName
          id: id
          email: email
          enabled: true
          entity:
            name: name
            externalId: externalId
            id: id
            enabled: true
        - firstName: firstName
          lastName: lastName
          id: id
          email: email
          enabled: true
          entity:
            name: name
            externalId: externalId
            id: id
            enabled: true
      properties:
        user:
          items:
            $ref: '#/components/schemas/protoUserDto'
          type: array
      type: object
    protoUsersResponse:
      example:
        data:
          user:
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
            enabled: true
            entity:
              name: name
              externalId: externalId
              id: id
              enabled: true
          - firstName: firstName
            lastName: lastName
            id: id
            email: email
            enabled: true
            entity:
              name: name
              externalId: externalId
              id: id
              enabled: true
        error:
          code: 0
          validationErrorDetails:
          - fieldName: fieldName
            description: description
          - fieldName: fieldName
            description: description
          message: message
      properties:
        data:
          $ref: '#/components/schemas/protoUsersDto'
        error:
          $ref: '#/components/schemas/grpcprotoError'
      type: object
    protobufAny:
      properties:
        typeUrl:
          type: string
        value:
          type: string
      type: object
    protobufNullValue:
      type: string
    rpcStatus:
      properties:
        code:
          type: integer
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
        message:
          type: string
      type: object
    titaniumAcknowledgeResponse:
      example:
        data:
          uid: uid
          name: name
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumIdentifier'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: common response that notify the user that some action was executed
      type: object
    titaniumAddAssetRequest:
      properties:
        asset:
          type: string
        instrumentType:
          type: string
        service:
          type: string
      type: object
    titaniumAddLookupTableRequest:
      properties:
        lookuptable:
          $ref: '#/components/schemas/titaniumLookupTableDefinition'
        scope:
          type: string
      type: object
    titaniumAsset:
      example:
        name: name
        services:
        - name: name
          subAssets:
          - name: name
            traceName: traceName
            id: id
          - name: name
            traceName: traceName
            id: id
        - name: name
          subAssets:
          - name: name
            traceName: traceName
            id: id
          - name: name
            traceName: traceName
            id: id
      properties:
        name:
          type: string
        services:
          items:
            $ref: '#/components/schemas/titaniumService'
          type: array
      type: object
    titaniumAssetDetails:
      properties:
        assetId:
          type: string
        date:
          type: string
        name:
          type: string
        service:
          type: string
        snapTime:
          type: string
        subAsset:
          type: string
      type: object
    titaniumAssetM:
      example:
        instrumentTypes:
        - instrumentTypes
        - instrumentTypes
        name: name
        id: id
      properties:
        id:
          type: string
        instrumentTypes:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    titaniumAssetsList:
      example:
        assets:
        - name: name
          services:
          - name: name
            subAssets:
            - name: name
              traceName: traceName
              id: id
            - name: name
              traceName: traceName
              id: id
          - name: name
            subAssets:
            - name: name
              traceName: traceName
              id: id
            - name: name
              traceName: traceName
              id: id
        - name: name
          services:
          - name: name
            subAssets:
            - name: name
              traceName: traceName
              id: id
            - name: name
              traceName: traceName
              id: id
          - name: name
            subAssets:
            - name: name
              traceName: traceName
              id: id
            - name: name
              traceName: traceName
              id: id
      properties:
        assets:
          items:
            $ref: '#/components/schemas/titaniumAsset'
          type: array
      title: AssetsList is representation of list of assets
      type: object
    titaniumAssetsListRequest:
      properties:
        snapTime:
          type: string
      title: AssetsListRequest is request to get list of assets according to snap
        time
      type: object
    titaniumAssetsListResponse:
      example:
        data:
          assets:
          - name: name
            services:
            - name: name
              subAssets:
              - name: name
                traceName: traceName
                id: id
              - name: name
                traceName: traceName
                id: id
            - name: name
              subAssets:
              - name: name
                traceName: traceName
                id: id
              - name: name
                traceName: traceName
                id: id
          - name: name
            services:
            - name: name
              subAssets:
              - name: name
                traceName: traceName
                id: id
              - name: name
                traceName: traceName
                id: id
            - name: name
              subAssets:
              - name: name
                traceName: traceName
                id: id
              - name: name
                traceName: traceName
                id: id
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumAssetsList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumAssetsRequest:
      properties:
        assetId:
          type: string
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        traceName:
          type: string
      type: object
    titaniumAssetsResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          totalRows: 1
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumAttachment:
      example:
        name: name
        attachmentId: attachmentId
        url: url
      properties:
        attachmentId:
          type: string
        name:
          type: string
        url:
          type: string
      type: object
    titaniumAvailableTrades:
      example:
        absDiffFromLatestTrade: "{}"
        min: "{}"
        subPriceAbsDiffFromLatestTrade: "{}"
        dayTradeNumber: dayTradeNumber
        max: "{}"
        monthTradeNumber: monthTradeNumber
        subPriceDiff: "{}"
        latestTradePrice: "{}"
        weekTradeNumber: weekTradeNumber
      properties:
        absDiffFromLatestTrade:
          properties: {}
          type: object
        dayTradeNumber:
          type: string
        latestTradePrice:
          properties: {}
          type: object
        max:
          properties: {}
          type: object
        min:
          properties: {}
          type: object
        monthTradeNumber:
          type: string
        subPriceAbsDiffFromLatestTrade:
          properties: {}
          type: object
        subPriceDiff:
          properties: {}
          type: object
        weekTradeNumber:
          type: string
      type: object
    titaniumBenchmarkMetadata:
      example:
        reason: reason
        tenor: tenor
      properties:
        reason:
          type: string
        tenor:
          type: string
      type: object
    titaniumBimodality:
      example:
        bimodalityIndex: "{}"
        history:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
        value: value
      properties:
        bimodalityIndex:
          properties: {}
          type: object
        history:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
        value:
          type: string
      type: object
    titaniumChallengeActiveRequest:
      properties:
        assetId:
          type: string
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        traceName:
          type: string
      title: ChallengeActiveRequest is a request to retrieve a list of active challenges
        for a specific asset
      type: object
    titaniumChallengeActiveResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - challenges:
            - values:
              - "{}"
              - "{}"
            - values:
              - "{}"
              - "{}"
          - challenges:
            - values:
              - "{}"
              - "{}"
            - values:
              - "{}"
              - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChallengeActiveResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumChallengeActiveResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - challenges:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        - challenges:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumChallengeConsensusMetadata'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumChallengeConsensusMetadata:
      example:
        challenges:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        challenges:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
      type: object
    titaniumChallengeCreateRequest:
      properties:
        assetId:
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/titaniumAttachment'
          type: array
        date:
          type: string
        evidenceType:
          type: string
        generalFields:
          items:
            type: string
          type: array
        note:
          type: string
        submittedDate:
          type: string
        submittedId:
          type: string
        submittedUrl:
          type: string
        time:
          type: string
        traceName:
          type: string
      title: ChallengeCreateRequest message is used to create a new challenge.(Initiate
        new challenge process)
      type: object
    titaniumChallengeCreateResponse:
      example:
        data:
          ticketId: ticketId
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChallengeCreateResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumChallengeCreateResponseData:
      example:
        ticketId: ticketId
      properties:
        ticketId:
          type: string
      type: object
    titaniumChallengeDecisionRequest:
      properties:
        assetId:
          type: string
        challengeId:
          type: string
        decision:
          type: string
      type: object
    titaniumChallengeFormGeneralRow:
      example:
        regex: regex
        min:
          value: 1.4658129805029452
        field: field
        max:
          value: 0.8008281904610115
        minLength:
          value: 5
        precision:
          value: 5
        tooltip: tooltip
        type: type
        value: "{}"
        maxLength:
          value: 6
      properties:
        field:
          type: string
        max:
          $ref: '#/components/schemas/titaniumChallengeFormGeneralRowMax'
        maxLength:
          $ref: '#/components/schemas/titaniumChallengeFormGeneralRowMaxLength'
        min:
          $ref: '#/components/schemas/titaniumChallengeFormGeneralRowMin'
        minLength:
          $ref: '#/components/schemas/titaniumChallengeFormGeneralRowMinLength'
        precision:
          $ref: '#/components/schemas/titaniumChallengeFormGeneralRowPrecision'
        regex:
          type: string
        tooltip:
          type: string
        type:
          type: string
        value:
          properties: {}
          type: object
      type: object
    titaniumChallengeFormGeneralRowMax:
      example:
        value: 0.8008281904610115
      properties:
        value:
          type: number
      type: object
    titaniumChallengeFormGeneralRowMaxLength:
      example:
        value: 6
      properties:
        value:
          type: integer
      type: object
    titaniumChallengeFormGeneralRowMin:
      example:
        value: 1.4658129805029452
      properties:
        value:
          type: number
      type: object
    titaniumChallengeFormGeneralRowMinLength:
      example:
        value: 5
      properties:
        value:
          type: integer
      type: object
    titaniumChallengeFormGeneralRowPrecision:
      example:
        value: 5
      properties:
        value:
          type: integer
      type: object
    titaniumChallengeFormMetaRequest:
      properties:
        assetId:
          type: string
        evidenceType:
          type: string
        submissionId:
          type: string
        traceName:
          type: string
      type: object
    titaniumChallengeFormMetaResponse:
      example:
        data:
          oneOfFields:
          - names:
            - names
            - names
          - names:
            - names
            - names
          rows:
          - regex: regex
            min:
              value: 1.4658129805029452
            field: field
            max:
              value: 0.8008281904610115
            minLength:
              value: 5
            precision:
              value: 5
            tooltip: tooltip
            type: type
            value: "{}"
            maxLength:
              value: 6
          - regex: regex
            min:
              value: 1.4658129805029452
            field: field
            max:
              value: 0.8008281904610115
            minLength:
              value: 5
            precision:
              value: 5
            tooltip: tooltip
            type: type
            value: "{}"
            maxLength:
              value: 6
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChallengeFormMetaResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumChallengeFormMetaResponseData:
      example:
        oneOfFields:
        - names:
          - names
          - names
        - names:
          - names
          - names
        rows:
        - regex: regex
          min:
            value: 1.4658129805029452
          field: field
          max:
            value: 0.8008281904610115
          minLength:
            value: 5
          precision:
            value: 5
          tooltip: tooltip
          type: type
          value: "{}"
          maxLength:
            value: 6
        - regex: regex
          min:
            value: 1.4658129805029452
          field: field
          max:
            value: 0.8008281904610115
          minLength:
            value: 5
          precision:
            value: 5
          tooltip: tooltip
          type: type
          value: "{}"
          maxLength:
            value: 6
      properties:
        oneOfFields:
          items:
            $ref: '#/components/schemas/titaniumChallengeFormOneOfFields'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumChallengeFormGeneralRow'
          type: array
      type: object
    titaniumChallengeFormOneOfFields:
      example:
        names:
        - names
        - names
      properties:
        names:
          items:
            type: string
          type: array
      type: object
    titaniumChallengeFreezeAction:
      type: string
    titaniumChallengeFreezeActionRequest:
      properties:
        action:
          type: string
        consensusRunId:
          type: string
      type: object
    titaniumChallengeFreezeStatusRequest:
      properties:
        consensusRunId:
          type: string
      type: object
    titaniumChallengeHistoryRequest:
      properties:
        assetId:
          type: string
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        traceName:
          type: string
      type: object
    titaniumChallengeHistoryResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChallengeHistoryResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumChallengeHistoryResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumChallengeListMetadata:
      example:
        values:
        - "{}"
        - "{}"
      properties:
        values:
          items:
            properties: {}
            type: object
          type: array
      type: object
    titaniumChallengeListRequest:
      properties:
        assetId:
          type: string
        consensusRunTimestamp:
          type: string
        date:
          type: string
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        snapTime:
          type: string
        traceName:
          type: string
      type: object
    titaniumChallengeListResponse:
      example:
        data:
          challenges:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChallengeListResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumChallengeListResponseData:
      example:
        challenges:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
      properties:
        challenges:
          items:
            $ref: '#/components/schemas/titaniumChallengeListMetadata'
          type: array
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumChart:
      example:
        name: name
        points:
        - tenor: tenor
          value: 0.8008281904610115
        - tenor: tenor
          value: 0.8008281904610115
      properties:
        name:
          type: string
        points:
          items:
            $ref: '#/components/schemas/titaniumChartPoint'
          type: array
      type: object
    titaniumChartDataResponse:
      example:
        chartId: chartId
        series:
        - metadata:
            columnNames:
            - columnNames
            - columnNames
          data:
          - "{}"
          - "{}"
          name: name
          contentType: contentType
        - metadata:
            columnNames:
            - columnNames
            - columnNames
          data:
          - "{}"
          - "{}"
          name: name
          contentType: contentType
        chartType: chartType
      properties:
        chartId:
          type: string
        chartType:
          type: string
        series:
          items:
            $ref: '#/components/schemas/titaniumSeries'
          type: array
      type: object
    titaniumChartPoint:
      example:
        tenor: tenor
        value: 0.8008281904610115
      properties:
        tenor:
          type: string
        value:
          type: number
      title: ChartPoint is representation of chart point(tenor and value) (Tenor refers
        to the time-to-maturity of a loan or other financial contract)
      type: object
    titaniumChartRanges:
      example:
        bimodalRightPopulation:
          min:
            label: label
            value: "{}"
          max:
            label: label
            value: "{}"
        bimodalLeftPopulation:
          min:
            label: label
            value: "{}"
          max:
            label: label
            value: "{}"
        submissionEvidence:
          min:
            label: label
            value: "{}"
          max:
            label: label
            value: "{}"
        submissionMinMax:
          min:
            label: label
            value: "{}"
          max:
            label: label
            value: "{}"
        cohortConsensus:
          min:
            label: label
            value: "{}"
          max:
            label: label
            value: "{}"
        evp:
          min:
            label: label
            value: "{}"
          max:
            label: label
            value: "{}"
      properties:
        bimodalLeftPopulation:
          $ref: '#/components/schemas/titaniumRange'
        bimodalRightPopulation:
          $ref: '#/components/schemas/titaniumRange'
        cohortConsensus:
          $ref: '#/components/schemas/titaniumRange'
        evp:
          $ref: '#/components/schemas/titaniumRange'
        submissionEvidence:
          $ref: '#/components/schemas/titaniumRange'
        submissionMinMax:
          $ref: '#/components/schemas/titaniumRange'
      type: object
    titaniumChartSource:
      example:
        charts:
        - name: name
          points:
          - tenor: tenor
            value: 0.8008281904610115
          - tenor: tenor
            value: 0.8008281904610115
        - name: name
          points:
          - tenor: tenor
            value: 0.8008281904610115
          - tenor: tenor
            value: 0.8008281904610115
        name: name
      properties:
        charts:
          items:
            $ref: '#/components/schemas/titaniumChart'
          type: array
        name:
          type: string
      type: object
    titaniumChartsCurrenciesRequest:
      properties:
        assetId:
          type: string
        submittedDate:
          type: string
        traceName:
          type: string
      title: ChartsCurrenciesRequest is request for charts for currency pairs
      type: object
    titaniumChartsCurrenciesResponse:
      example:
        data:
          currencyPairs:
          - currencyPairs
          - currencyPairs
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChartsCurrenciesResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumChartsCurrenciesResponseData:
      example:
        currencyPairs:
        - currencyPairs
        - currencyPairs
      properties:
        currencyPairs:
          items:
            type: string
          type: array
      type: object
    titaniumChartsRequest:
      properties:
        assetId:
          type: string
        client:
          type: string
        submittedDate:
          type: string
        traceName:
          type: string
        underlying:
          type: string
      type: object
    titaniumChartsResponse:
      example:
        data:
          tenors:
          - tenors
          - tenors
          outliers:
          - reason: reason
            tenor: tenor
          - reason: reason
            tenor: tenor
          chartSources:
          - charts:
            - name: name
              points:
              - tenor: tenor
                value: 0.8008281904610115
              - tenor: tenor
                value: 0.8008281904610115
            - name: name
              points:
              - tenor: tenor
                value: 0.8008281904610115
              - tenor: tenor
                value: 0.8008281904610115
            name: name
          - charts:
            - name: name
              points:
              - tenor: tenor
                value: 0.8008281904610115
              - tenor: tenor
                value: 0.8008281904610115
            - name: name
              points:
              - tenor: tenor
                value: 0.8008281904610115
              - tenor: tenor
                value: 0.8008281904610115
            name: name
          benchmark:
          - reason: reason
            tenor: tenor
          - reason: reason
            tenor: tenor
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChartsResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumChartsResponseData:
      example:
        tenors:
        - tenors
        - tenors
        outliers:
        - reason: reason
          tenor: tenor
        - reason: reason
          tenor: tenor
        chartSources:
        - charts:
          - name: name
            points:
            - tenor: tenor
              value: 0.8008281904610115
            - tenor: tenor
              value: 0.8008281904610115
          - name: name
            points:
            - tenor: tenor
              value: 0.8008281904610115
            - tenor: tenor
              value: 0.8008281904610115
          name: name
        - charts:
          - name: name
            points:
            - tenor: tenor
              value: 0.8008281904610115
            - tenor: tenor
              value: 0.8008281904610115
          - name: name
            points:
            - tenor: tenor
              value: 0.8008281904610115
            - tenor: tenor
              value: 0.8008281904610115
          name: name
        benchmark:
        - reason: reason
          tenor: tenor
        - reason: reason
          tenor: tenor
      properties:
        benchmark:
          items:
            $ref: '#/components/schemas/titaniumBenchmarkMetadata'
          type: array
        chartSources:
          items:
            $ref: '#/components/schemas/titaniumChartSource'
          type: array
        outliers:
          items:
            $ref: '#/components/schemas/titaniumOutlierMetadata'
          type: array
        tenors:
          items:
            type: string
          type: array
      type: object
    titaniumClientName:
      example:
        displayName: displayName
        name: name
      properties:
        displayName:
          type: string
        name:
          type: string
      type: object
    titaniumCohortConsensusColumn:
      example:
        consAbsDiffFromAnchorEvpMid: "{}"
        subPriceDiff: "{}"
        consAbsDiffFromAnchorSub: "{}"
        acceptedMax: "{}"
        consAbsDiffFromAnchorEvpMidCalc: "{}"
        stdDev: "{}"
        acceptedMin: "{}"
        cohortConsensusPrice: "{}"
        consAbsDiffFromAnchorTrade: "{}"
        numberOfInstruments: "{}"
        absDiffFromConsensus: "{}"
      properties:
        absDiffFromConsensus:
          properties: {}
          type: object
        acceptedMax:
          properties: {}
          type: object
        acceptedMin:
          properties: {}
          type: object
        cohortConsensusPrice:
          properties: {}
          type: object
        consAbsDiffFromAnchorEvpMid:
          properties: {}
          type: object
        consAbsDiffFromAnchorEvpMidCalc:
          properties: {}
          type: object
        consAbsDiffFromAnchorSub:
          properties: {}
          type: object
        consAbsDiffFromAnchorTrade:
          properties: {}
          type: object
        numberOfInstruments:
          properties: {}
          type: object
        stdDev:
          properties: {}
          type: object
        subPriceDiff:
          properties: {}
          type: object
      type: object
    titaniumCohortConsensusRangeTabData:
      example:
        evpAnchorDetails:
          midCalculated: "{}"
          mid: "{}"
          distanceToConsensus: 0.8008281904610115
        expertsCount: 6
        distanceToAnchor: "{}"
        expertiseScore: "{}"
        tradeAnchorDetails:
          notional: 7.061401241503109
          pricingAge: pricingAge
          latestTradePrice: 2.3021358869347655
          currency: currency
          source: source
          tradeExecutionTime: tradeExecutionTime
          distanceToConsensus: 5.637376656633329
        submissionEvidenceAnchorDetails:
          submissionEvidence: 5.962133916683182
          distanceToConsensus: 1.4658129805029452
        tradePeriodsWithMetrics:
          lessWeek:
            tradeCount: tradeCount
            totalLiquidity: 2.027123023002322
            currency: currency
            minNotionalAmount: 3.616076749251911
            maxNotionalAmount: 9.301444243932576
          lessDay:
            tradeCount: tradeCount
            totalLiquidity: 2.027123023002322
            currency: currency
            minNotionalAmount: 3.616076749251911
            maxNotionalAmount: 9.301444243932576
          lessMonth:
            tradeCount: tradeCount
            totalLiquidity: 2.027123023002322
            currency: currency
            minNotionalAmount: 3.616076749251911
            maxNotionalAmount: 9.301444243932576
        distanceToConsensus: "{}"
        expertiseRank: "{}"
      properties:
        distanceToAnchor:
          properties: {}
          type: object
        distanceToConsensus:
          properties: {}
          type: object
        evpAnchorDetails:
          $ref: '#/components/schemas/titaniumEvpAnchorDetails'
        expertiseRank:
          properties: {}
          type: object
        expertiseScore:
          properties: {}
          type: object
        expertsCount:
          type: integer
        submissionEvidenceAnchorDetails:
          $ref: '#/components/schemas/titaniumSubmissionEvidenceAnchorDetails'
        tradeAnchorDetails:
          $ref: '#/components/schemas/titaniumTradeAnchorDetails'
        tradePeriodsWithMetrics:
          $ref: '#/components/schemas/titaniumTradePeriodsWithMetrics'
      type: object
    titaniumColDependency:
      example:
        col: col
        dependency:
        - entityName: entityName
          entityType: entityType
          scope: scope
          usages:
          - usageName: usageName
            usageType: usageType
          - usageName: usageName
            usageType: usageType
          version: version
          entity: entity
        - entityName: entityName
          entityType: entityType
          scope: scope
          usages:
          - usageName: usageName
            usageType: usageType
          - usageName: usageName
            usageType: usageType
          version: version
          entity: entity
      properties:
        col:
          type: string
        dependency:
          items:
            $ref: '#/components/schemas/titaniumDependency'
          type: array
      type: object
    titaniumCollapseTableRequest:
      properties:
        filters:
          items:
            $ref: '#/components/schemas/titaniumFilter'
          type: array
      type: object
    titaniumColumnInfo:
      example:
        columnType: columnType
        rawColumnName: rawColumnName
        columnName: columnName
      properties:
        columnName:
          type: string
        columnType:
          type: string
        rawColumnName:
          type: string
      type: object
    titaniumComparisonTable:
      example:
        cohortConsensusColumn:
          consAbsDiffFromAnchorEvpMid: "{}"
          subPriceDiff: "{}"
          consAbsDiffFromAnchorSub: "{}"
          acceptedMax: "{}"
          consAbsDiffFromAnchorEvpMidCalc: "{}"
          stdDev: "{}"
          acceptedMin: "{}"
          cohortConsensusPrice: "{}"
          consAbsDiffFromAnchorTrade: "{}"
          numberOfInstruments: "{}"
          absDiffFromConsensus: "{}"
        submissionStatistics:
          submissionMax: "{}"
          absDiffFromSubEvidence: "{}"
          statMeanAbsDiffFromLatestTrade: "{}"
          subPriceDiff: "{}"
          submissionEvidence: "{}"
          submissionMin: "{}"
          numberOfPartInBoundaries: "{}"
          stdDev: "{}"
          upperBoundary: "{}"
          lowerBoundary: "{}"
        evidentialPricing:
          absDiffFromEvpMid: "{}"
          evpLowerBoundary: "{}"
          ask: "{}"
          subPriceDiff: "{}"
          mid: "{}"
          tradesOrOrdersCount: "{}"
          evpUpperBoundary: "{}"
          bid: "{}"
          evpMidAbsDiffFromLatestTrade: "{}"
        availableTrades:
          absDiffFromLatestTrade: "{}"
          min: "{}"
          subPriceAbsDiffFromLatestTrade: "{}"
          dayTradeNumber: dayTradeNumber
          max: "{}"
          monthTradeNumber: monthTradeNumber
          subPriceDiff: "{}"
          latestTradePrice: "{}"
          weekTradeNumber: weekTradeNumber
        submissionEvidence:
          eviPriceAbsDiffFromLatestTrade: "{}"
          participantsCount: "{}"
          absDiffFromEvidence: "{}"
          evidence: "{}"
          subPriceDiff: "{}"
          stdDev: "{}"
          upperBoundary: "{}"
          lowerBoundary: "{}"
        submission:
          submissionPrice: "{}"
      properties:
        availableTrades:
          $ref: '#/components/schemas/titaniumAvailableTrades'
        cohortConsensusColumn:
          $ref: '#/components/schemas/titaniumCohortConsensusColumn'
        evidentialPricing:
          $ref: '#/components/schemas/titaniumEvidentalPricing'
        submission:
          $ref: '#/components/schemas/titaniumSubmissionExplorerTableColumn'
        submissionEvidence:
          $ref: '#/components/schemas/titaniumSubmissionEvidenceTableColumn'
        submissionStatistics:
          $ref: '#/components/schemas/titaniumSubmissionStatisticsExplorerTableColumn'
      type: object
    titaniumCompleteDataUploadRequest:
      properties:
        asset:
          type: string
        assetId:
          type: string
        client:
          type: string
        date:
          type: string
        service:
          type: string
        snapTime:
          type: string
        subAsset:
          type: string
      type: object
    titaniumCompleteDataUploadResponse:
      example:
        success: true
        error:
          code: 0
          message: message
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        success:
          type: boolean
      type: object
    titaniumConsensusActiveRequest:
      properties:
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
      type: object
    titaniumConsensusActiveResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          totalRows: 1
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusDecisionRequest:
      properties:
        consensusTrackingId:
          type: string
        decision:
          type: string
      type: object
    titaniumConsensusDensityScore:
      example:
        tradeAlignmentScore: "{}"
        evpAlignmentScore: "{}"
        score: "{}"
        bimodalityScore: "{}"
        history:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
        dispersion: "{}"
      properties:
        bimodalityScore:
          properties: {}
          type: object
        dispersion:
          properties: {}
          type: object
        evpAlignmentScore:
          properties: {}
          type: object
        history:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
        score:
          properties: {}
          type: object
        tradeAlignmentScore:
          properties: {}
          type: object
      type: object
    titaniumConsensusDetail:
      example:
        calculationDetail: calculationDetail
        calculationStatus: calculationStatus
        highestSev: highestSev
        parseStatus: parseStatus
      properties:
        calculationDetail:
          type: string
        calculationStatus:
          type: string
        highestSev:
          type: string
        parseStatus:
          type: string
      type: object
    titaniumConsensusExplorerInstrumentDetailsData:
      example:
        submissionId: submissionId
        instrumentDetails:
        - val: val
          key: key
        - val: val
          key: key
        instrumentSubmissionStatus:
          consensusStatusDetailsHistory:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
          participantSubmissionsEvidenceStatusHistory:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
          consensusStatusHistory:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
          consensusStatus: consensusStatus
          consensusStatusDetails: consensusStatusDetails
          dqeHistory:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
          highestDqe: highestDqe
          participantSubmissionsEvidenceStatus: participantSubmissionsEvidenceStatus
          participantCohortConsensusStatus: participantCohortConsensusStatus
          participantCohortConsensusStatusHistory:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
        consensusScores:
          tradeAlignmentScore:
            score: "{}"
            mean: "{}"
            latestTradePrice: "{}"
            scoreStatus: scoreStatus
            history:
            - date: date
              score: "{}"
              scoreStatus: scoreStatus
            - date: date
              score: "{}"
              scoreStatus: scoreStatus
            stdDev: "{}"
          evpAlignmentScore:
            score: "{}"
            evpMid: "{}"
            mean: "{}"
            scoreStatus: scoreStatus
            history:
            - date: date
              score: "{}"
              scoreStatus: scoreStatus
            - date: date
              score: "{}"
              scoreStatus: scoreStatus
            stdDev: "{}"
          evpQualityScore:
            score: "{}"
            tradeCount: tradeCount
            indicativeCount: indicativeCount
            orderCount: orderCount
            history:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
          bimodality:
            bimodalityIndex: "{}"
            history:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
            value: value
          consensusDensityScore:
            tradeAlignmentScore: "{}"
            evpAlignmentScore: "{}"
            score: "{}"
            bimodalityScore: "{}"
            history:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
            dispersion: "{}"
          expertiseRank:
            expertsCount: "{}"
            anchorPrice: "{}"
            expertiseScore: "{}"
            rank: "{}"
            absDistanceToAnchor: "{}"
            history:
            - date: date
              expertsCount: "{}"
              rank: "{}"
            - date: date
              expertsCount: "{}"
              rank: "{}"
            submissionPrice: "{}"
      properties:
        consensusScores:
          $ref: '#/components/schemas/titaniumConsensusScores'
        instrumentDetails:
          items:
            $ref: '#/components/schemas/titaniumStringKeyVal'
          type: array
        instrumentSubmissionStatus:
          $ref: '#/components/schemas/titaniumInstrumentSubmissionStatus'
        submissionId:
          type: string
      type: object
    titaniumConsensusExplorerInstrumentDetailsResponse:
      example:
        data:
          submissionId: submissionId
          instrumentDetails:
          - val: val
            key: key
          - val: val
            key: key
          instrumentSubmissionStatus:
            consensusStatusDetailsHistory:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
            participantSubmissionsEvidenceStatusHistory:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
            consensusStatusHistory:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
            consensusStatus: consensusStatus
            consensusStatusDetails: consensusStatusDetails
            dqeHistory:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
            highestDqe: highestDqe
            participantSubmissionsEvidenceStatus: participantSubmissionsEvidenceStatus
            participantCohortConsensusStatus: participantCohortConsensusStatus
            participantCohortConsensusStatusHistory:
            - date: date
              value: "{}"
            - date: date
              value: "{}"
          consensusScores:
            tradeAlignmentScore:
              score: "{}"
              mean: "{}"
              latestTradePrice: "{}"
              scoreStatus: scoreStatus
              history:
              - date: date
                score: "{}"
                scoreStatus: scoreStatus
              - date: date
                score: "{}"
                scoreStatus: scoreStatus
              stdDev: "{}"
            evpAlignmentScore:
              score: "{}"
              evpMid: "{}"
              mean: "{}"
              scoreStatus: scoreStatus
              history:
              - date: date
                score: "{}"
                scoreStatus: scoreStatus
              - date: date
                score: "{}"
                scoreStatus: scoreStatus
              stdDev: "{}"
            evpQualityScore:
              score: "{}"
              tradeCount: tradeCount
              indicativeCount: indicativeCount
              orderCount: orderCount
              history:
              - date: date
                value: "{}"
              - date: date
                value: "{}"
            bimodality:
              bimodalityIndex: "{}"
              history:
              - date: date
                value: "{}"
              - date: date
                value: "{}"
              value: value
            consensusDensityScore:
              tradeAlignmentScore: "{}"
              evpAlignmentScore: "{}"
              score: "{}"
              bimodalityScore: "{}"
              history:
              - date: date
                value: "{}"
              - date: date
                value: "{}"
              dispersion: "{}"
            expertiseRank:
              expertsCount: "{}"
              anchorPrice: "{}"
              expertiseScore: "{}"
              rank: "{}"
              absDistanceToAnchor: "{}"
              history:
              - date: date
                expertsCount: "{}"
                rank: "{}"
              - date: date
                expertsCount: "{}"
                rank: "{}"
              submissionPrice: "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusExplorerInstrumentDetailsData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusExplorerRangeData:
      example:
        bimodalLeftMean:
          label: label
          value: "{}"
        chartRanges:
          bimodalRightPopulation:
            min:
              label: label
              value: "{}"
            max:
              label: label
              value: "{}"
          bimodalLeftPopulation:
            min:
              label: label
              value: "{}"
            max:
              label: label
              value: "{}"
          submissionEvidence:
            min:
              label: label
              value: "{}"
            max:
              label: label
              value: "{}"
          submissionMinMax:
            min:
              label: label
              value: "{}"
            max:
              label: label
              value: "{}"
          cohortConsensus:
            min:
              label: label
              value: "{}"
            max:
              label: label
              value: "{}"
          evp:
            min:
              label: label
              value: "{}"
            max:
              label: label
              value: "{}"
        anchorPoint:
          label: label
          value: "{}"
        cohortConsensusRangeTabData:
          evpAnchorDetails:
            midCalculated: "{}"
            mid: "{}"
            distanceToConsensus: 0.8008281904610115
          expertsCount: 6
          distanceToAnchor: "{}"
          expertiseScore: "{}"
          tradeAnchorDetails:
            notional: 7.061401241503109
            pricingAge: pricingAge
            latestTradePrice: 2.3021358869347655
            currency: currency
            source: source
            tradeExecutionTime: tradeExecutionTime
            distanceToConsensus: 5.637376656633329
          submissionEvidenceAnchorDetails:
            submissionEvidence: 5.962133916683182
            distanceToConsensus: 1.4658129805029452
          tradePeriodsWithMetrics:
            lessWeek:
              tradeCount: tradeCount
              totalLiquidity: 2.027123023002322
              currency: currency
              minNotionalAmount: 3.616076749251911
              maxNotionalAmount: 9.301444243932576
            lessDay:
              tradeCount: tradeCount
              totalLiquidity: 2.027123023002322
              currency: currency
              minNotionalAmount: 3.616076749251911
              maxNotionalAmount: 9.301444243932576
            lessMonth:
              tradeCount: tradeCount
              totalLiquidity: 2.027123023002322
              currency: currency
              minNotionalAmount: 3.616076749251911
              maxNotionalAmount: 9.301444243932576
          distanceToConsensus: "{}"
          expertiseRank: "{}"
        evpMid:
          label: label
          value: "{}"
        submissionMean:
          label: label
          value: "{}"
        submissionPoint:
          label: label
          value: "{}"
        submissionEvidencePrice:
          label: label
          value: "{}"
        cohortConsensusPrice:
          label: label
          value: "{}"
        bimodalRightMean:
          label: label
          value: "{}"
      properties:
        anchorPoint:
          $ref: '#/components/schemas/titaniumRangePoint'
        bimodalLeftMean:
          $ref: '#/components/schemas/titaniumRangePoint'
        bimodalRightMean:
          $ref: '#/components/schemas/titaniumRangePoint'
        chartRanges:
          $ref: '#/components/schemas/titaniumChartRanges'
        cohortConsensusPrice:
          $ref: '#/components/schemas/titaniumRangePoint'
        cohortConsensusRangeTabData:
          $ref: '#/components/schemas/titaniumCohortConsensusRangeTabData'
        evpMid:
          $ref: '#/components/schemas/titaniumRangePoint'
        submissionEvidencePrice:
          $ref: '#/components/schemas/titaniumRangePoint'
        submissionMean:
          $ref: '#/components/schemas/titaniumRangePoint'
        submissionPoint:
          $ref: '#/components/schemas/titaniumRangePoint'
      type: object
    titaniumConsensusExplorerRangeResponse:
      example:
        data:
          bimodalLeftMean:
            label: label
            value: "{}"
          chartRanges:
            bimodalRightPopulation:
              min:
                label: label
                value: "{}"
              max:
                label: label
                value: "{}"
            bimodalLeftPopulation:
              min:
                label: label
                value: "{}"
              max:
                label: label
                value: "{}"
            submissionEvidence:
              min:
                label: label
                value: "{}"
              max:
                label: label
                value: "{}"
            submissionMinMax:
              min:
                label: label
                value: "{}"
              max:
                label: label
                value: "{}"
            cohortConsensus:
              min:
                label: label
                value: "{}"
              max:
                label: label
                value: "{}"
            evp:
              min:
                label: label
                value: "{}"
              max:
                label: label
                value: "{}"
          anchorPoint:
            label: label
            value: "{}"
          cohortConsensusRangeTabData:
            evpAnchorDetails:
              midCalculated: "{}"
              mid: "{}"
              distanceToConsensus: 0.8008281904610115
            expertsCount: 6
            distanceToAnchor: "{}"
            expertiseScore: "{}"
            tradeAnchorDetails:
              notional: 7.061401241503109
              pricingAge: pricingAge
              latestTradePrice: 2.3021358869347655
              currency: currency
              source: source
              tradeExecutionTime: tradeExecutionTime
              distanceToConsensus: 5.637376656633329
            submissionEvidenceAnchorDetails:
              submissionEvidence: 5.962133916683182
              distanceToConsensus: 1.4658129805029452
            tradePeriodsWithMetrics:
              lessWeek:
                tradeCount: tradeCount
                totalLiquidity: 2.027123023002322
                currency: currency
                minNotionalAmount: 3.616076749251911
                maxNotionalAmount: 9.301444243932576
              lessDay:
                tradeCount: tradeCount
                totalLiquidity: 2.027123023002322
                currency: currency
                minNotionalAmount: 3.616076749251911
                maxNotionalAmount: 9.301444243932576
              lessMonth:
                tradeCount: tradeCount
                totalLiquidity: 2.027123023002322
                currency: currency
                minNotionalAmount: 3.616076749251911
                maxNotionalAmount: 9.301444243932576
            distanceToConsensus: "{}"
            expertiseRank: "{}"
          evpMid:
            label: label
            value: "{}"
          submissionMean:
            label: label
            value: "{}"
          submissionPoint:
            label: label
            value: "{}"
          submissionEvidencePrice:
            label: label
            value: "{}"
          cohortConsensusPrice:
            label: label
            value: "{}"
          bimodalRightMean:
            label: label
            value: "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusExplorerRangeData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusExplorerTableData:
      example:
        comparisonTable:
          cohortConsensusColumn:
            consAbsDiffFromAnchorEvpMid: "{}"
            subPriceDiff: "{}"
            consAbsDiffFromAnchorSub: "{}"
            acceptedMax: "{}"
            consAbsDiffFromAnchorEvpMidCalc: "{}"
            stdDev: "{}"
            acceptedMin: "{}"
            cohortConsensusPrice: "{}"
            consAbsDiffFromAnchorTrade: "{}"
            numberOfInstruments: "{}"
            absDiffFromConsensus: "{}"
          submissionStatistics:
            submissionMax: "{}"
            absDiffFromSubEvidence: "{}"
            statMeanAbsDiffFromLatestTrade: "{}"
            subPriceDiff: "{}"
            submissionEvidence: "{}"
            submissionMin: "{}"
            numberOfPartInBoundaries: "{}"
            stdDev: "{}"
            upperBoundary: "{}"
            lowerBoundary: "{}"
          evidentialPricing:
            absDiffFromEvpMid: "{}"
            evpLowerBoundary: "{}"
            ask: "{}"
            subPriceDiff: "{}"
            mid: "{}"
            tradesOrOrdersCount: "{}"
            evpUpperBoundary: "{}"
            bid: "{}"
            evpMidAbsDiffFromLatestTrade: "{}"
          availableTrades:
            absDiffFromLatestTrade: "{}"
            min: "{}"
            subPriceAbsDiffFromLatestTrade: "{}"
            dayTradeNumber: dayTradeNumber
            max: "{}"
            monthTradeNumber: monthTradeNumber
            subPriceDiff: "{}"
            latestTradePrice: "{}"
            weekTradeNumber: weekTradeNumber
          submissionEvidence:
            eviPriceAbsDiffFromLatestTrade: "{}"
            participantsCount: "{}"
            absDiffFromEvidence: "{}"
            evidence: "{}"
            subPriceDiff: "{}"
            stdDev: "{}"
            upperBoundary: "{}"
            lowerBoundary: "{}"
          submission:
            submissionPrice: "{}"
      properties:
        comparisonTable:
          $ref: '#/components/schemas/titaniumComparisonTable'
      type: object
    titaniumConsensusExplorerTableResponse:
      example:
        data:
          comparisonTable:
            cohortConsensusColumn:
              consAbsDiffFromAnchorEvpMid: "{}"
              subPriceDiff: "{}"
              consAbsDiffFromAnchorSub: "{}"
              acceptedMax: "{}"
              consAbsDiffFromAnchorEvpMidCalc: "{}"
              stdDev: "{}"
              acceptedMin: "{}"
              cohortConsensusPrice: "{}"
              consAbsDiffFromAnchorTrade: "{}"
              numberOfInstruments: "{}"
              absDiffFromConsensus: "{}"
            submissionStatistics:
              submissionMax: "{}"
              absDiffFromSubEvidence: "{}"
              statMeanAbsDiffFromLatestTrade: "{}"
              subPriceDiff: "{}"
              submissionEvidence: "{}"
              submissionMin: "{}"
              numberOfPartInBoundaries: "{}"
              stdDev: "{}"
              upperBoundary: "{}"
              lowerBoundary: "{}"
            evidentialPricing:
              absDiffFromEvpMid: "{}"
              evpLowerBoundary: "{}"
              ask: "{}"
              subPriceDiff: "{}"
              mid: "{}"
              tradesOrOrdersCount: "{}"
              evpUpperBoundary: "{}"
              bid: "{}"
              evpMidAbsDiffFromLatestTrade: "{}"
            availableTrades:
              absDiffFromLatestTrade: "{}"
              min: "{}"
              subPriceAbsDiffFromLatestTrade: "{}"
              dayTradeNumber: dayTradeNumber
              max: "{}"
              monthTradeNumber: monthTradeNumber
              subPriceDiff: "{}"
              latestTradePrice: "{}"
              weekTradeNumber: weekTradeNumber
            submissionEvidence:
              eviPriceAbsDiffFromLatestTrade: "{}"
              participantsCount: "{}"
              absDiffFromEvidence: "{}"
              evidence: "{}"
              subPriceDiff: "{}"
              stdDev: "{}"
              upperBoundary: "{}"
              lowerBoundary: "{}"
            submission:
              submissionPrice: "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusExplorerTableData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusHistogram:
      example:
        noConsensus:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        totalParseErrors: 1
        highSeverity:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        nonOutliers:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        outliers:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        rows: 6
      properties:
        highSeverity:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
        noConsensus:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
        nonOutliers:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
        outliers:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
        rows:
          type: integer
        totalParseErrors:
          type: integer
      type: object
    titaniumConsensusHistoryRequest:
      properties:
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
      type: object
    titaniumConsensusHistoryResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusHistoryResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusHistoryResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumConsensusPublishRequest:
      properties:
        assetId:
          type: string
        consensusTrackingId:
          type: string
        traceName:
          type: string
      type: object
    titaniumConsensusRequest:
      properties:
        assetId:
          type: string
        consensusRunTimestamp:
          type: string
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        submittedDate:
          type: string
        traceName:
          type: string
      type: object
    titaniumConsensusResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumConsensusResultSetInfo:
      example:
        cohortName: cohortName
        consensusRunTimestamp: consensusRunTimestamp
        dataContent: dataContent
        consensusResultSetId: consensusResultSetId
        description: description
        type: type
        status: status
      properties:
        cohortName:
          type: string
        consensusResultSetId:
          type: string
        consensusRunTimestamp:
          type: string
        dataContent:
          type: string
        description:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    titaniumConsensusResultSetValues:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        page:
          pageNumber: 0
          size: 6
          totalNumberOfElements: totalNumberOfElements
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        page:
          $ref: '#/components/schemas/titaniumPage'
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
      type: object
    titaniumConsensusResultSetValuesResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusResultSetValues'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusRunInfo:
      example:
        consensusRunId: consensusRunId
        numberOfParticipants: 0
        consensusResultSetInfo:
        - cohortName: cohortName
          consensusRunTimestamp: consensusRunTimestamp
          dataContent: dataContent
          consensusResultSetId: consensusResultSetId
          description: description
          type: type
          status: status
        - cohortName: cohortName
          consensusRunTimestamp: consensusRunTimestamp
          dataContent: dataContent
          consensusResultSetId: consensusResultSetId
          description: description
          type: type
          status: status
        runBy: runBy
      properties:
        consensusResultSetInfo:
          items:
            $ref: '#/components/schemas/titaniumConsensusResultSetInfo'
          type: array
        consensusRunId:
          type: string
        numberOfParticipants:
          type: integer
        runBy:
          type: string
      type: object
    titaniumConsensusScores:
      example:
        tradeAlignmentScore:
          score: "{}"
          mean: "{}"
          latestTradePrice: "{}"
          scoreStatus: scoreStatus
          history:
          - date: date
            score: "{}"
            scoreStatus: scoreStatus
          - date: date
            score: "{}"
            scoreStatus: scoreStatus
          stdDev: "{}"
        evpAlignmentScore:
          score: "{}"
          evpMid: "{}"
          mean: "{}"
          scoreStatus: scoreStatus
          history:
          - date: date
            score: "{}"
            scoreStatus: scoreStatus
          - date: date
            score: "{}"
            scoreStatus: scoreStatus
          stdDev: "{}"
        evpQualityScore:
          score: "{}"
          tradeCount: tradeCount
          indicativeCount: indicativeCount
          orderCount: orderCount
          history:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
        bimodality:
          bimodalityIndex: "{}"
          history:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
          value: value
        consensusDensityScore:
          tradeAlignmentScore: "{}"
          evpAlignmentScore: "{}"
          score: "{}"
          bimodalityScore: "{}"
          history:
          - date: date
            value: "{}"
          - date: date
            value: "{}"
          dispersion: "{}"
        expertiseRank:
          expertsCount: "{}"
          anchorPrice: "{}"
          expertiseScore: "{}"
          rank: "{}"
          absDistanceToAnchor: "{}"
          history:
          - date: date
            expertsCount: "{}"
            rank: "{}"
          - date: date
            expertsCount: "{}"
            rank: "{}"
          submissionPrice: "{}"
      properties:
        bimodality:
          $ref: '#/components/schemas/titaniumBimodality'
        consensusDensityScore:
          $ref: '#/components/schemas/titaniumConsensusDensityScore'
        evpAlignmentScore:
          $ref: '#/components/schemas/titaniumEvpAlignmentScore'
        evpQualityScore:
          $ref: '#/components/schemas/titaniumEvpQualityScore'
        expertiseRank:
          $ref: '#/components/schemas/titaniumExpertiseRank'
        tradeAlignmentScore:
          $ref: '#/components/schemas/titaniumTradeAlignmentScore'
      type: object
    titaniumConsensusTabRequest:
      properties:
        assetId:
          type: string
        collapseTableConfig:
          $ref: '#/components/schemas/titaniumCollapseTableRequest'
        consensusRunTimestamp:
          type: string
        dataType:
          type: string
        tableConfig:
          $ref: '#/components/schemas/titaniumTableRequest'
        traceName:
          type: string
      type: object
    titaniumConsensusTimestampMeta:
      example:
        consensusRunTimestamp: consensusRunTimestamp
        submittedDates:
        - submittedDates
        - submittedDates
      properties:
        consensusRunTimestamp:
          type: string
        submittedDates:
          items:
            type: string
          type: array
      type: object
    titaniumConsensusTimestampsRequest:
      properties:
        assetId:
          type: string
        traceName:
          type: string
      type: object
    titaniumConsensusTimestampsResponse:
      example:
        data:
          timestamps:
          - consensusRunTimestamp: consensusRunTimestamp
            submittedDates:
            - submittedDates
            - submittedDates
          - consensusRunTimestamp: consensusRunTimestamp
            submittedDates:
            - submittedDates
            - submittedDates
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusTimestampsResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusTimestampsResponseData:
      example:
        timestamps:
        - consensusRunTimestamp: consensusRunTimestamp
          submittedDates:
          - submittedDates
          - submittedDates
        - consensusRunTimestamp: consensusRunTimestamp
          submittedDates:
          - submittedDates
          - submittedDates
      properties:
        timestamps:
          items:
            $ref: '#/components/schemas/titaniumConsensusTimestampMeta'
          type: array
      title: ConsensusTimestampsResponseData is a message that contains the metadata
        of the consensus timestamps
      type: object
    titaniumConsensusToPublishRequest:
      properties:
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
      type: object
    titaniumConsensusToPublishResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumConsensusToPublishResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumConsensusToPublishResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumCriteriaDefinition:
      example:
        metadata:
        - metadata
        - metadata
        name: name
        description: description
        rule: rule
        validations:
        - filter: filter
          severity: 0
          lookuptable:
            filter: filter
            type: type
            value: "{}"
            key:
            - key
            - key
          ruleType: ruleType
          name: name
          description: description
          rule: rule
          error:
            messageArgs:
            - messageArgs
            - messageArgs
            message: message
          tags:
          - tags
          - tags
        - filter: filter
          severity: 0
          lookuptable:
            filter: filter
            type: type
            value: "{}"
            key:
            - key
            - key
          ruleType: ruleType
          name: name
          description: description
          rule: rule
          error:
            messageArgs:
            - messageArgs
            - messageArgs
            message: message
          tags:
          - tags
          - tags
        tags:
        - tags
        - tags
      properties:
        description:
          type: string
        metadata:
          items:
            type: string
          type: array
        name:
          type: string
        rule:
          type: string
        tags:
          items:
            type: string
          type: array
        validations:
          items:
            $ref: '#/components/schemas/titaniumRuleDefinition'
          type: array
      type: object
    titaniumCustomFunction:
      example:
        uid: uid
        scope: scope
        name: name
        outputType: outputType
        definition: definition
        usages:
        - identifier:
            uid: uid
            name: name
          type: type
        - identifier:
            uid: uid
            name: name
          type: type
        category: category
        descriptorName: descriptorName
        descriptorType: descriptorType
      properties:
        category:
          type: string
        definition:
          type: string
        descriptorName:
          type: string
        descriptorType:
          type: string
        name:
          type: string
        outputType:
          type: string
        scope:
          type: string
        uid:
          type: string
        usages:
          items:
            $ref: '#/components/schemas/titaniumCustomFunctionUsage'
          type: array
      type: object
    titaniumCustomFunctionDefinitionResponse:
      example:
        data:
          uid: uid
          scope: scope
          name: name
          outputType: outputType
          definition: definition
          usages:
          - identifier:
              uid: uid
              name: name
            type: type
          - identifier:
              uid: uid
              name: name
            type: type
          category: category
          descriptorName: descriptorName
          descriptorType: descriptorType
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumCustomFunction'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumCustomFunctionDescriptorType:
      type: string
    titaniumCustomFunctionFunctionOutput:
      type: string
    titaniumCustomFunctionGetDefinition:
      properties:
        descriptorType:
          type: string
        idScope:
          $ref: '#/components/schemas/titaniumGetDefinition'
      type: object
    titaniumCustomFunctionList:
      example:
        results:
        - uid: uid
          scope: scope
          name: name
          outputType: outputType
          definition: definition
          usages:
          - identifier:
              uid: uid
              name: name
            type: type
          - identifier:
              uid: uid
              name: name
            type: type
          category: category
          descriptorName: descriptorName
          descriptorType: descriptorType
        - uid: uid
          scope: scope
          name: name
          outputType: outputType
          definition: definition
          usages:
          - identifier:
              uid: uid
              name: name
            type: type
          - identifier:
              uid: uid
              name: name
            type: type
          category: category
          descriptorName: descriptorName
          descriptorType: descriptorType
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumCustomFunction'
          type: array
      type: object
    titaniumCustomFunctionUsage:
      example:
        identifier:
          uid: uid
          name: name
        type: type
      properties:
        identifier:
          $ref: '#/components/schemas/titaniumIdentifier'
        type:
          type: string
      type: object
    titaniumCustomFunctionUsageUsageType:
      type: string
    titaniumDQError:
      example:
        severity: severity
        criteriaName: criteriaName
        errorMessage: errorMessage
        ruleName: ruleName
        rulesetName: rulesetName
      properties:
        criteriaName:
          type: string
        errorMessage:
          type: string
        ruleName:
          type: string
        rulesetName:
          type: string
        severity:
          type: string
      title: data quality error(data submitted by dealer)
      type: object
    titaniumDQErrorsRequest:
      properties:
        assetId:
          type: string
        filter:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        page:
          $ref: '#/components/schemas/titaniumPage'
        submittedDate:
          type: string
        submittedId:
          type: string
        traceName:
          type: string
      type: object
    titaniumDQErrorsResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          totalRows: 1
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumDataQualityError:
      example:
        severity: 0
        message: message
      properties:
        message:
          type: string
        severity:
          type: integer
      type: object
    titaniumDataQualityErrors:
      example:
        errors:
        - severity: 0
          message: message
        - severity: 0
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/titaniumDataQualityError'
          type: array
      type: object
    titaniumDataQualityErrorsResponse:
      example:
        submittedData:
        - values: "{}"
          key: key
        - values: "{}"
          key: key
        dataQualityErrors:
          high:
          - severity: severity
            criteriaName: criteriaName
            errorMessage: errorMessage
            ruleName: ruleName
            rulesetName: rulesetName
          - severity: severity
            criteriaName: criteriaName
            errorMessage: errorMessage
            ruleName: ruleName
            rulesetName: rulesetName
          low:
          - severity: severity
            criteriaName: criteriaName
            errorMessage: errorMessage
            ruleName: ruleName
            rulesetName: rulesetName
          - severity: severity
            criteriaName: criteriaName
            errorMessage: errorMessage
            ruleName: ruleName
            rulesetName: rulesetName
          medium:
          - severity: severity
            criteriaName: criteriaName
            errorMessage: errorMessage
            ruleName: ruleName
            rulesetName: rulesetName
          - severity: severity
            criteriaName: criteriaName
            errorMessage: errorMessage
            ruleName: ruleName
            rulesetName: rulesetName
        totalRows: 0
      properties:
        dataQualityErrors:
          $ref: '#/components/schemas/titaniumSeverityToDataQuality'
        submittedData:
          items:
            $ref: '#/components/schemas/titaniumSubmittedData'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumDateAndValue:
      example:
        date: date
        value: "{}"
      properties:
        date:
          type: string
        value:
          properties: {}
          type: object
      type: object
    titaniumDecision:
      type: string
    titaniumDependency:
      example:
        entityName: entityName
        entityType: entityType
        scope: scope
        usages:
        - usageName: usageName
          usageType: usageType
        - usageName: usageName
          usageType: usageType
        version: version
        entity: entity
      properties:
        entity:
          type: string
        entityName:
          type: string
        entityType:
          type: string
        scope:
          type: string
        usages:
          items:
            $ref: '#/components/schemas/titaniumUsage'
          type: array
        version:
          type: string
      type: object
    titaniumDescriptorBasedIdentifier:
      example:
        uid: uid
        descriptorName: descriptorName
      properties:
        descriptorName:
          type: string
        uid:
          type: string
      type: object
    titaniumDescriptorBasedResultsList:
      example:
        results:
        - uid: uid
          descriptorName: descriptorName
        - uid: uid
          descriptorName: descriptorName
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumDescriptorBasedIdentifier'
          type: array
      type: object
    titaniumDescriptorDefinition:
      example:
        scope: scope
        name: name
        options: "{}"
        fields:
        - nullable: true
          name: name
          options: "{}"
          alias: alias
          type: type
        - nullable: true
          name: name
          options: "{}"
          alias: alias
          type: type
      properties:
        fields:
          items:
            $ref: '#/components/schemas/titaniumDescriptorField'
          type: array
        name:
          type: string
        options:
          properties: {}
          type: object
        scope:
          type: string
      type: object
    titaniumDescriptorDefinitionResponse:
      example:
        data: data
        error:
          code: 0
          message: message
      properties:
        data:
          type: string
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumDescriptorDependenciesResponse:
      example:
        dependencies:
        - col: col
          dependency:
          - entityName: entityName
            entityType: entityType
            scope: scope
            usages:
            - usageName: usageName
              usageType: usageType
            - usageName: usageName
              usageType: usageType
            version: version
            entity: entity
          - entityName: entityName
            entityType: entityType
            scope: scope
            usages:
            - usageName: usageName
              usageType: usageType
            - usageName: usageName
              usageType: usageType
            version: version
            entity: entity
        - col: col
          dependency:
          - entityName: entityName
            entityType: entityType
            scope: scope
            usages:
            - usageName: usageName
              usageType: usageType
            - usageName: usageName
              usageType: usageType
            version: version
            entity: entity
          - entityName: entityName
            entityType: entityType
            scope: scope
            usages:
            - usageName: usageName
              usageType: usageType
            - usageName: usageName
              usageType: usageType
            version: version
            entity: entity
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/titaniumColDependency'
          type: array
      type: object
    titaniumDescriptorField:
      example:
        nullable: true
        name: name
        options: "{}"
        alias: alias
        type: type
      properties:
        alias:
          type: string
        name:
          type: string
        nullable:
          type: boolean
        options:
          properties: {}
          type: object
        type:
          type: string
      title: definition of descriptor field
      type: object
    titaniumDescriptorList:
      example:
        data:
          results:
          - uid: uid
            name: name
          - uid: uid
            name: name
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumResultsList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumDescriptorPairBasedAcknowledgeResponse:
      example:
        data:
          uid: uid
          destDescriptor: destDescriptor
          srcDescriptor: srcDescriptor
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumDescriptorPairBasedIdentifier'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumDescriptorPairBasedGetDefinition:
      properties:
        destDescriptor:
          type: string
        identifier:
          $ref: '#/components/schemas/titaniumIdentifier'
        scope:
          type: string
        srcDescriptor:
          type: string
      title: DescriptorPairBasedGetDefinition is used to identify mapping rule (because
        descriptor identify rules) and this definition can be used to get specific
        rule
      type: object
    titaniumDescriptorPairBasedIdentifier:
      example:
        uid: uid
        destDescriptor: destDescriptor
        srcDescriptor: srcDescriptor
      properties:
        destDescriptor:
          type: string
        srcDescriptor:
          type: string
        uid:
          type: string
      type: object
    titaniumDescriptorPairBasedResultsList:
      example:
        results:
        - uid: uid
          destDescriptor: destDescriptor
          srcDescriptor: srcDescriptor
        - uid: uid
          destDescriptor: destDescriptor
          srcDescriptor: srcDescriptor
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumDescriptorPairBasedIdentifier'
          type: array
      type: object
    titaniumDtccTabRequest:
      properties:
        assetId:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        page:
          $ref: '#/components/schemas/titaniumPage'
        snapDate:
          type: string
        subGroupKeySearch:
          $ref: '#/components/schemas/titaniumSubGroupKeySearch'
        submissionId:
          type: string
        traceName:
          type: string
      type: object
    titaniumDtccTabResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumDtccTabResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumDtccTabResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        page:
          pageNumber: 0
          size: 6
          totalNumberOfElements: totalNumberOfElements
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        page:
          $ref: '#/components/schemas/titaniumPage'
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
      type: object
    titaniumDynamicLut:
      example:
        filter: filter
        type: type
        value: "{}"
        key:
        - key
        - key
      properties:
        filter:
          type: string
        key:
          items:
            type: string
          type: array
        type:
          type: string
        value:
          properties: {}
          type: object
      type: object
    titaniumEVPRequest:
      properties:
        assetId:
          type: string
        consensusRunTimestamp:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        page:
          $ref: '#/components/schemas/titaniumPage'
        submittedDate:
          type: string
        traceName:
          type: string
      type: object
    titaniumEVPResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumEVPResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumEVPResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        page:
          pageNumber: 0
          size: 6
          totalNumberOfElements: totalNumberOfElements
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        page:
          $ref: '#/components/schemas/titaniumPage'
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
      type: object
    titaniumEnableDisableRequest:
      properties:
        name:
          type: string
        scope:
          type: string
      title: "TODO: remove this, just use GetDefinition"
      type: object
    titaniumEntityDefinition:
      example:
        scope: scope
        name: name
        definition: definition
        type: type
      properties:
        definition:
          type: string
        name:
          type: string
        scope:
          type: string
        type:
          type: string
      type: object
    titaniumEntityIdentifier:
      properties:
        identifier:
          $ref: '#/components/schemas/titaniumIdentifier'
        scope:
          type: string
        type:
          type: string
      type: object
    titaniumEntityType:
      type: string
    titaniumError:
      example:
        code: 0
        message: message
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    titaniumErrorDefinition:
      example:
        messageArgs:
        - messageArgs
        - messageArgs
        message: message
      properties:
        message:
          type: string
        messageArgs:
          items:
            type: string
          type: array
      type: object
    titaniumEvidenceType:
      type: string
    titaniumEvidentalPricing:
      example:
        absDiffFromEvpMid: "{}"
        evpLowerBoundary: "{}"
        ask: "{}"
        subPriceDiff: "{}"
        mid: "{}"
        tradesOrOrdersCount: "{}"
        evpUpperBoundary: "{}"
        bid: "{}"
        evpMidAbsDiffFromLatestTrade: "{}"
      properties:
        absDiffFromEvpMid:
          properties: {}
          type: object
        ask:
          properties: {}
          type: object
        bid:
          properties: {}
          type: object
        evpLowerBoundary:
          properties: {}
          type: object
        evpMidAbsDiffFromLatestTrade:
          properties: {}
          type: object
        evpUpperBoundary:
          properties: {}
          type: object
        mid:
          properties: {}
          type: object
        subPriceDiff:
          properties: {}
          type: object
        tradesOrOrdersCount:
          properties: {}
          type: object
      type: object
    titaniumEvpAlignmentScore:
      example:
        score: "{}"
        evpMid: "{}"
        mean: "{}"
        scoreStatus: scoreStatus
        history:
        - date: date
          score: "{}"
          scoreStatus: scoreStatus
        - date: date
          score: "{}"
          scoreStatus: scoreStatus
        stdDev: "{}"
      properties:
        evpMid:
          properties: {}
          type: object
        history:
          items:
            $ref: '#/components/schemas/titaniumTradeAligmentDateAndValue'
          type: array
        mean:
          properties: {}
          type: object
        score:
          properties: {}
          type: object
        scoreStatus:
          type: string
        stdDev:
          properties: {}
          type: object
      type: object
    titaniumEvpAnchorDetails:
      example:
        midCalculated: "{}"
        mid: "{}"
        distanceToConsensus: 0.8008281904610115
      properties:
        distanceToConsensus:
          type: number
        mid:
          properties: {}
          type: object
        midCalculated:
          properties: {}
          type: object
      type: object
    titaniumEvpQualityScore:
      example:
        score: "{}"
        tradeCount: tradeCount
        indicativeCount: indicativeCount
        orderCount: orderCount
        history:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
      properties:
        history:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
        indicativeCount:
          type: string
        orderCount:
          type: string
        score:
          properties: {}
          type: object
        tradeCount:
          type: string
      type: object
    titaniumEvpStatus:
      example:
        date: date
        instrumentType: instrumentType
        added: added
        logPath: logPath
        s3path: s3path
        dealer: dealer
        userEmail: userEmail
        snapTime: snapTime
        asset: asset
        status: status
      properties:
        added:
          type: string
        asset:
          type: string
        date:
          type: string
        dealer:
          type: string
        instrumentType:
          type: string
        logPath:
          type: string
        s3path:
          type: string
        snapTime:
          type: string
        status:
          type: string
        userEmail:
          type: string
      type: object
    titaniumEvpStatuses:
      example:
        evpStatuses:
        - date: date
          instrumentType: instrumentType
          added: added
          logPath: logPath
          s3path: s3path
          dealer: dealer
          userEmail: userEmail
          snapTime: snapTime
          asset: asset
          status: status
        - date: date
          instrumentType: instrumentType
          added: added
          logPath: logPath
          s3path: s3path
          dealer: dealer
          userEmail: userEmail
          snapTime: snapTime
          asset: asset
          status: status
      properties:
        evpStatuses:
          items:
            $ref: '#/components/schemas/titaniumEvpStatus'
          type: array
      type: object
    titaniumEvpStatusesRequest:
      properties:
        sliceRequestData:
          $ref: '#/components/schemas/titaniumSliceRequestData'
      type: object
    titaniumEvpStatusesResponse:
      example:
        data:
          slice:
            total: total
          evpStatuses:
            evpStatuses:
            - date: date
              instrumentType: instrumentType
              added: added
              logPath: logPath
              s3path: s3path
              dealer: dealer
              userEmail: userEmail
              snapTime: snapTime
              asset: asset
              status: status
            - date: date
              instrumentType: instrumentType
              added: added
              logPath: logPath
              s3path: s3path
              dealer: dealer
              userEmail: userEmail
              snapTime: snapTime
              asset: asset
              status: status
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumEvpStatusesResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumEvpStatusesResponseData:
      example:
        slice:
          total: total
        evpStatuses:
          evpStatuses:
          - date: date
            instrumentType: instrumentType
            added: added
            logPath: logPath
            s3path: s3path
            dealer: dealer
            userEmail: userEmail
            snapTime: snapTime
            asset: asset
            status: status
          - date: date
            instrumentType: instrumentType
            added: added
            logPath: logPath
            s3path: s3path
            dealer: dealer
            userEmail: userEmail
            snapTime: snapTime
            asset: asset
            status: status
      properties:
        evpStatuses:
          $ref: '#/components/schemas/titaniumEvpStatuses'
        slice:
          $ref: '#/components/schemas/titaniumSlice'
      type: object
    titaniumExpertiseRank:
      example:
        expertsCount: "{}"
        anchorPrice: "{}"
        expertiseScore: "{}"
        rank: "{}"
        absDistanceToAnchor: "{}"
        history:
        - date: date
          expertsCount: "{}"
          rank: "{}"
        - date: date
          expertsCount: "{}"
          rank: "{}"
        submissionPrice: "{}"
      properties:
        absDistanceToAnchor:
          properties: {}
          type: object
        anchorPrice:
          properties: {}
          type: object
        expertiseScore:
          properties: {}
          type: object
        expertsCount:
          properties: {}
          type: object
        history:
          items:
            $ref: '#/components/schemas/titaniumExpertiseRankHistoryElement'
          type: array
        rank:
          properties: {}
          type: object
        submissionPrice:
          properties: {}
          type: object
      type: object
    titaniumExpertiseRankHistoryElement:
      example:
        date: date
        expertsCount: "{}"
        rank: "{}"
      properties:
        date:
          type: string
        expertsCount:
          properties: {}
          type: object
        rank:
          properties: {}
          type: object
      type: object
    titaniumExportPresignedUrlResponseResponseData:
      example:
        getRequestUrl: getRequestUrl
        fileName: fileName
        compression: compression
      properties:
        compression:
          type: string
        fileName:
          type: string
        getRequestUrl:
          type: string
      title: ExportPresignedUrlResponseResponseData is data that contains pre signed
        url and compression type
      type: object
    titaniumExportReportRequest:
      properties:
        assetId:
          type: string
        consensusRunTimestamp:
          type: string
        traceName:
          type: string
      title: ExportReportRequest is a request for exporting report data
      type: object
    titaniumExportRequest:
      properties:
        assetId:
          type: string
        consensusRunTimestamp:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        filters:
          items:
            $ref: '#/components/schemas/titaniumFilter'
          type: array
        includeHeader:
          type: boolean
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        submissionDate:
          type: string
        traceName:
          type: string
      type: object
    titaniumExportResponse:
      example:
        data:
          getRequestUrl: getRequestUrl
          fileName: fileName
          compression: compression
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumExportPresignedUrlResponseResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: ExportResponse is a response containing pre-signed URLs and compression
        type for exporting report
      type: object
    titaniumExportType:
      type: string
    titaniumFields:
      example:
        groupingKeys:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
      properties:
        groupingKeys:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
      type: object
    titaniumFileDelimiterSetting:
      example:
        delimiter: delimiter
        encapsulatingChar: encapsulatingChar
      properties:
        delimiter:
          type: string
        encapsulatingChar:
          type: string
      type: object
    titaniumFileDescriptorSetting:
      example:
        descriptorName: descriptorName
      properties:
        descriptorName:
          type: string
      type: object
    titaniumFileHistoryRequest:
      properties:
        assetId:
          type: string
        client:
          type: string
        fileDate:
          type: string
        filter:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        traceName:
          type: string
      title: FileHistoryRequest is used to request the history of files submitted
        for a specific asset
      type: object
    titaniumFileHistoryResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 6
          rows:
          - latestConsensusMember: true
            consensusRun:
            - consensusRunId: consensusRunId
              numberOfParticipants: 0
              consensusResultSetInfo:
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              runBy: runBy
            - consensusRunId: consensusRunId
              numberOfParticipants: 0
              consensusResultSetInfo:
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              runBy: runBy
            values:
            - "{}"
            - "{}"
          - latestConsensusMember: true
            consensusRun:
            - consensusRunId: consensusRunId
              numberOfParticipants: 0
              consensusResultSetInfo:
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              runBy: runBy
            - consensusRunId: consensusRunId
              numberOfParticipants: 0
              consensusResultSetInfo:
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              - cohortName: cohortName
                consensusRunTimestamp: consensusRunTimestamp
                dataContent: dataContent
                consensusResultSetId: consensusResultSetId
                description: description
                type: type
                status: status
              runBy: runBy
            values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumFileHistoryResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumFileHistoryResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 6
        rows:
        - latestConsensusMember: true
          consensusRun:
          - consensusRunId: consensusRunId
            numberOfParticipants: 0
            consensusResultSetInfo:
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            runBy: runBy
          - consensusRunId: consensusRunId
            numberOfParticipants: 0
            consensusResultSetInfo:
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            runBy: runBy
          values:
          - "{}"
          - "{}"
        - latestConsensusMember: true
          consensusRun:
          - consensusRunId: consensusRunId
            numberOfParticipants: 0
            consensusResultSetInfo:
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            runBy: runBy
          - consensusRunId: consensusRunId
            numberOfParticipants: 0
            consensusResultSetInfo:
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            - cohortName: cohortName
              consensusRunTimestamp: consensusRunTimestamp
              dataContent: dataContent
              consensusResultSetId: consensusResultSetId
              description: description
              type: type
              status: status
            runBy: runBy
          values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumFileHistoryRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumFileHistoryRow:
      example:
        latestConsensusMember: true
        consensusRun:
        - consensusRunId: consensusRunId
          numberOfParticipants: 0
          consensusResultSetInfo:
          - cohortName: cohortName
            consensusRunTimestamp: consensusRunTimestamp
            dataContent: dataContent
            consensusResultSetId: consensusResultSetId
            description: description
            type: type
            status: status
          - cohortName: cohortName
            consensusRunTimestamp: consensusRunTimestamp
            dataContent: dataContent
            consensusResultSetId: consensusResultSetId
            description: description
            type: type
            status: status
          runBy: runBy
        - consensusRunId: consensusRunId
          numberOfParticipants: 0
          consensusResultSetInfo:
          - cohortName: cohortName
            consensusRunTimestamp: consensusRunTimestamp
            dataContent: dataContent
            consensusResultSetId: consensusResultSetId
            description: description
            type: type
            status: status
          - cohortName: cohortName
            consensusRunTimestamp: consensusRunTimestamp
            dataContent: dataContent
            consensusResultSetId: consensusResultSetId
            description: description
            type: type
            status: status
          runBy: runBy
        values:
        - "{}"
        - "{}"
      properties:
        consensusRun:
          items:
            $ref: '#/components/schemas/titaniumConsensusRunInfo'
          type: array
        latestConsensusMember:
          type: boolean
        values:
          items:
            properties: {}
            type: object
          type: array
      type: object
    titaniumFileIdentifier:
      example:
        filename: filename
        uploadDate: uploadDate
        fileStatus: fileStatus
      properties:
        fileStatus:
          type: string
        filename:
          type: string
        uploadDate:
          type: string
      type: object
    titaniumFileList:
      example:
        results:
        - filename: filename
          uploadDate: uploadDate
          fileStatus: fileStatus
        - filename: filename
          uploadDate: uploadDate
          fileStatus: fileStatus
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumFileIdentifier'
          type: array
      type: object
    titaniumFilePreview:
      example:
        delimiterSetting:
          delimiter: delimiter
          encapsulatingChar: encapsulatingChar
        rows:
        - "{}"
        - "{}"
        descriptorDefinition:
          scope: scope
          name: name
          options: "{}"
          fields:
          - nullable: true
            name: name
            options: "{}"
            alias: alias
            type: type
          - nullable: true
            name: name
            options: "{}"
            alias: alias
            type: type
      properties:
        delimiterSetting:
          $ref: '#/components/schemas/titaniumFileDelimiterSetting'
        descriptorDefinition:
          $ref: '#/components/schemas/titaniumDescriptorDefinition'
        rows:
          items:
            properties: {}
            type: object
          type: array
      type: object
    titaniumFileSubmissionRequest:
      properties:
        assetId:
          type: string
        client:
          type: string
        compression:
          type: string
        date:
          type: string
        file:
          type: string
        fileName:
          type: string
        traceName:
          type: string
      title: FileSubmissionRequest is used to submit a file(with specified compression
        type and etc.)
      type: object
    titaniumFilter:
      properties:
        key:
          type: string
        operator:
          type: string
        value:
          properties: {}
          type: object
      title: Filter is used to customize query for getting some data
      type: object
    titaniumFilterPack:
      properties:
        filterPacks:
          items:
            $ref: '#/components/schemas/titaniumFilterPack'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/titaniumFilter'
          type: array
        logicalOperation:
          type: string
      type: object
    titaniumGenericChartMetadata:
      properties:
        filter:
          type: string
        groupBy:
          items:
            $ref: '#/components/schemas/titaniumNameAliasPair'
          type: array
        metrics:
          items:
            $ref: '#/components/schemas/titaniumNameAliasPair'
          type: array
        rowLimit:
          type: integer
        selectFields:
          items:
            $ref: '#/components/schemas/titaniumNameAliasPair'
          type: array
        seriesLimit:
          type: integer
        sortBy:
          type: string
      type: object
    titaniumGenericChartMetadataDataQuality:
      properties:
        assetId:
          type: string
        chartMetadata:
          $ref: '#/components/schemas/titaniumGenericChartMetadata'
        client:
          type: string
        dateRangeFilter:
          type: string
        id:
          type: string
        traceName:
          type: string
      type: object
    titaniumGenericChartMetadataDataQualityResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumGenericChartResponse'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGenericChartResponse:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumGenericChartResponseRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumGenericChartResponseRow:
      example:
        values:
        - "{}"
        - "{}"
      properties:
        values:
          items:
            properties: {}
            type: object
          type: array
      type: object
    titaniumGetAttachmentUploadUrlRequest:
      properties:
        assetId:
          type: string
        fileName:
          type: string
        submittedId:
          type: string
      type: object
    titaniumGetAttachmentUploadUrlResponse:
      example:
        data:
          fileName: fileName
          uploadUrl: uploadUrl
          attachmentId: attachmentId
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/GetAttachmentUploadUrlResponseAttachmentUploadUrl'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: GetAttachmentUploadUrlResponse message is the response to a GetAttachmentUploadUrlRequest
      type: object
    titaniumGetChallengeDetailsRequest:
      properties:
        assetId:
          type: string
        consensusRunId:
          type: string
        submissionId:
          type: string
        submittedDate:
          type: string
        traceName:
          type: string
      type: object
    titaniumGetChallengeDetailsResponse:
      example:
        data:
          commonChallengeData:
            date: date
            evidenceType: evidenceType
            time: time
          totalNumber: "{}"
          challengeData: "{}"
          attachments:
          - name: name
            attachmentId: attachmentId
            url: url
          - name: name
            attachmentId: attachmentId
            url: url
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/GetChallengeDetailsResponseResult'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetChartDataRequest:
      properties:
        assetId:
          type: string
        chartId:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        invalidateCache:
          type: boolean
        parameters:
          properties: {}
          type: object
        sliceId:
          type: string
        traceName:
          type: string
      type: object
    titaniumGetChartDataResponse:
      example:
        data:
          chartId: chartId
          series:
          - metadata:
              columnNames:
              - columnNames
              - columnNames
            data:
            - "{}"
            - "{}"
            name: name
            contentType: contentType
          - metadata:
              columnNames:
              - columnNames
              - columnNames
            data:
            - "{}"
            - "{}"
            name: name
            contentType: contentType
          chartType: chartType
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumChartDataResponse'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetConsensusRunsData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        page:
          pageNumber: 0
          size: 6
          totalNumberOfElements: totalNumberOfElements
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        page:
          $ref: '#/components/schemas/titaniumPage'
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
      type: object
    titaniumGetConsensusRunsRequest:
      properties:
        assetId:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        page:
          $ref: '#/components/schemas/titaniumPage'
        participant:
          type: string
        showArchived:
          type: boolean
        snapDateFrom:
          type: string
        snapDateTo:
          type: string
        traceName:
          type: string
      type: object
    titaniumGetConsensusRunsResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumGetConsensusRunsData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetDataQualityErrorsRequest:
      properties:
        assetId:
          type: string
        groupKeys:
          $ref: '#/components/schemas/titaniumFilterPack'
        submissionId:
          type: string
        submittedDate:
          type: string
        traceName:
          type: string
      type: object
    titaniumGetDataQualityErrorsResponse:
      example:
        data:
          submittedData:
          - values: "{}"
            key: key
          - values: "{}"
            key: key
          dataQualityErrors:
            high:
            - severity: severity
              criteriaName: criteriaName
              errorMessage: errorMessage
              ruleName: ruleName
              rulesetName: rulesetName
            - severity: severity
              criteriaName: criteriaName
              errorMessage: errorMessage
              ruleName: ruleName
              rulesetName: rulesetName
            low:
            - severity: severity
              criteriaName: criteriaName
              errorMessage: errorMessage
              ruleName: ruleName
              rulesetName: rulesetName
            - severity: severity
              criteriaName: criteriaName
              errorMessage: errorMessage
              ruleName: ruleName
              rulesetName: rulesetName
            medium:
            - severity: severity
              criteriaName: criteriaName
              errorMessage: errorMessage
              ruleName: ruleName
              rulesetName: rulesetName
            - severity: severity
              criteriaName: criteriaName
              errorMessage: errorMessage
              ruleName: ruleName
              rulesetName: rulesetName
          totalRows: 0
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumDataQualityErrorsResponse'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: "response that consists of dq errors(information for those which have\
        \ errors : colum info values and etc) distributed by severity"
      type: object
    titaniumGetDefinition:
      properties:
        descriptorName:
          type: string
        identifier:
          $ref: '#/components/schemas/titaniumIdentifier'
        scope:
          type: string
      title: can be used as request to get some entity
      type: object
    titaniumGetFieldValuesResponse:
      example:
        data:
          values:
          - "{}"
          - "{}"
          type: type
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumValues'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: GetFieldValuesResponse is used to respond to request for field values.(it
        contains Value or Error in case of error)
      type: object
    titaniumGetFileExportUrlRequest:
      properties:
        exportType:
          type: string
        submittedDate:
          type: string
        submittedId:
          type: string
      type: object
    titaniumGetFileExportUrlResponse:
      example:
        data:
          s3Url: s3Url
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/GetFileExportUrlResponseFileExportUrl'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetGeneratedValidationRuleResponse:
      example:
        data: data
        error:
          code: 0
          message: message
      properties:
        data:
          type: string
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetKVResponse:
      example:
        data:
          ttl: ttl
          ttlDate: ttlDate
          value: "{}"
          key: key
          ttlFrom: ttlFrom
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumKVAsset'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetLookupTableResponse:
      example:
        data:
          totalRecords: 0
          name: name
          fields:
          - name: name
            type: type
            key: true
          - name: name
            type: type
            key: true
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
          type: type
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumLookupTableDefinition'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetPredefinedFiltersResponse:
      example:
        data:
          specificAssetFilters:
          - resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          - resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          filters:
          - resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          - resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumPredefinedFilters'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetSubmissionFilesData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        page:
          pageNumber: 0
          size: 6
          totalNumberOfElements: totalNumberOfElements
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        page:
          $ref: '#/components/schemas/titaniumPage'
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
      type: object
    titaniumGetSubmissionFilesRequest:
      properties:
        assetId:
          type: string
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        page:
          $ref: '#/components/schemas/titaniumPage'
        snapDateFrom:
          type: string
        snapDateTo:
          type: string
        traceName:
          type: string
      type: object
    titaniumGetSubmissionFilesResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumGetSubmissionFilesData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetSupportedFields:
      properties:
        assetId:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        traceName:
          type: string
      title: GetSupportedFields is used to request information about the supported
        field for specific asset
      type: object
    titaniumGetSupportedFieldsResponse:
      example:
        data:
          groupingKeys:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumFields'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetTableResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: totalRows
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumTable'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumGetUserNotificationByMarketRequest:
      properties:
        marketId:
          type: string
        userId:
          type: string
      type: object
    titaniumGetUserNotificationRequest:
      properties:
        userId:
          type: string
      type: object
    titaniumGetUserPermissionsRequest:
      properties:
        userId:
          type: string
      type: object
    titaniumGetUserRequest:
      properties:
        email:
          type: string
      type: object
    titaniumGetValidationRuleResponse:
      example:
        data:
          uid: uid
          scope: scope
          definition:
            criteria:
            - metadata:
              - metadata
              - metadata
              name: name
              description: description
              rule: rule
              validations:
              - filter: filter
                severity: 0
                lookuptable:
                  filter: filter
                  type: type
                  value: "{}"
                  key:
                  - key
                  - key
                ruleType: ruleType
                name: name
                description: description
                rule: rule
                error:
                  messageArgs:
                  - messageArgs
                  - messageArgs
                  message: message
                tags:
                - tags
                - tags
              - filter: filter
                severity: 0
                lookuptable:
                  filter: filter
                  type: type
                  value: "{}"
                  key:
                  - key
                  - key
                ruleType: ruleType
                name: name
                description: description
                rule: rule
                error:
                  messageArgs:
                  - messageArgs
                  - messageArgs
                  message: message
                tags:
                - tags
                - tags
              tags:
              - tags
              - tags
            - metadata:
              - metadata
              - metadata
              name: name
              description: description
              rule: rule
              validations:
              - filter: filter
                severity: 0
                lookuptable:
                  filter: filter
                  type: type
                  value: "{}"
                  key:
                  - key
                  - key
                ruleType: ruleType
                name: name
                description: description
                rule: rule
                error:
                  messageArgs:
                  - messageArgs
                  - messageArgs
                  message: message
                tags:
                - tags
                - tags
              - filter: filter
                severity: 0
                lookuptable:
                  filter: filter
                  type: type
                  value: "{}"
                  key:
                  - key
                  - key
                ruleType: ruleType
                name: name
                description: description
                rule: rule
                error:
                  messageArgs:
                  - messageArgs
                  - messageArgs
                  message: message
                tags:
                - tags
                - tags
              tags:
              - tags
              - tags
            descriptorName: descriptorName
          descriptorName: descriptorName
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumValidationRuleDefinition'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumHistogramData:
      example:
        submissionHistogram:
          valid:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          totalParseErrors: 5
          highSeverity:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          totalInvalidRows: 5
          lowSeverity:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          totalRows: 2
          mediumSeverity:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
        consensusHistogram:
          noConsensus:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          totalParseErrors: 1
          highSeverity:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          nonOutliers:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          outliers:
            resultCount: 0
            instrumentTypesWithCount:
            - value: "{}"
              key: key
            - value: "{}"
              key: key
            value: "{}"
            key: key
            operator: operator
            predefinedValueLabel: predefinedValueLabel
          rows: 6
      properties:
        consensusHistogram:
          $ref: '#/components/schemas/titaniumConsensusHistogram'
        submissionHistogram:
          $ref: '#/components/schemas/titaniumSubmissionHistogram'
      title: HistogramData is representation of histogram
      type: object
    titaniumHistogramResponse:
      example:
        data:
          submissionHistogram:
            valid:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
            totalParseErrors: 5
            highSeverity:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
            totalInvalidRows: 5
            lowSeverity:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
            totalRows: 2
            mediumSeverity:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
          consensusHistogram:
            noConsensus:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
            totalParseErrors: 1
            highSeverity:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
            nonOutliers:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
            outliers:
              resultCount: 0
              instrumentTypesWithCount:
              - value: "{}"
                key: key
              - value: "{}"
                key: key
              value: "{}"
              key: key
              operator: operator
              predefinedValueLabel: predefinedValueLabel
            rows: 6
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumHistogramData'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: HistogramResponse is used to receive a response with histogram data
      type: object
    titaniumIdentifier:
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    titaniumInstrumentSubmissionStatus:
      example:
        consensusStatusDetailsHistory:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
        participantSubmissionsEvidenceStatusHistory:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
        consensusStatusHistory:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
        consensusStatus: consensusStatus
        consensusStatusDetails: consensusStatusDetails
        dqeHistory:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
        highestDqe: highestDqe
        participantSubmissionsEvidenceStatus: participantSubmissionsEvidenceStatus
        participantCohortConsensusStatus: participantCohortConsensusStatus
        participantCohortConsensusStatusHistory:
        - date: date
          value: "{}"
        - date: date
          value: "{}"
      properties:
        consensusStatus:
          type: string
        consensusStatusDetails:
          type: string
        consensusStatusDetailsHistory:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
        consensusStatusHistory:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
        dqeHistory:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
        highestDqe:
          type: string
        participantCohortConsensusStatus:
          type: string
        participantCohortConsensusStatusHistory:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
        participantSubmissionsEvidenceStatus:
          type: string
        participantSubmissionsEvidenceStatusHistory:
          items:
            $ref: '#/components/schemas/titaniumDateAndValue'
          type: array
      type: object
    titaniumKVAsset:
      example:
        ttl: ttl
        ttlDate: ttlDate
        value: "{}"
        key: key
        ttlFrom: ttlFrom
      properties:
        key:
          type: string
        ttl:
          type: string
        ttlDate:
          type: string
        ttlFrom:
          type: string
        value:
          properties: {}
          type: object
      type: object
    titaniumKVList:
      example:
        results:
        - ttlDate: ttlDate
          key: key
        - ttlDate: ttlDate
          key: key
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumKVListAsset'
          type: array
      type: object
    titaniumKVListAsset:
      example:
        ttlDate: ttlDate
        key: key
      properties:
        key:
          type: string
        ttlDate:
          type: string
      type: object
    titaniumKVOperationResponse:
      example:
        error:
          code: 0
          message: message
        message: message
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        message:
          type: string
      type: object
    titaniumKVRequest:
      properties:
        key:
          type: string
      type: object
    titaniumKeyAndValue:
      example:
        value: "{}"
        key: key
      properties:
        key:
          type: string
        value:
          properties: {}
          type: object
      type: object
    titaniumLimit:
      properties:
        value:
          type: integer
      title: use for customize result of query with limit of returned results
      type: object
    titaniumListClientsResponse:
      example:
        data:
          clients:
          - displayName: displayName
            name: name
          - displayName: displayName
            name: name
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumListClientsResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumListClientsResponseData:
      example:
        clients:
        - displayName: displayName
          name: name
        - displayName: displayName
          name: name
      properties:
        clients:
          items:
            $ref: '#/components/schemas/titaniumClientName'
          type: array
      type: object
    titaniumListCustomFunctionRequest:
      properties:
        descriptorName:
          type: string
        descriptorType:
          type: string
        request:
          $ref: '#/components/schemas/titaniumListRequest'
      type: object
    titaniumListCustomFunctionResponse:
      example:
        data:
          results:
          - uid: uid
            scope: scope
            name: name
            outputType: outputType
            definition: definition
            usages:
            - identifier:
                uid: uid
                name: name
              type: type
            - identifier:
                uid: uid
                name: name
              type: type
            category: category
            descriptorName: descriptorName
            descriptorType: descriptorType
          - uid: uid
            scope: scope
            name: name
            outputType: outputType
            definition: definition
            usages:
            - identifier:
                uid: uid
                name: name
              type: type
            - identifier:
                uid: uid
                name: name
              type: type
            category: category
            descriptorName: descriptorName
            descriptorType: descriptorType
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumCustomFunctionList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumListKVRequest:
      properties:
        filter:
          type: string
      type: object
    titaniumListKVResponse:
      example:
        data:
          results:
          - ttlDate: ttlDate
            key: key
          - ttlDate: ttlDate
            key: key
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumKVList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumListLookupTableResponse:
      example:
        data:
          totalRecords: 0
          results:
          - identifier:
              uid: uid
              name: name
            type: type
            valueField: valueField
          - identifier:
              uid: uid
              name: name
            type: type
            valueField: valueField
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumLookupTableList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumListRequest:
      properties:
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        scope:
          type: string
      type: object
    titaniumListRuleResponse:
      example:
        data:
          results:
          - uid: uid
            descriptorName: descriptorName
          - uid: uid
            descriptorName: descriptorName
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumDescriptorBasedResultsList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumListUniqueKeysResponse:
      example:
        data:
          results:
          - scope: scope
            uniqueKey:
            - uniqueKey
            - uniqueKey
            name: name
            orderBy:
            - orderBy
            - orderBy
            order: order
          - scope: scope
            uniqueKey:
            - uniqueKey
            - uniqueKey
            name: name
            orderBy:
            - orderBy
            - orderBy
            order: order
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumUniqueKeyList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumListVersionResponse:
      example:
        data:
          versions:
          - createdAt: createdAt
            versionId: versionId
          - createdAt: createdAt
            versionId: versionId
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumVersionList'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumLoginRequest:
      properties:
        username:
          type: string
      type: object
    titaniumLoginResponse:
      example:
        data:
          token: token
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumLoginResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumLoginResponseData:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    titaniumLookupTableDefinition:
      example:
        totalRecords: 0
        name: name
        fields:
        - name: name
          type: type
          key: true
        - name: name
          type: type
          key: true
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
        type: type
      properties:
        fields:
          items:
            $ref: '#/components/schemas/titaniumLutField'
          type: array
        name:
          type: string
        rows:
          items:
            $ref: '#/components/schemas/titaniumLutEntry'
          type: array
        totalRecords:
          type: integer
        type:
          type: string
      type: object
    titaniumLookupTableList:
      example:
        totalRecords: 0
        results:
        - identifier:
            uid: uid
            name: name
          type: type
          valueField: valueField
        - identifier:
            uid: uid
            name: name
          type: type
          valueField: valueField
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumLookupTableListItem'
          type: array
        totalRecords:
          type: integer
      type: object
    titaniumLookupTableListItem:
      example:
        identifier:
          uid: uid
          name: name
        type: type
        valueField: valueField
      properties:
        identifier:
          $ref: '#/components/schemas/titaniumIdentifier'
        type:
          type: string
        valueField:
          type: string
      type: object
    titaniumLutEntry:
      example:
        values:
        - "{}"
        - "{}"
      properties:
        values:
          items:
            properties: {}
            type: object
          type: array
      type: object
    titaniumLutField:
      example:
        name: name
        type: type
        key: true
      properties:
        key:
          type: boolean
        name:
          type: string
        type:
          type: string
      type: object
    titaniumLutType:
      type: string
    titaniumMappingRuleDefinition:
      example:
        uid: uid
        scope: scope
        transformations:
        - targetColumn: targetColumn
          name: name
          description: description
          rule: rule
          lut:
            filter: filter
            type: type
            value: "{}"
            key:
            - key
            - key
          sourceColumn: sourceColumn
        - targetColumn: targetColumn
          name: name
          description: description
          rule: rule
          lut:
            filter: filter
            type: type
            value: "{}"
            key:
            - key
            - key
          sourceColumn: sourceColumn
        destDescriptor: destDescriptor
        srcDescriptor: srcDescriptor
      properties:
        destDescriptor:
          type: string
        scope:
          type: string
        srcDescriptor:
          type: string
        transformations:
          items:
            $ref: '#/components/schemas/titaniumTransformation'
          type: array
        uid:
          type: string
      title: representation of mapping rule (which specifies rules for transformation
        data into the system)
      type: object
    titaniumMappingRuleList:
      example:
        data:
          results:
          - uid: uid
            destDescriptor: destDescriptor
            srcDescriptor: srcDescriptor
          - uid: uid
            destDescriptor: destDescriptor
            srcDescriptor: srcDescriptor
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumDescriptorPairBasedResultsList'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: representation of mapping rule list(representation of rules using pair
        based descriptors)
      type: object
    titaniumMappingRuleResponse:
      example:
        data:
          uid: uid
          scope: scope
          transformations:
          - targetColumn: targetColumn
            name: name
            description: description
            rule: rule
            lut:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            sourceColumn: sourceColumn
          - targetColumn: targetColumn
            name: name
            description: description
            rule: rule
            lut:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            sourceColumn: sourceColumn
          destDescriptor: destDescriptor
          srcDescriptor: srcDescriptor
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumMappingRuleDefinition'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumMarket:
      example:
        name: name
        id: id
        user:
          notifyByAppEnabled: true
          organization: organization
          id: id
          notifyByEmailEnabled: true
          email: email
      properties:
        id:
          type: string
        name:
          type: string
        user:
          $ref: '#/components/schemas/titaniumUser'
      type: object
    titaniumMarketSnapTimeResponse:
      example:
        data:
          snapTimes:
          - snapTimes
          - snapTimes
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumSnapTimes'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumMessageResponse:
      example:
        data:
          message: message
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumMessageResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumMessageResponseData:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    titaniumMetadata:
      example:
        columnNames:
        - columnNames
        - columnNames
      properties:
        columnNames:
          items:
            type: string
          type: array
      type: object
    titaniumNameAliasPair:
      properties:
        alias:
          type: string
        name:
          type: string
      type: object
    titaniumNormalizationRuleDefinition:
      example:
        uid: uid
        scope: scope
        transformations:
        - targetColumn: targetColumn
          name: name
          description: description
          rule: rule
          lut:
            filter: filter
            type: type
            value: "{}"
            key:
            - key
            - key
          sourceColumn: sourceColumn
        - targetColumn: targetColumn
          name: name
          description: description
          rule: rule
          lut:
            filter: filter
            type: type
            value: "{}"
            key:
            - key
            - key
          sourceColumn: sourceColumn
        descriptorName: descriptorName
      properties:
        descriptorName:
          type: string
        scope:
          type: string
        transformations:
          items:
            $ref: '#/components/schemas/titaniumTransformation'
          type: array
        uid:
          type: string
      type: object
    titaniumNormalizationRuleResponse:
      example:
        data:
          uid: uid
          scope: scope
          transformations:
          - targetColumn: targetColumn
            name: name
            description: description
            rule: rule
            lut:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            sourceColumn: sourceColumn
          - targetColumn: targetColumn
            name: name
            description: description
            rule: rule
            lut:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            sourceColumn: sourceColumn
          descriptorName: descriptorName
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumNormalizationRuleDefinition'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: NormalizationRuleResponse is response after adding rule to the system(can
        return error or data for the rule that was added)
      type: object
    titaniumOnBoardRequest:
      properties:
        authorized:
          $ref: '#/components/schemas/titaniumAssetsList'
        client:
          type: string
        password:
          type: string
        publicKey:
          type: string
        username:
          type: string
      type: object
    titaniumOperatorOutliersRequest:
      properties:
        date:
          type: string
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
      type: object
    titaniumOperatorOutliersResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - "{}"
            - "{}"
          - values:
            - "{}"
            - "{}"
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumOperatorOutliersResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumOperatorOutliersResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumOrder:
      type: string
    titaniumOrderBy:
      properties:
        column:
          type: string
        order:
          type: string
      title: used to identify by which column need to order returned results
      type: object
    titaniumOutlierMetadata:
      example:
        reason: reason
        tenor: tenor
      properties:
        reason:
          type: string
        tenor:
          type: string
      type: object
    titaniumOutliersListRequest:
      properties:
        assetId:
          type: string
        consensusRunTimestamp:
          type: string
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        submittedDate:
          type: string
        submittedId:
          type: string
        traceName:
          type: string
      type: object
    titaniumOutliersRequest:
      properties:
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
      title: request for the outliers
      type: object
    titaniumOutliersResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - values
            - values
          - values:
            - values
            - values
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumOutliersResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: response contains rows(and information about it) that considered outlier
        by the system
      type: object
    titaniumOutliersResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - values
          - values
        - values:
          - values
          - values
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumOutliersRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumOutliersRow:
      example:
        values:
        - values
        - values
      properties:
        values:
          items:
            type: string
          type: array
      type: object
    titaniumPage:
      example:
        pageNumber: 0
        size: 6
        totalNumberOfElements: totalNumberOfElements
      properties:
        pageNumber:
          type: integer
        size:
          type: integer
        totalNumberOfElements:
          type: string
      type: object
    titaniumPopUpViewRequest:
      properties:
        assetId:
          type: string
        consensusId:
          type: string
        consensusRunTimestamp:
          type: string
        evaluatedPriceId:
          type: string
        submittedDate:
          type: string
        submittedId:
          type: string
        traceName:
          type: string
      title: PopUpViewRequest is request for information that need to be used in popup
        view
      type: object
    titaniumPopUpViewResponse:
      example:
        data:
          consensus:
            columns:
            - columnType: columnType
              rawColumnName: rawColumnName
              columnName: columnName
            - columnType: columnType
              rawColumnName: rawColumnName
              columnName: columnName
            values:
            - "{}"
            - "{}"
          evaluatedPrice:
            columns:
            - columnType: columnType
              rawColumnName: rawColumnName
              columnName: columnName
            - columnType: columnType
              rawColumnName: rawColumnName
              columnName: columnName
            values:
            - "{}"
            - "{}"
          groupingKeys:
          - val: val
            key: key
          - val: val
            key: key
          dataQualityErrors:
            errors:
            - severity: 0
              message: message
            - severity: 0
              message: message
          consensusDetails:
            calculationDetail: calculationDetail
            calculationStatus: calculationStatus
            highestSev: highestSev
            parseStatus: parseStatus
          rangesChart: rangesChart
          outlier: outlier
          validationErrors: validationErrors
          submission:
            columns:
            - columnType: columnType
              rawColumnName: rawColumnName
              columnName: columnName
            - columnType: columnType
              rawColumnName: rawColumnName
              columnName: columnName
            values:
            - "{}"
            - "{}"
          benchmark: benchmark
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumPopUpViewResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumPopUpViewResponseData:
      example:
        consensus:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          values:
          - "{}"
          - "{}"
        evaluatedPrice:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          values:
          - "{}"
          - "{}"
        groupingKeys:
        - val: val
          key: key
        - val: val
          key: key
        dataQualityErrors:
          errors:
          - severity: 0
            message: message
          - severity: 0
            message: message
        consensusDetails:
          calculationDetail: calculationDetail
          calculationStatus: calculationStatus
          highestSev: highestSev
          parseStatus: parseStatus
        rangesChart: rangesChart
        outlier: outlier
        validationErrors: validationErrors
        submission:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          values:
          - "{}"
          - "{}"
        benchmark: benchmark
      properties:
        benchmark:
          type: string
        consensus:
          $ref: '#/components/schemas/titaniumViewRow'
        consensusDetails:
          $ref: '#/components/schemas/titaniumConsensusDetail'
        dataQualityErrors:
          $ref: '#/components/schemas/titaniumDataQualityErrors'
        evaluatedPrice:
          $ref: '#/components/schemas/titaniumViewRow'
        groupingKeys:
          items:
            $ref: '#/components/schemas/titaniumStringKeyVal'
          type: array
        outlier:
          type: string
        rangesChart:
          type: string
        submission:
          $ref: '#/components/schemas/titaniumViewRow'
        validationErrors:
          type: string
      type: object
    titaniumPredefinedFilter:
      example:
        resultCount: 0
        instrumentTypesWithCount:
        - value: "{}"
          key: key
        - value: "{}"
          key: key
        value: "{}"
        key: key
        operator: operator
        predefinedValueLabel: predefinedValueLabel
      properties:
        instrumentTypesWithCount:
          items:
            $ref: '#/components/schemas/titaniumKeyAndValue'
          type: array
        key:
          type: string
        operator:
          type: string
        predefinedValueLabel:
          type: string
        resultCount:
          type: integer
        value:
          properties: {}
          type: object
      title: PredefinedFilter is filter that added to the system to use it later for
        filtration in analytics
      type: object
    titaniumPredefinedFilters:
      example:
        specificAssetFilters:
        - resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        - resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        filters:
        - resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        - resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
      properties:
        filters:
          items:
            $ref: '#/components/schemas/titaniumPredefinedFilter'
          type: array
        specificAssetFilters:
          items:
            $ref: '#/components/schemas/titaniumPredefinedFilter'
          type: array
      type: object
    titaniumPredefined_Filters_Type:
      type: string
    titaniumProtocol:
      type: string
    titaniumRange:
      example:
        min:
          label: label
          value: "{}"
        max:
          label: label
          value: "{}"
      properties:
        max:
          $ref: '#/components/schemas/titaniumRangePoint'
        min:
          $ref: '#/components/schemas/titaniumRangePoint'
      type: object
    titaniumRangePoint:
      example:
        label: label
        value: "{}"
      properties:
        label:
          type: string
        value:
          properties: {}
          type: object
      type: object
    titaniumRdlCheckRequest:
      properties:
        rdl:
          type: string
      type: object
    titaniumRecentAssetsRequest:
      properties:
        filter:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        offset:
          type: integer
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
      type: object
    titaniumRecentAssetsResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          totalRows: 0
          rows:
          - values:
            - values
            - values
          - values:
            - values
            - values
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumRecentAssetsResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumRecentAssetsResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: 0
        rows:
        - values:
          - values
          - values
        - values:
          - values
          - values
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumRecentAssetsRow'
          type: array
        totalRows:
          type: integer
      title: RecentAssetsResponseData consists of  recent assets rows
      type: object
    titaniumRecentAssetsRow:
      example:
        values:
        - values
        - values
      properties:
        values:
          items:
            type: string
          type: array
      type: object
    titaniumResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        page:
          pageNumber: 0
          size: 6
          totalNumberOfElements: totalNumberOfElements
        totalRows: 1
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        page:
          $ref: '#/components/schemas/titaniumPage'
        rows:
          items:
            $ref: '#/components/schemas/titaniumValuesRow'
          type: array
        totalRows:
          type: integer
      type: object
    titaniumResultsList:
      example:
        results:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumIdentifier'
          type: array
      type: object
    titaniumRuleDefinition:
      example:
        filter: filter
        severity: 0
        lookuptable:
          filter: filter
          type: type
          value: "{}"
          key:
          - key
          - key
        ruleType: ruleType
        name: name
        description: description
        rule: rule
        error:
          messageArgs:
          - messageArgs
          - messageArgs
          message: message
        tags:
        - tags
        - tags
      properties:
        description:
          type: string
        error:
          $ref: '#/components/schemas/titaniumErrorDefinition'
        filter:
          type: string
        lookuptable:
          $ref: '#/components/schemas/titaniumDynamicLut'
        name:
          type: string
        rule:
          type: string
        ruleType:
          type: string
        severity:
          type: integer
        tags:
          items:
            type: string
          type: array
      type: object
    titaniumRulesetDefinition:
      example:
        criteria:
        - metadata:
          - metadata
          - metadata
          name: name
          description: description
          rule: rule
          validations:
          - filter: filter
            severity: 0
            lookuptable:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            ruleType: ruleType
            name: name
            description: description
            rule: rule
            error:
              messageArgs:
              - messageArgs
              - messageArgs
              message: message
            tags:
            - tags
            - tags
          - filter: filter
            severity: 0
            lookuptable:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            ruleType: ruleType
            name: name
            description: description
            rule: rule
            error:
              messageArgs:
              - messageArgs
              - messageArgs
              message: message
            tags:
            - tags
            - tags
          tags:
          - tags
          - tags
        - metadata:
          - metadata
          - metadata
          name: name
          description: description
          rule: rule
          validations:
          - filter: filter
            severity: 0
            lookuptable:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            ruleType: ruleType
            name: name
            description: description
            rule: rule
            error:
              messageArgs:
              - messageArgs
              - messageArgs
              message: message
            tags:
            - tags
            - tags
          - filter: filter
            severity: 0
            lookuptable:
              filter: filter
              type: type
              value: "{}"
              key:
              - key
              - key
            ruleType: ruleType
            name: name
            description: description
            rule: rule
            error:
              messageArgs:
              - messageArgs
              - messageArgs
              message: message
            tags:
            - tags
            - tags
          tags:
          - tags
          - tags
        descriptorName: descriptorName
      properties:
        criteria:
          items:
            $ref: '#/components/schemas/titaniumCriteriaDefinition'
          type: array
        descriptorName:
          type: string
      type: object
    titaniumRunCalculatorRequest:
      properties:
        assetId:
          type: string
        clients:
          items:
            type: string
          type: array
        consensusRunReason:
          type: string
        dates:
          items:
            type: string
          type: array
        description:
          type: string
        traceName:
          type: string
      type: object
    titaniumRunConsensusRequest:
      properties:
        assetId:
          type: string
        clients:
          items:
            type: string
          type: array
        dates:
          items:
            type: string
          type: array
        description:
          type: string
        traceName:
          type: string
      type: object
    titaniumRunDataProcessingAppRequest:
      properties:
        asset:
          type: string
        date:
          type: string
        descriptorName:
          type: string
        fileName:
          type: string
        input:
          type: string
        instrumentType:
          type: string
        mapperRule:
          type: string
        service:
          type: string
        snapTime:
          type: string
        validationRule:
          type: string
      title: request for start data processing
      type: object
    titaniumRunDataProcessingAppResponse:
      example:
        data: data
        error:
          code: 0
          message: message
      properties:
        data:
          type: string
        error:
          $ref: '#/components/schemas/titaniumError'
      title: response to notify requester of processing with data indicator or error
      type: object
    titaniumScopeExistResponse:
      example:
        exist: true
        error:
          code: 0
          message: message
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        exist:
          type: boolean
      type: object
    titaniumScopeIdentifier:
      properties:
        scope:
          type: string
      type: object
    titaniumScopeListResponse:
      example:
        data:
        - data
        - data
        error:
          code: 0
          message: message
      properties:
        data:
          items:
            type: string
          type: array
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumSeries:
      example:
        metadata:
          columnNames:
          - columnNames
          - columnNames
        data:
        - "{}"
        - "{}"
        name: name
        contentType: contentType
      properties:
        contentType:
          type: string
        data:
          items:
            properties: {}
            type: object
          type: array
        metadata:
          $ref: '#/components/schemas/titaniumMetadata'
        name:
          type: string
      type: object
    titaniumService:
      example:
        name: name
        subAssets:
        - name: name
          traceName: traceName
          id: id
        - name: name
          traceName: traceName
          id: id
      properties:
        name:
          type: string
        subAssets:
          items:
            $ref: '#/components/schemas/titaniumSubAsset'
          type: array
      type: object
    titaniumSetFileDelimiterRequest:
      properties:
        delimiterSetting:
          $ref: '#/components/schemas/titaniumFileDelimiterSetting'
        fileIdentifier:
          $ref: '#/components/schemas/titaniumFileIdentifier'
      type: object
    titaniumSetFileDescriptorRequest:
      properties:
        descriptorSetting:
          $ref: '#/components/schemas/titaniumFileDescriptorSetting'
        fileIdentifier:
          $ref: '#/components/schemas/titaniumFileIdentifier'
      type: object
    titaniumSeverity:
      type: string
    titaniumSeverityToDataQuality:
      example:
        high:
        - severity: severity
          criteriaName: criteriaName
          errorMessage: errorMessage
          ruleName: ruleName
          rulesetName: rulesetName
        - severity: severity
          criteriaName: criteriaName
          errorMessage: errorMessage
          ruleName: ruleName
          rulesetName: rulesetName
        low:
        - severity: severity
          criteriaName: criteriaName
          errorMessage: errorMessage
          ruleName: ruleName
          rulesetName: rulesetName
        - severity: severity
          criteriaName: criteriaName
          errorMessage: errorMessage
          ruleName: ruleName
          rulesetName: rulesetName
        medium:
        - severity: severity
          criteriaName: criteriaName
          errorMessage: errorMessage
          ruleName: ruleName
          rulesetName: rulesetName
        - severity: severity
          criteriaName: criteriaName
          errorMessage: errorMessage
          ruleName: ruleName
          rulesetName: rulesetName
      properties:
        high:
          items:
            $ref: '#/components/schemas/titaniumDQError'
          type: array
        low:
          items:
            $ref: '#/components/schemas/titaniumDQError'
          type: array
        medium:
          items:
            $ref: '#/components/schemas/titaniumDQError'
          type: array
      type: object
    titaniumSlice:
      example:
        total: total
      properties:
        total:
          type: string
      type: object
    titaniumSliceRequestData:
      properties:
        limit:
          type: integer
        offset:
          type: integer
      type: object
    titaniumSnapTimes:
      example:
        snapTimes:
        - snapTimes
        - snapTimes
      properties:
        snapTimes:
          items:
            type: string
          type: array
      title: time for which the prices(calculated in consensus) are valid.(time of
        submitted snapshots on which calculation was apllied)
      type: object
    titaniumStatusResponse:
      example:
        data:
          status: status
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumStatusResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumStatusResponseData:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    titaniumStringKeyVal:
      example:
        val: val
        key: key
      properties:
        key:
          type: string
        val:
          type: string
      type: object
    titaniumSubAsset:
      example:
        name: name
        traceName: traceName
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        traceName:
          type: string
      type: object
    titaniumSubGroupKeySearch:
      properties:
        groupKeys:
          $ref: '#/components/schemas/titaniumFilterPack'
        subSubmittedDate:
          type: string
      type: object
    titaniumSubmissionEvidenceAnchorDetails:
      example:
        submissionEvidence: 5.962133916683182
        distanceToConsensus: 1.4658129805029452
      properties:
        distanceToConsensus:
          type: number
        submissionEvidence:
          type: number
      type: object
    titaniumSubmissionEvidenceTableColumn:
      example:
        eviPriceAbsDiffFromLatestTrade: "{}"
        participantsCount: "{}"
        absDiffFromEvidence: "{}"
        evidence: "{}"
        subPriceDiff: "{}"
        stdDev: "{}"
        upperBoundary: "{}"
        lowerBoundary: "{}"
      properties:
        absDiffFromEvidence:
          properties: {}
          type: object
        eviPriceAbsDiffFromLatestTrade:
          properties: {}
          type: object
        evidence:
          properties: {}
          type: object
        lowerBoundary:
          properties: {}
          type: object
        participantsCount:
          properties: {}
          type: object
        stdDev:
          properties: {}
          type: object
        subPriceDiff:
          properties: {}
          type: object
        upperBoundary:
          properties: {}
          type: object
      type: object
    titaniumSubmissionExplorerTableColumn:
      example:
        submissionPrice: "{}"
      properties:
        submissionPrice:
          properties: {}
          type: object
      type: object
    titaniumSubmissionHistogram:
      example:
        valid:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        totalParseErrors: 5
        highSeverity:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        totalInvalidRows: 5
        lowSeverity:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
        totalRows: 2
        mediumSeverity:
          resultCount: 0
          instrumentTypesWithCount:
          - value: "{}"
            key: key
          - value: "{}"
            key: key
          value: "{}"
          key: key
          operator: operator
          predefinedValueLabel: predefinedValueLabel
      properties:
        highSeverity:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
        lowSeverity:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
        mediumSeverity:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
        totalInvalidRows:
          type: integer
        totalParseErrors:
          type: integer
        totalRows:
          type: integer
        valid:
          $ref: '#/components/schemas/titaniumPredefinedFilter'
      type: object
    titaniumSubmissionStatisticsExplorerTableColumn:
      example:
        submissionMax: "{}"
        absDiffFromSubEvidence: "{}"
        statMeanAbsDiffFromLatestTrade: "{}"
        subPriceDiff: "{}"
        submissionEvidence: "{}"
        submissionMin: "{}"
        numberOfPartInBoundaries: "{}"
        stdDev: "{}"
        upperBoundary: "{}"
        lowerBoundary: "{}"
      properties:
        absDiffFromSubEvidence:
          properties: {}
          type: object
        lowerBoundary:
          properties: {}
          type: object
        numberOfPartInBoundaries:
          properties: {}
          type: object
        statMeanAbsDiffFromLatestTrade:
          properties: {}
          type: object
        stdDev:
          properties: {}
          type: object
        subPriceDiff:
          properties: {}
          type: object
        submissionEvidence:
          properties: {}
          type: object
        submissionMax:
          properties: {}
          type: object
        submissionMin:
          properties: {}
          type: object
        upperBoundary:
          properties: {}
          type: object
      type: object
    titaniumSubmittedData:
      example:
        values: "{}"
        key: key
      properties:
        key:
          type: string
        values:
          properties: {}
          type: object
      type: object
    titaniumSubmittedRequest:
      properties:
        assetId:
          type: string
        collapseTableConfig:
          $ref: '#/components/schemas/titaniumCollapseTableRequest'
        consensusRunTimestamp:
          type: string
        dataType:
          type: string
        submittedDate:
          type: string
        tableConfig:
          $ref: '#/components/schemas/titaniumTableRequest'
        traceName:
          type: string
      type: object
    titaniumSubmittedResponse:
      example:
        data:
          columns:
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          - columnType: columnType
            rawColumnName: rawColumnName
            columnName: columnName
          page:
            pageNumber: 0
            size: 6
            totalNumberOfElements: totalNumberOfElements
          rows:
          - validationErrorCount: 0
            values:
            - "{}"
            - "{}"
            outlier: outlier
            benchmark: benchmark
          - validationErrorCount: 0
            values:
            - "{}"
            - "{}"
            outlier: outlier
            benchmark: benchmark
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumSubmittedResponseData'
        error:
          $ref: '#/components/schemas/titaniumError'
      title: SubmittedResponse is collected submitted data
      type: object
    titaniumSubmittedResponseData:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        page:
          pageNumber: 0
          size: 6
          totalNumberOfElements: totalNumberOfElements
        rows:
        - validationErrorCount: 0
          values:
          - "{}"
          - "{}"
          outlier: outlier
          benchmark: benchmark
        - validationErrorCount: 0
          values:
          - "{}"
          - "{}"
          outlier: outlier
          benchmark: benchmark
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        page:
          $ref: '#/components/schemas/titaniumPage'
        rows:
          items:
            $ref: '#/components/schemas/titaniumSubmittedRow'
          type: array
      title: SubmittedResponseData is data collected from the submitted data request
      type: object
    titaniumSubmittedRow:
      example:
        validationErrorCount: 0
        values:
        - "{}"
        - "{}"
        outlier: outlier
        benchmark: benchmark
      properties:
        benchmark:
          type: string
        outlier:
          type: string
        validationErrorCount:
          type: integer
        values:
          items:
            properties: {}
            type: object
          type: array
      title: "SubmittedRow is representation of a row of submitted data (values, validation\
        \ error count, outlier, benchmark)"
      type: object
    titaniumSupportedField:
      properties:
        asset:
          type: string
        assetId:
          type: string
        field:
          type: string
        filter:
          type: string
        instrumentType:
          type: string
        limit:
          $ref: '#/components/schemas/titaniumLimit'
        matchPattern:
          type: string
        offset:
          type: integer
        service:
          type: string
        submittedDate:
          type: string
        traceName:
          type: string
      type: object
    titaniumSupportedFieldsValues:
      properties:
        assetId:
          type: string
        field:
          type: string
        traceName:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    titaniumTTLTypes:
      type: string
    titaniumTabDataType:
      type: string
    titaniumTable:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        totalRows: totalRows
        rows:
        - values:
          - "{}"
          - "{}"
        - values:
          - "{}"
          - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/TableColumn'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/titaniumTableRow'
          type: array
        totalRows:
          type: string
      type: object
    titaniumTableRequest:
      properties:
        filterPack:
          $ref: '#/components/schemas/titaniumFilterPack'
        filters:
          items:
            $ref: '#/components/schemas/titaniumFilter'
          type: array
        orderBy:
          $ref: '#/components/schemas/titaniumOrderBy'
        page:
          $ref: '#/components/schemas/titaniumPage'
      type: object
    titaniumTableRow:
      example:
        values:
        - "{}"
        - "{}"
      properties:
        values:
          items:
            properties: {}
            type: object
          type: array
      type: object
    titaniumTradeAligmentDateAndValue:
      example:
        date: date
        score: "{}"
        scoreStatus: scoreStatus
      properties:
        date:
          type: string
        score:
          properties: {}
          type: object
        scoreStatus:
          type: string
      type: object
    titaniumTradeAlignmentScore:
      example:
        score: "{}"
        mean: "{}"
        latestTradePrice: "{}"
        scoreStatus: scoreStatus
        history:
        - date: date
          score: "{}"
          scoreStatus: scoreStatus
        - date: date
          score: "{}"
          scoreStatus: scoreStatus
        stdDev: "{}"
      properties:
        history:
          items:
            $ref: '#/components/schemas/titaniumTradeAligmentDateAndValue'
          type: array
        latestTradePrice:
          properties: {}
          type: object
        mean:
          properties: {}
          type: object
        score:
          properties: {}
          type: object
        scoreStatus:
          type: string
        stdDev:
          properties: {}
          type: object
      type: object
    titaniumTradeAnchorDetails:
      example:
        notional: 7.061401241503109
        pricingAge: pricingAge
        latestTradePrice: 2.3021358869347655
        currency: currency
        source: source
        tradeExecutionTime: tradeExecutionTime
        distanceToConsensus: 5.637376656633329
      properties:
        currency:
          type: string
        distanceToConsensus:
          type: number
        latestTradePrice:
          type: number
        notional:
          type: number
        pricingAge:
          type: string
        source:
          type: string
        tradeExecutionTime:
          type: string
      type: object
    titaniumTradePeriodMetrics:
      example:
        tradeCount: tradeCount
        totalLiquidity: 2.027123023002322
        currency: currency
        minNotionalAmount: 3.616076749251911
        maxNotionalAmount: 9.301444243932576
      properties:
        currency:
          type: string
        maxNotionalAmount:
          type: number
        minNotionalAmount:
          type: number
        totalLiquidity:
          type: number
        tradeCount:
          type: string
      type: object
    titaniumTradePeriodsWithMetrics:
      example:
        lessWeek:
          tradeCount: tradeCount
          totalLiquidity: 2.027123023002322
          currency: currency
          minNotionalAmount: 3.616076749251911
          maxNotionalAmount: 9.301444243932576
        lessDay:
          tradeCount: tradeCount
          totalLiquidity: 2.027123023002322
          currency: currency
          minNotionalAmount: 3.616076749251911
          maxNotionalAmount: 9.301444243932576
        lessMonth:
          tradeCount: tradeCount
          totalLiquidity: 2.027123023002322
          currency: currency
          minNotionalAmount: 3.616076749251911
          maxNotionalAmount: 9.301444243932576
      properties:
        lessDay:
          $ref: '#/components/schemas/titaniumTradePeriodMetrics'
        lessMonth:
          $ref: '#/components/schemas/titaniumTradePeriodMetrics'
        lessWeek:
          $ref: '#/components/schemas/titaniumTradePeriodMetrics'
      type: object
    titaniumTransformation:
      example:
        targetColumn: targetColumn
        name: name
        description: description
        rule: rule
        lut:
          filter: filter
          type: type
          value: "{}"
          key:
          - key
          - key
        sourceColumn: sourceColumn
      properties:
        description:
          type: string
        lut:
          $ref: '#/components/schemas/titaniumDynamicLut'
        name:
          type: string
        rule:
          type: string
        sourceColumn:
          type: string
        targetColumn:
          type: string
      type: object
    titaniumUniqueKeyDefinition:
      example:
        scope: scope
        uniqueKey:
        - uniqueKey
        - uniqueKey
        name: name
        orderBy:
        - orderBy
        - orderBy
        order: order
      properties:
        name:
          type: string
        order:
          type: string
        orderBy:
          items:
            type: string
          type: array
        scope:
          type: string
        uniqueKey:
          items:
            type: string
          type: array
      type: object
    titaniumUniqueKeyDefinitionResponse:
      example:
        data:
          scope: scope
          uniqueKey:
          - uniqueKey
          - uniqueKey
          name: name
          orderBy:
          - orderBy
          - orderBy
          order: order
        error:
          code: 0
          message: message
      properties:
        data:
          $ref: '#/components/schemas/titaniumUniqueKeyDefinition'
        error:
          $ref: '#/components/schemas/titaniumError'
      type: object
    titaniumUniqueKeyList:
      example:
        results:
        - scope: scope
          uniqueKey:
          - uniqueKey
          - uniqueKey
          name: name
          orderBy:
          - orderBy
          - orderBy
          order: order
        - scope: scope
          uniqueKey:
          - uniqueKey
          - uniqueKey
          name: name
          orderBy:
          - orderBy
          - orderBy
          order: order
      properties:
        results:
          items:
            $ref: '#/components/schemas/titaniumUniqueKeyDefinition'
          type: array
      type: object
    titaniumUploadAuthorizationResponse:
      example:
        isValid: true
        targetPath: targetPath
        uuid: uuid
      properties:
        isValid:
          type: boolean
        targetPath:
          type: string
        uuid:
          type: string
      type: object
    titaniumUploadDTCCRequest:
      properties:
        assetId:
          type: string
        date:
          type: string
        fileName:
          type: string
        traceName:
          type: string
      type: object
    titaniumUploadDataRequest:
      properties:
        annotation:
          properties: {}
          type: object
        asset:
          $ref: '#/components/schemas/titaniumAssetDetails'
        client:
          type: string
        description:
          type: string
        fileName:
          type: string
        mode:
          type: string
        protocol:
          type: string
      type: object
    titaniumUploadDataResponse:
      example:
        s3Url: s3Url
        tusPayload: tusPayload
        error:
          code: 0
          message: message
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        s3Url:
          type: string
        tusPayload:
          type: string
      type: object
    titaniumUploadEVPRequest:
      properties:
        assetId:
          type: string
        date:
          type: string
        fileName:
          type: string
        traceName:
          type: string
      type: object
    titaniumUploadEvaluatedPriceRequest:
      properties:
        assetId:
          type: string
        date:
          type: string
        file:
          type: string
        fileName:
          type: string
        traceName:
          type: string
      type: object
    titaniumUploadMode:
      type: string
    titaniumUploadNotifyRequest:
      properties:
        currentPath:
          type: string
        targetPath:
          type: string
        uuid:
          type: string
      type: object
    titaniumUploadURLRequest:
      properties:
        assetId:
          type: string
        client:
          type: string
        date:
          type: string
        descriptorName:
          type: string
        fileName:
          type: string
        traceName:
          type: string
      type: object
    titaniumUploadURLResponse:
      example:
        s3Url: s3Url
      properties:
        s3Url:
          type: string
      title: UploadURLResponse is response to request of url for upload(contains s3
        url)
      type: object
    titaniumUsage:
      example:
        usageName: usageName
        usageType: usageType
      properties:
        usageName:
          type: string
        usageType:
          type: string
      type: object
    titaniumUsageUsageType:
      type: string
    titaniumUser:
      example:
        notifyByAppEnabled: true
        organization: organization
        id: id
        notifyByEmailEnabled: true
        email: email
      properties:
        email:
          type: string
        id:
          type: string
        notifyByAppEnabled:
          type: boolean
        notifyByEmailEnabled:
          type: boolean
        organization:
          type: string
      type: object
    titaniumUserNotification:
      example:
        market:
          name: name
          id: id
          user:
            notifyByAppEnabled: true
            organization: organization
            id: id
            notifyByEmailEnabled: true
            email: email
        id: id
        asset:
          instrumentTypes:
          - instrumentTypes
          - instrumentTypes
          name: name
          id: id
        type: type
        user:
          notifyByAppEnabled: true
          organization: organization
          id: id
          notifyByEmailEnabled: true
          email: email
        value: value
      properties:
        asset:
          $ref: '#/components/schemas/titaniumAssetM'
        id:
          type: string
        market:
          $ref: '#/components/schemas/titaniumMarket'
        type:
          type: string
        user:
          $ref: '#/components/schemas/titaniumUser'
        value:
          type: string
      type: object
    titaniumUserNotificationRequest:
      properties:
        userNotification:
          $ref: '#/components/schemas/titaniumUserNotification'
      type: object
    titaniumUserNotificationResponse:
      example:
        error:
          code: 0
          message: message
        userNotification:
          market:
            name: name
            id: id
            user:
              notifyByAppEnabled: true
              organization: organization
              id: id
              notifyByEmailEnabled: true
              email: email
          id: id
          asset:
            instrumentTypes:
            - instrumentTypes
            - instrumentTypes
            name: name
            id: id
          type: type
          user:
            notifyByAppEnabled: true
            organization: organization
            id: id
            notifyByEmailEnabled: true
            email: email
          value: value
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        userNotification:
          $ref: '#/components/schemas/titaniumUserNotification'
      type: object
    titaniumUserNotifications:
      example:
        userNotification:
        - market:
            name: name
            id: id
            user:
              notifyByAppEnabled: true
              organization: organization
              id: id
              notifyByEmailEnabled: true
              email: email
          id: id
          asset:
            instrumentTypes:
            - instrumentTypes
            - instrumentTypes
            name: name
            id: id
          type: type
          user:
            notifyByAppEnabled: true
            organization: organization
            id: id
            notifyByEmailEnabled: true
            email: email
          value: value
        - market:
            name: name
            id: id
            user:
              notifyByAppEnabled: true
              organization: organization
              id: id
              notifyByEmailEnabled: true
              email: email
          id: id
          asset:
            instrumentTypes:
            - instrumentTypes
            - instrumentTypes
            name: name
            id: id
          type: type
          user:
            notifyByAppEnabled: true
            organization: organization
            id: id
            notifyByEmailEnabled: true
            email: email
          value: value
      properties:
        userNotification:
          items:
            $ref: '#/components/schemas/titaniumUserNotification'
          type: array
      type: object
    titaniumUserNotificationsResponse:
      example:
        error:
          code: 0
          message: message
        userNotifications:
          userNotification:
          - market:
              name: name
              id: id
              user:
                notifyByAppEnabled: true
                organization: organization
                id: id
                notifyByEmailEnabled: true
                email: email
            id: id
            asset:
              instrumentTypes:
              - instrumentTypes
              - instrumentTypes
              name: name
              id: id
            type: type
            user:
              notifyByAppEnabled: true
              organization: organization
              id: id
              notifyByEmailEnabled: true
              email: email
            value: value
          - market:
              name: name
              id: id
              user:
                notifyByAppEnabled: true
                organization: organization
                id: id
                notifyByEmailEnabled: true
                email: email
            id: id
            asset:
              instrumentTypes:
              - instrumentTypes
              - instrumentTypes
              name: name
              id: id
            type: type
            user:
              notifyByAppEnabled: true
              organization: organization
              id: id
              notifyByEmailEnabled: true
              email: email
            value: value
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        userNotifications:
          $ref: '#/components/schemas/titaniumUserNotifications'
      type: object
    titaniumUserPermission:
      example:
        assetId: assetId
        traceName: traceName
        type: type
        enabled: true
      properties:
        assetId:
          type: string
        enabled:
          type: boolean
        traceName:
          type: string
        type:
          type: string
      title: UserPermission message represents a user permission for a specific asset
        and type
      type: object
    titaniumUserPermissions:
      example:
        userPermission:
        - assetId: assetId
          traceName: traceName
          type: type
          enabled: true
        - assetId: assetId
          traceName: traceName
          type: type
          enabled: true
      properties:
        userPermission:
          items:
            $ref: '#/components/schemas/titaniumUserPermission'
          type: array
      type: object
    titaniumUserPermissionsResponse:
      example:
        userPermissions:
          userPermission:
          - assetId: assetId
            traceName: traceName
            type: type
            enabled: true
          - assetId: assetId
            traceName: traceName
            type: type
            enabled: true
        error:
          code: 0
          message: message
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        userPermissions:
          $ref: '#/components/schemas/titaniumUserPermissions'
      title: UserPermissionsResponse message is the response to a GetUserPermissionsRequest.
        It contains UserPermissions or an Error
      type: object
    titaniumUserRequest:
      properties:
        user:
          $ref: '#/components/schemas/titaniumUser'
      type: object
    titaniumUserResponse:
      example:
        error:
          code: 0
          message: message
        user:
          notifyByAppEnabled: true
          organization: organization
          id: id
          notifyByEmailEnabled: true
          email: email
      properties:
        error:
          $ref: '#/components/schemas/titaniumError'
        user:
          $ref: '#/components/schemas/titaniumUser'
      type: object
    titaniumValidationRuleDefinition:
      example:
        uid: uid
        scope: scope
        definition:
          criteria:
          - metadata:
            - metadata
            - metadata
            name: name
            description: description
            rule: rule
            validations:
            - filter: filter
              severity: 0
              lookuptable:
                filter: filter
                type: type
                value: "{}"
                key:
                - key
                - key
              ruleType: ruleType
              name: name
              description: description
              rule: rule
              error:
                messageArgs:
                - messageArgs
                - messageArgs
                message: message
              tags:
              - tags
              - tags
            - filter: filter
              severity: 0
              lookuptable:
                filter: filter
                type: type
                value: "{}"
                key:
                - key
                - key
              ruleType: ruleType
              name: name
              description: description
              rule: rule
              error:
                messageArgs:
                - messageArgs
                - messageArgs
                message: message
              tags:
              - tags
              - tags
            tags:
            - tags
            - tags
          - metadata:
            - metadata
            - metadata
            name: name
            description: description
            rule: rule
            validations:
            - filter: filter
              severity: 0
              lookuptable:
                filter: filter
                type: type
                value: "{}"
                key:
                - key
                - key
              ruleType: ruleType
              name: name
              description: description
              rule: rule
              error:
                messageArgs:
                - messageArgs
                - messageArgs
                message: message
              tags:
              - tags
              - tags
            - filter: filter
              severity: 0
              lookuptable:
                filter: filter
                type: type
                value: "{}"
                key:
                - key
                - key
              ruleType: ruleType
              name: name
              description: description
              rule: rule
              error:
                messageArgs:
                - messageArgs
                - messageArgs
                message: message
              tags:
              - tags
              - tags
            tags:
            - tags
            - tags
          descriptorName: descriptorName
        descriptorName: descriptorName
      properties:
        definition:
          $ref: '#/components/schemas/titaniumRulesetDefinition'
        descriptorName:
          type: string
        scope:
          type: string
        uid:
          type: string
      title: definition of validation rule
      type: object
    titaniumValues:
      example:
        values:
        - "{}"
        - "{}"
        type: type
      properties:
        type:
          type: string
        values:
          items:
            properties: {}
            type: object
          type: array
      title: Values is representation of values(contains type and values)
      type: object
    titaniumValuesRow:
      example:
        values:
        - "{}"
        - "{}"
      properties:
        values:
          items:
            properties: {}
            type: object
          type: array
      type: object
    titaniumVersion:
      example:
        createdAt: createdAt
        versionId: versionId
      properties:
        createdAt:
          type: string
        versionId:
          type: string
      type: object
    titaniumVersionList:
      example:
        versions:
        - createdAt: createdAt
          versionId: versionId
        - createdAt: createdAt
          versionId: versionId
      properties:
        versions:
          items:
            $ref: '#/components/schemas/titaniumVersion'
          type: array
      type: object
    titaniumViewRow:
      example:
        columns:
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        - columnType: columnType
          rawColumnName: rawColumnName
          columnName: columnName
        values:
        - "{}"
        - "{}"
      properties:
        columns:
          items:
            $ref: '#/components/schemas/titaniumColumnInfo'
          type: array
        values:
          items:
            properties: {}
            type: object
          type: array
      type: object
    FileService_GetFilePreview_request:
      description: "FileIdentifier contains information about a file including its\
        \ filename, upload date, and status."
      properties:
        fileStatus:
          type: string
        uploadDate:
          type: string
      type: object
    EntityService_update_request:
      properties:
        enabled:
          type: boolean
        externalId:
          type: string
        name:
          type: string
      type: object
x-original-swagger-version: "2.0"

