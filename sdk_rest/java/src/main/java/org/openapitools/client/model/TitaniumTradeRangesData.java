/*
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TitaniumTradeRangesData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-30T14:58:59.766741Z[UTC]")
public class TitaniumTradeRangesData {
  public static final String SERIALIZED_NAME_LATEST_TRADE_PRICE = "latestTradePrice";
  @SerializedName(SERIALIZED_NAME_LATEST_TRADE_PRICE)
  private BigDecimal latestTradePrice;

  public static final String SERIALIZED_NAME_NOTIONAL = "notional";
  @SerializedName(SERIALIZED_NAME_NOTIONAL)
  private BigDecimal notional;

  public static final String SERIALIZED_NAME_PRICING_RECENCY = "pricingRecency";
  @SerializedName(SERIALIZED_NAME_PRICING_RECENCY)
  private String pricingRecency;

  public static final String SERIALIZED_NAME_TRADE_EXECUTION_TIME = "tradeExecutionTime";
  @SerializedName(SERIALIZED_NAME_TRADE_EXECUTION_TIME)
  private String tradeExecutionTime;

  public TitaniumTradeRangesData() { 
  }

  public TitaniumTradeRangesData latestTradePrice(BigDecimal latestTradePrice) {
    
    this.latestTradePrice = latestTradePrice;
    return this;
  }

   /**
   * Get latestTradePrice
   * @return latestTradePrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getLatestTradePrice() {
    return latestTradePrice;
  }


  public void setLatestTradePrice(BigDecimal latestTradePrice) {
    this.latestTradePrice = latestTradePrice;
  }


  public TitaniumTradeRangesData notional(BigDecimal notional) {
    
    this.notional = notional;
    return this;
  }

   /**
   * Get notional
   * @return notional
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getNotional() {
    return notional;
  }


  public void setNotional(BigDecimal notional) {
    this.notional = notional;
  }


  public TitaniumTradeRangesData pricingRecency(String pricingRecency) {
    
    this.pricingRecency = pricingRecency;
    return this;
  }

   /**
   * Get pricingRecency
   * @return pricingRecency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPricingRecency() {
    return pricingRecency;
  }


  public void setPricingRecency(String pricingRecency) {
    this.pricingRecency = pricingRecency;
  }


  public TitaniumTradeRangesData tradeExecutionTime(String tradeExecutionTime) {
    
    this.tradeExecutionTime = tradeExecutionTime;
    return this;
  }

   /**
   * Get tradeExecutionTime
   * @return tradeExecutionTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTradeExecutionTime() {
    return tradeExecutionTime;
  }


  public void setTradeExecutionTime(String tradeExecutionTime) {
    this.tradeExecutionTime = tradeExecutionTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TitaniumTradeRangesData titaniumTradeRangesData = (TitaniumTradeRangesData) o;
    return Objects.equals(this.latestTradePrice, titaniumTradeRangesData.latestTradePrice) &&
        Objects.equals(this.notional, titaniumTradeRangesData.notional) &&
        Objects.equals(this.pricingRecency, titaniumTradeRangesData.pricingRecency) &&
        Objects.equals(this.tradeExecutionTime, titaniumTradeRangesData.tradeExecutionTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latestTradePrice, notional, pricingRecency, tradeExecutionTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TitaniumTradeRangesData {\n");
    sb.append("    latestTradePrice: ").append(toIndentedString(latestTradePrice)).append("\n");
    sb.append("    notional: ").append(toIndentedString(notional)).append("\n");
    sb.append("    pricingRecency: ").append(toIndentedString(pricingRecency)).append("\n");
    sb.append("    tradeExecutionTime: ").append(toIndentedString(tradeExecutionTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("latestTradePrice");
    openapiFields.add("notional");
    openapiFields.add("pricingRecency");
    openapiFields.add("tradeExecutionTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TitaniumTradeRangesData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (TitaniumTradeRangesData.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in TitaniumTradeRangesData is not found in the empty JSON string", TitaniumTradeRangesData.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TitaniumTradeRangesData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TitaniumTradeRangesData` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("pricingRecency") != null && !jsonObj.get("pricingRecency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pricingRecency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pricingRecency").toString()));
      }
      if (jsonObj.get("tradeExecutionTime") != null && !jsonObj.get("tradeExecutionTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tradeExecutionTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tradeExecutionTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TitaniumTradeRangesData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TitaniumTradeRangesData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TitaniumTradeRangesData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TitaniumTradeRangesData.class));

       return (TypeAdapter<T>) new TypeAdapter<TitaniumTradeRangesData>() {
           @Override
           public void write(JsonWriter out, TitaniumTradeRangesData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TitaniumTradeRangesData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TitaniumTradeRangesData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TitaniumTradeRangesData
  * @throws IOException if the JSON string is invalid with respect to TitaniumTradeRangesData
  */
  public static TitaniumTradeRangesData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TitaniumTradeRangesData.class);
  }

 /**
  * Convert an instance of TitaniumTradeRangesData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

