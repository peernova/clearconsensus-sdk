/*
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.RpcStatus;
import org.openapitools.client.model.TitaniumAcknowledgeResponse;
import org.openapitools.client.model.TitaniumGetDefinition;
import org.openapitools.client.model.TitaniumGetGeneratedValidationRuleResponse;
import org.openapitools.client.model.TitaniumGetValidationRuleResponse;
import org.openapitools.client.model.TitaniumListRequest;
import org.openapitools.client.model.TitaniumListRuleResponse;
import org.openapitools.client.model.TitaniumListVersionResponse;
import org.openapitools.client.model.TitaniumMessageResponse;
import org.openapitools.client.model.TitaniumRdlCheckRequest;
import org.openapitools.client.model.TitaniumValidationRuleDefinition;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class ValidatorServiceApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ValidatorServiceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ValidatorServiceApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for validatorServiceAddValidationRule
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceAddValidationRuleCall(TitaniumValidationRuleDefinition body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/add";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceAddValidationRuleValidateBeforeCall(TitaniumValidationRuleDefinition body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceAddValidationRule(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceAddValidationRuleCall(body, _callback);
        return localVarCall;

    }

    /**
     * AddValidationRule is a method used to add a validation rule to the system. Backoffice users can create a new validation ruleset in the &#39;global&#39; scope, for each asset class. Participant users can create a new validation ruleset in its own scope, for each asset class. Backoffice users can represent any participant and create a new validation ruleset in that participant&#39;s scope. The default scope is used if no scope is given in the request (&#39;global&#39; for the operator, participant scope for that participant user). The authorization will be fetched from the user&#39;s token. It will do an update if a validation rule with the same name already exists.
     * Request for backoffice user: { \&quot;definition\&quot;: {   \&quot;descriptor_name\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,   \&quot;criteria\&quot;:[     {       \&quot;name\&quot;:\&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,       \&quot;description\&quot;:\&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,       \&quot;tags\&quot;:[         \&quot;forward points\&quot;       ],       \&quot;metadata\&quot;:[        ],       \&quot;rule\&quot;:\&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,       \&quot;validations\&quot;:[         {           \&quot;name\&quot;:\&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,           \&quot;severity\&quot;:1,           \&quot;rule_type\&quot;:\&quot;input_data\&quot;,           \&quot;tags\&quot;:[            ],           \&quot;description\&quot;:\&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,           \&quot;rule\&quot;:\&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,           \&quot;error\&quot;:{             \&quot;message\&quot;:\&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,             \&quot;message_args\&quot;:[               \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,               \&quot;foreign_exchange-vanilla-options.underlying\&quot;             ]           }         }       ]     }   ] }, \&quot;scope\&quot;: \&quot;global\&quot;, \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-options\&quot; }  Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;ac49453d-cc9c-11ec-8bac-5314d58ea570\&quot;,        \&quot;descriptor_name\&quot;: \&quot;fx_forward\&quot;    } }  Error response:  Push to non ‘global’ scope : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid argument: only support &#39;global&#39; scope\&quot;    } }  Unauthorized user : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid auth token - only operator is allowed to add validation rules\&quot;    } }  Missing argument : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Missing argument: descriptor_name\&quot;    } }  Invalid rule definition - rule col mismatch with descriptor : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: Column [submission_clienttt] not found in schema [fx_forward]\&quot;    } }  Invalid rule definition - RDL syntax error : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: line 1:14 no viable alternative at input &#39;[{\\\&quot;$lower\\\&quot;:\\\&quot;fx_forward.submission_service\\\&quot;&#39;\&quot;    } }  Dependencies not found - dependencies could be: descriptor, named lut, custom function : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: Invalid rule expression [ { \\\&quot;$lut_name\\\&quot; : \\\&quot;tenor\\\&quot;, \\\&quot;$exist\\\&quot; : [\\\&quot;fx_forward.submission_tenor\\\&quot;] } ]\\n\\terr: com.peernova.api.searchmetadata.metadata.exceptions.MetadataNotFoundException: No Look Up Table by name [tenor] found in scope [global]\&quot;    } }  Ruleset with same name already exist : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Validation rule for descriptor [fx_fwd] already exist\&quot;    } }
     * @param body  (required)
     * @return TitaniumAcknowledgeResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumAcknowledgeResponse validatorServiceAddValidationRule(TitaniumValidationRuleDefinition body) throws ApiException {
        ApiResponse<TitaniumAcknowledgeResponse> localVarResp = validatorServiceAddValidationRuleWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * AddValidationRule is a method used to add a validation rule to the system. Backoffice users can create a new validation ruleset in the &#39;global&#39; scope, for each asset class. Participant users can create a new validation ruleset in its own scope, for each asset class. Backoffice users can represent any participant and create a new validation ruleset in that participant&#39;s scope. The default scope is used if no scope is given in the request (&#39;global&#39; for the operator, participant scope for that participant user). The authorization will be fetched from the user&#39;s token. It will do an update if a validation rule with the same name already exists.
     * Request for backoffice user: { \&quot;definition\&quot;: {   \&quot;descriptor_name\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,   \&quot;criteria\&quot;:[     {       \&quot;name\&quot;:\&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,       \&quot;description\&quot;:\&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,       \&quot;tags\&quot;:[         \&quot;forward points\&quot;       ],       \&quot;metadata\&quot;:[        ],       \&quot;rule\&quot;:\&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,       \&quot;validations\&quot;:[         {           \&quot;name\&quot;:\&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,           \&quot;severity\&quot;:1,           \&quot;rule_type\&quot;:\&quot;input_data\&quot;,           \&quot;tags\&quot;:[            ],           \&quot;description\&quot;:\&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,           \&quot;rule\&quot;:\&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,           \&quot;error\&quot;:{             \&quot;message\&quot;:\&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,             \&quot;message_args\&quot;:[               \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,               \&quot;foreign_exchange-vanilla-options.underlying\&quot;             ]           }         }       ]     }   ] }, \&quot;scope\&quot;: \&quot;global\&quot;, \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-options\&quot; }  Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;ac49453d-cc9c-11ec-8bac-5314d58ea570\&quot;,        \&quot;descriptor_name\&quot;: \&quot;fx_forward\&quot;    } }  Error response:  Push to non ‘global’ scope : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid argument: only support &#39;global&#39; scope\&quot;    } }  Unauthorized user : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid auth token - only operator is allowed to add validation rules\&quot;    } }  Missing argument : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Missing argument: descriptor_name\&quot;    } }  Invalid rule definition - rule col mismatch with descriptor : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: Column [submission_clienttt] not found in schema [fx_forward]\&quot;    } }  Invalid rule definition - RDL syntax error : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: line 1:14 no viable alternative at input &#39;[{\\\&quot;$lower\\\&quot;:\\\&quot;fx_forward.submission_service\\\&quot;&#39;\&quot;    } }  Dependencies not found - dependencies could be: descriptor, named lut, custom function : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: Invalid rule expression [ { \\\&quot;$lut_name\\\&quot; : \\\&quot;tenor\\\&quot;, \\\&quot;$exist\\\&quot; : [\\\&quot;fx_forward.submission_tenor\\\&quot;] } ]\\n\\terr: com.peernova.api.searchmetadata.metadata.exceptions.MetadataNotFoundException: No Look Up Table by name [tenor] found in scope [global]\&quot;    } }  Ruleset with same name already exist : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Validation rule for descriptor [fx_fwd] already exist\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumAcknowledgeResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumAcknowledgeResponse> validatorServiceAddValidationRuleWithHttpInfo(TitaniumValidationRuleDefinition body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceAddValidationRuleValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumAcknowledgeResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * AddValidationRule is a method used to add a validation rule to the system. Backoffice users can create a new validation ruleset in the &#39;global&#39; scope, for each asset class. Participant users can create a new validation ruleset in its own scope, for each asset class. Backoffice users can represent any participant and create a new validation ruleset in that participant&#39;s scope. The default scope is used if no scope is given in the request (&#39;global&#39; for the operator, participant scope for that participant user). The authorization will be fetched from the user&#39;s token. It will do an update if a validation rule with the same name already exists. (asynchronously)
     * Request for backoffice user: { \&quot;definition\&quot;: {   \&quot;descriptor_name\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,   \&quot;criteria\&quot;:[     {       \&quot;name\&quot;:\&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,       \&quot;description\&quot;:\&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,       \&quot;tags\&quot;:[         \&quot;forward points\&quot;       ],       \&quot;metadata\&quot;:[        ],       \&quot;rule\&quot;:\&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,       \&quot;validations\&quot;:[         {           \&quot;name\&quot;:\&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,           \&quot;severity\&quot;:1,           \&quot;rule_type\&quot;:\&quot;input_data\&quot;,           \&quot;tags\&quot;:[            ],           \&quot;description\&quot;:\&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,           \&quot;rule\&quot;:\&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,           \&quot;error\&quot;:{             \&quot;message\&quot;:\&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,             \&quot;message_args\&quot;:[               \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,               \&quot;foreign_exchange-vanilla-options.underlying\&quot;             ]           }         }       ]     }   ] }, \&quot;scope\&quot;: \&quot;global\&quot;, \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-options\&quot; }  Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;ac49453d-cc9c-11ec-8bac-5314d58ea570\&quot;,        \&quot;descriptor_name\&quot;: \&quot;fx_forward\&quot;    } }  Error response:  Push to non ‘global’ scope : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid argument: only support &#39;global&#39; scope\&quot;    } }  Unauthorized user : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid auth token - only operator is allowed to add validation rules\&quot;    } }  Missing argument : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Missing argument: descriptor_name\&quot;    } }  Invalid rule definition - rule col mismatch with descriptor : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: Column [submission_clienttt] not found in schema [fx_forward]\&quot;    } }  Invalid rule definition - RDL syntax error : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: line 1:14 no viable alternative at input &#39;[{\\\&quot;$lower\\\&quot;:\\\&quot;fx_forward.submission_service\\\&quot;&#39;\&quot;    } }  Dependencies not found - dependencies could be: descriptor, named lut, custom function : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] compile failed, details: Invalid rule expression [ { \\\&quot;$lut_name\\\&quot; : \\\&quot;tenor\\\&quot;, \\\&quot;$exist\\\&quot; : [\\\&quot;fx_forward.submission_tenor\\\&quot;] } ]\\n\\terr: com.peernova.api.searchmetadata.metadata.exceptions.MetadataNotFoundException: No Look Up Table by name [tenor] found in scope [global]\&quot;    } }  Ruleset with same name already exist : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Validation rule for descriptor [fx_fwd] already exist\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceAddValidationRuleAsync(TitaniumValidationRuleDefinition body, final ApiCallback<TitaniumAcknowledgeResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceAddValidationRuleValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumAcknowledgeResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceDisableValidationRule
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceDisableValidationRuleCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/disable";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceDisableValidationRuleValidateBeforeCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceDisableValidationRule(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceDisableValidationRuleCall(body, _callback);
        return localVarCall;

    }

    /**
     * DisableValidationRule method disables a validation rule in the system. The request includes the descriptor name and scope of the rule. Example of Request: { \&quot;descriptor_name\&quot; : \&quot;foreign_exchange-vanilla-forwards\&quot;, \&quot;scope\&quot;: \&quot;global\&quot; }
     * Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;    } }
     * @param body  (required)
     * @return TitaniumAcknowledgeResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumAcknowledgeResponse validatorServiceDisableValidationRule(TitaniumGetDefinition body) throws ApiException {
        ApiResponse<TitaniumAcknowledgeResponse> localVarResp = validatorServiceDisableValidationRuleWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * DisableValidationRule method disables a validation rule in the system. The request includes the descriptor name and scope of the rule. Example of Request: { \&quot;descriptor_name\&quot; : \&quot;foreign_exchange-vanilla-forwards\&quot;, \&quot;scope\&quot;: \&quot;global\&quot; }
     * Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumAcknowledgeResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumAcknowledgeResponse> validatorServiceDisableValidationRuleWithHttpInfo(TitaniumGetDefinition body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceDisableValidationRuleValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumAcknowledgeResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * DisableValidationRule method disables a validation rule in the system. The request includes the descriptor name and scope of the rule. Example of Request: { \&quot;descriptor_name\&quot; : \&quot;foreign_exchange-vanilla-forwards\&quot;, \&quot;scope\&quot;: \&quot;global\&quot; } (asynchronously)
     * Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceDisableValidationRuleAsync(TitaniumGetDefinition body, final ApiCallback<TitaniumAcknowledgeResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceDisableValidationRuleValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumAcknowledgeResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceEnableValidationRule
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceEnableValidationRuleCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/enable";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceEnableValidationRuleValidateBeforeCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceEnableValidationRule(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceEnableValidationRuleCall(body, _callback);
        return localVarCall;

    }

    /**
     * EnableValidationRule method enables a validation rule that has been previously disabled. The request includes the descriptor name and scope of the rule. Example of Request: { \&quot;descriptor_name\&quot; : \&quot;foreign_exchange-vanilla-forwards\&quot;, \&quot;scope\&quot;: \&quot;global\&quot; }
     * Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;    } }
     * @param body  (required)
     * @return TitaniumAcknowledgeResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumAcknowledgeResponse validatorServiceEnableValidationRule(TitaniumGetDefinition body) throws ApiException {
        ApiResponse<TitaniumAcknowledgeResponse> localVarResp = validatorServiceEnableValidationRuleWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * EnableValidationRule method enables a validation rule that has been previously disabled. The request includes the descriptor name and scope of the rule. Example of Request: { \&quot;descriptor_name\&quot; : \&quot;foreign_exchange-vanilla-forwards\&quot;, \&quot;scope\&quot;: \&quot;global\&quot; }
     * Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumAcknowledgeResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumAcknowledgeResponse> validatorServiceEnableValidationRuleWithHttpInfo(TitaniumGetDefinition body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceEnableValidationRuleValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumAcknowledgeResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * EnableValidationRule method enables a validation rule that has been previously disabled. The request includes the descriptor name and scope of the rule. Example of Request: { \&quot;descriptor_name\&quot; : \&quot;foreign_exchange-vanilla-forwards\&quot;, \&quot;scope\&quot;: \&quot;global\&quot; } (asynchronously)
     * Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceEnableValidationRuleAsync(TitaniumGetDefinition body, final ApiCallback<TitaniumAcknowledgeResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceEnableValidationRuleValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumAcknowledgeResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceGetGeneratedValidationRule
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetGeneratedValidationRuleCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/generated";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceGetGeneratedValidationRuleValidateBeforeCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceGetGeneratedValidationRule(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceGetGeneratedValidationRuleCall(body, _callback);
        return localVarCall;

    }

    /**
     * GetGeneratedValidationRule method allows back office users to view all generated validation rulesets, including Java rulesets. Participant users can only view global generated validation rulesets and rulesets within their own scope. If no scope is given in the request, the default scope is used (\&quot;global\&quot; for operators and participant scope for the participant user). Authorization is fetched from the user&#39;s token. This method returns the latest version of the generated ruleset if multiple versions exist.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot; }
     * @param body  (required)
     * @return TitaniumGetGeneratedValidationRuleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumGetGeneratedValidationRuleResponse validatorServiceGetGeneratedValidationRule(TitaniumGetDefinition body) throws ApiException {
        ApiResponse<TitaniumGetGeneratedValidationRuleResponse> localVarResp = validatorServiceGetGeneratedValidationRuleWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * GetGeneratedValidationRule method allows back office users to view all generated validation rulesets, including Java rulesets. Participant users can only view global generated validation rulesets and rulesets within their own scope. If no scope is given in the request, the default scope is used (\&quot;global\&quot; for operators and participant scope for the participant user). Authorization is fetched from the user&#39;s token. This method returns the latest version of the generated ruleset if multiple versions exist.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot; }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumGetGeneratedValidationRuleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumGetGeneratedValidationRuleResponse> validatorServiceGetGeneratedValidationRuleWithHttpInfo(TitaniumGetDefinition body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceGetGeneratedValidationRuleValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumGetGeneratedValidationRuleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * GetGeneratedValidationRule method allows back office users to view all generated validation rulesets, including Java rulesets. Participant users can only view global generated validation rulesets and rulesets within their own scope. If no scope is given in the request, the default scope is used (\&quot;global\&quot; for operators and participant scope for the participant user). Authorization is fetched from the user&#39;s token. This method returns the latest version of the generated ruleset if multiple versions exist. (asynchronously)
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot; }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetGeneratedValidationRuleAsync(TitaniumGetDefinition body, final ApiCallback<TitaniumGetGeneratedValidationRuleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceGetGeneratedValidationRuleValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumGetGeneratedValidationRuleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceGetGeneratedValidationRuleVersion
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetGeneratedValidationRuleVersionCall(String descriptorName, String versionId, String name, String scope, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/generated/version/{descriptorName}/{versionId}"
            .replaceAll("\\{" + "descriptorName" + "\\}", localVarApiClient.escapeString(descriptorName.toString()))
            .replaceAll("\\{" + "versionId" + "\\}", localVarApiClient.escapeString(versionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (scope != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("scope", scope));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceGetGeneratedValidationRuleVersionValidateBeforeCall(String descriptorName, String versionId, String name, String scope, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'descriptorName' is set
        if (descriptorName == null) {
            throw new ApiException("Missing the required parameter 'descriptorName' when calling validatorServiceGetGeneratedValidationRuleVersion(Async)");
        }
        
        // verify the required parameter 'versionId' is set
        if (versionId == null) {
            throw new ApiException("Missing the required parameter 'versionId' when calling validatorServiceGetGeneratedValidationRuleVersion(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceGetGeneratedValidationRuleVersionCall(descriptorName, versionId, name, scope, _callback);
        return localVarCall;

    }

    /**
     * GetGeneratedValidationRuleVersion method allows the user to view a particular version of a generated ruleset. The request requires a descriptor name and a version ID. If the requested ruleset version is not found, an error response is returned.
     * Example of Request: GET /api/v1/validation/rule/generated/version/foreign_exchange-vanilla-forwards /QHF5uuOTjGprb3FRsI7ybBnU6-Ub32Xq8Q399PtQWeQ&#x3D; {  \&quot;scope\&quot;: \&quot;global\&quot; }  Example of Response: {     \&quot;data\&quot;: {          \&quot;versions\&quot;: [              {                 \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                 \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;              },              {                  \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                  \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;              },              {                  \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                  \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;              }          ]      }  }
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @return TitaniumGetGeneratedValidationRuleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumGetGeneratedValidationRuleResponse validatorServiceGetGeneratedValidationRuleVersion(String descriptorName, String versionId, String name, String scope) throws ApiException {
        ApiResponse<TitaniumGetGeneratedValidationRuleResponse> localVarResp = validatorServiceGetGeneratedValidationRuleVersionWithHttpInfo(descriptorName, versionId, name, scope);
        return localVarResp.getData();
    }

    /**
     * GetGeneratedValidationRuleVersion method allows the user to view a particular version of a generated ruleset. The request requires a descriptor name and a version ID. If the requested ruleset version is not found, an error response is returned.
     * Example of Request: GET /api/v1/validation/rule/generated/version/foreign_exchange-vanilla-forwards /QHF5uuOTjGprb3FRsI7ybBnU6-Ub32Xq8Q399PtQWeQ&#x3D; {  \&quot;scope\&quot;: \&quot;global\&quot; }  Example of Response: {     \&quot;data\&quot;: {          \&quot;versions\&quot;: [              {                 \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                 \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;              },              {                  \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                  \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;              },              {                  \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                  \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;              }          ]      }  }
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @return ApiResponse&lt;TitaniumGetGeneratedValidationRuleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumGetGeneratedValidationRuleResponse> validatorServiceGetGeneratedValidationRuleVersionWithHttpInfo(String descriptorName, String versionId, String name, String scope) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceGetGeneratedValidationRuleVersionValidateBeforeCall(descriptorName, versionId, name, scope, null);
        Type localVarReturnType = new TypeToken<TitaniumGetGeneratedValidationRuleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * GetGeneratedValidationRuleVersion method allows the user to view a particular version of a generated ruleset. The request requires a descriptor name and a version ID. If the requested ruleset version is not found, an error response is returned. (asynchronously)
     * Example of Request: GET /api/v1/validation/rule/generated/version/foreign_exchange-vanilla-forwards /QHF5uuOTjGprb3FRsI7ybBnU6-Ub32Xq8Q399PtQWeQ&#x3D; {  \&quot;scope\&quot;: \&quot;global\&quot; }  Example of Response: {     \&quot;data\&quot;: {          \&quot;versions\&quot;: [              {                 \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                 \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;              },              {                  \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                  \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;              },              {                  \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                  \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;              }          ]      }  }
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetGeneratedValidationRuleVersionAsync(String descriptorName, String versionId, String name, String scope, final ApiCallback<TitaniumGetGeneratedValidationRuleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceGetGeneratedValidationRuleVersionValidateBeforeCall(descriptorName, versionId, name, scope, _callback);
        Type localVarReturnType = new TypeToken<TitaniumGetGeneratedValidationRuleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceGetValidationRule
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetValidationRuleCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/get";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceGetValidationRuleValidateBeforeCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceGetValidationRule(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceGetValidationRuleCall(body, _callback);
        return localVarCall;

    }

    /**
     * GetValidationRule method retrieves information about a validation rule. Both back office users and participant users can view validation rulesets. The default scope is used if no scope is given in the request. Authorization is fetched from the user&#39;s token. The rule can be retrieved by either descriptor name or UID. If multiple versions of the rule exist, this method returns the latest version.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }   Or: {  \&quot;uid\&quot;: \&quot;ac49453d-cc9c-11ec-8bac-5314d58ea570\&quot; }    Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;definition\&quot;: {            \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,            \&quot;criteria\&quot;: [                {                    \&quot;name\&quot;: \&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,                    \&quot;description\&quot;: \&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,                    \&quot;rule\&quot;: \&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,                    \&quot;tags\&quot;: [                        \&quot;forward points\&quot;                    ],                    \&quot;metadata\&quot;: [],                    \&quot;validations\&quot;: [                        {                            \&quot;name\&quot;: \&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,                            \&quot;description\&quot;: \&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,                            \&quot;rule\&quot;: \&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,                            \&quot;ruleType\&quot;: \&quot;INPUT_DATA\&quot;,                            \&quot;severity\&quot;: 1,                            \&quot;tags\&quot;: [],                            \&quot;error\&quot;: {                                \&quot;message\&quot;: \&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,                                \&quot;messageArgs\&quot;: [                                    \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,                                    \&quot;foreign_exchange-vanilla-options.underlying\&quot;                                ]                            },                            \&quot;filter\&quot;: \&quot;\&quot;                        }                    ]                }            ]        },        \&quot;scope\&quot;: \&quot;global\&quot;,        \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;    } }  Example of Error response:  Missing argument: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Missing argument: need either descriptor name or uid to get validation rule\&quot;    } }  Resource not found : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] not found, details: [fx_fwd] of service [VALIDATIONRULESET] does not exist in namespace [global]\&quot;    } }
     * @param body  (required)
     * @return TitaniumGetValidationRuleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumGetValidationRuleResponse validatorServiceGetValidationRule(TitaniumGetDefinition body) throws ApiException {
        ApiResponse<TitaniumGetValidationRuleResponse> localVarResp = validatorServiceGetValidationRuleWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * GetValidationRule method retrieves information about a validation rule. Both back office users and participant users can view validation rulesets. The default scope is used if no scope is given in the request. Authorization is fetched from the user&#39;s token. The rule can be retrieved by either descriptor name or UID. If multiple versions of the rule exist, this method returns the latest version.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }   Or: {  \&quot;uid\&quot;: \&quot;ac49453d-cc9c-11ec-8bac-5314d58ea570\&quot; }    Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;definition\&quot;: {            \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,            \&quot;criteria\&quot;: [                {                    \&quot;name\&quot;: \&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,                    \&quot;description\&quot;: \&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,                    \&quot;rule\&quot;: \&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,                    \&quot;tags\&quot;: [                        \&quot;forward points\&quot;                    ],                    \&quot;metadata\&quot;: [],                    \&quot;validations\&quot;: [                        {                            \&quot;name\&quot;: \&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,                            \&quot;description\&quot;: \&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,                            \&quot;rule\&quot;: \&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,                            \&quot;ruleType\&quot;: \&quot;INPUT_DATA\&quot;,                            \&quot;severity\&quot;: 1,                            \&quot;tags\&quot;: [],                            \&quot;error\&quot;: {                                \&quot;message\&quot;: \&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,                                \&quot;messageArgs\&quot;: [                                    \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,                                    \&quot;foreign_exchange-vanilla-options.underlying\&quot;                                ]                            },                            \&quot;filter\&quot;: \&quot;\&quot;                        }                    ]                }            ]        },        \&quot;scope\&quot;: \&quot;global\&quot;,        \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;    } }  Example of Error response:  Missing argument: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Missing argument: need either descriptor name or uid to get validation rule\&quot;    } }  Resource not found : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] not found, details: [fx_fwd] of service [VALIDATIONRULESET] does not exist in namespace [global]\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumGetValidationRuleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumGetValidationRuleResponse> validatorServiceGetValidationRuleWithHttpInfo(TitaniumGetDefinition body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceGetValidationRuleValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumGetValidationRuleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * GetValidationRule method retrieves information about a validation rule. Both back office users and participant users can view validation rulesets. The default scope is used if no scope is given in the request. Authorization is fetched from the user&#39;s token. The rule can be retrieved by either descriptor name or UID. If multiple versions of the rule exist, this method returns the latest version. (asynchronously)
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }   Or: {  \&quot;uid\&quot;: \&quot;ac49453d-cc9c-11ec-8bac-5314d58ea570\&quot; }    Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;definition\&quot;: {            \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,            \&quot;criteria\&quot;: [                {                    \&quot;name\&quot;: \&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,                    \&quot;description\&quot;: \&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,                    \&quot;rule\&quot;: \&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,                    \&quot;tags\&quot;: [                        \&quot;forward points\&quot;                    ],                    \&quot;metadata\&quot;: [],                    \&quot;validations\&quot;: [                        {                            \&quot;name\&quot;: \&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,                            \&quot;description\&quot;: \&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,                            \&quot;rule\&quot;: \&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,                            \&quot;ruleType\&quot;: \&quot;INPUT_DATA\&quot;,                            \&quot;severity\&quot;: 1,                            \&quot;tags\&quot;: [],                            \&quot;error\&quot;: {                                \&quot;message\&quot;: \&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,                                \&quot;messageArgs\&quot;: [                                    \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,                                    \&quot;foreign_exchange-vanilla-options.underlying\&quot;                                ]                            },                            \&quot;filter\&quot;: \&quot;\&quot;                        }                    ]                }            ]        },        \&quot;scope\&quot;: \&quot;global\&quot;,        \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;    } }  Example of Error response:  Missing argument: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Missing argument: need either descriptor name or uid to get validation rule\&quot;    } }  Resource not found : {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Rule [fx_fwd] not found, details: [fx_fwd] of service [VALIDATIONRULESET] does not exist in namespace [global]\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetValidationRuleAsync(TitaniumGetDefinition body, final ApiCallback<TitaniumGetValidationRuleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceGetValidationRuleValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumGetValidationRuleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceGetValidationRuleVersion
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetValidationRuleVersionCall(String descriptorName, String versionId, String name, String scope, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/version/{descriptorName}/{versionId}"
            .replaceAll("\\{" + "descriptorName" + "\\}", localVarApiClient.escapeString(descriptorName.toString()))
            .replaceAll("\\{" + "versionId" + "\\}", localVarApiClient.escapeString(versionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (scope != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("scope", scope));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceGetValidationRuleVersionValidateBeforeCall(String descriptorName, String versionId, String name, String scope, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'descriptorName' is set
        if (descriptorName == null) {
            throw new ApiException("Missing the required parameter 'descriptorName' when calling validatorServiceGetValidationRuleVersion(Async)");
        }
        
        // verify the required parameter 'versionId' is set
        if (versionId == null) {
            throw new ApiException("Missing the required parameter 'versionId' when calling validatorServiceGetValidationRuleVersion(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceGetValidationRuleVersionCall(descriptorName, versionId, name, scope, _callback);
        return localVarCall;

    }

    /**
     * This is a method that allows both back office users and regular users to retrieve a specific version of a ruleset given the descriptor name and version ID. The ruleset is used for validation purposes and contains criteria and rules for validating data submissions. Back office users can retrieve a particular version of a ruleset from any scope, while participant users can only retrieve a version of a ruleset from either the global scope or their own scope.
     * Example of Request: GET /api/v1/validation/rule/version/fx_fwd_May04/teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;  Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;definition\&quot;: {            \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,            \&quot;criteria\&quot;: [                {                    \&quot;name\&quot;: \&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,                    \&quot;description\&quot;: \&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,                    \&quot;rule\&quot;: \&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,                    \&quot;tags\&quot;: [                        \&quot;forward points\&quot;                    ],                    \&quot;metadata\&quot;: [],                    \&quot;validations\&quot;: [                        {                            \&quot;name\&quot;: \&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,                            \&quot;description\&quot;: \&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,                            \&quot;rule\&quot;: \&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,                            \&quot;ruleType\&quot;: \&quot;INPUT_DATA\&quot;,                            \&quot;severity\&quot;: 1,                            \&quot;tags\&quot;: [],                            \&quot;error\&quot;: {                                \&quot;message\&quot;: \&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,                                \&quot;messageArgs\&quot;: [                                    \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,                                    \&quot;foreign_exchange-vanilla-options.underlying\&quot;                                ]                            },                            \&quot;filter\&quot;: \&quot;\&quot;                        }                    ]                }            ]        },        \&quot;scope\&quot;: \&quot;global\&quot;,        \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd_May04], details: MetaData entity not found: name [fx_fwd_May04] version: [teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk] in namespace: [global]\&quot;    } }
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @return TitaniumGetValidationRuleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumGetValidationRuleResponse validatorServiceGetValidationRuleVersion(String descriptorName, String versionId, String name, String scope) throws ApiException {
        ApiResponse<TitaniumGetValidationRuleResponse> localVarResp = validatorServiceGetValidationRuleVersionWithHttpInfo(descriptorName, versionId, name, scope);
        return localVarResp.getData();
    }

    /**
     * This is a method that allows both back office users and regular users to retrieve a specific version of a ruleset given the descriptor name and version ID. The ruleset is used for validation purposes and contains criteria and rules for validating data submissions. Back office users can retrieve a particular version of a ruleset from any scope, while participant users can only retrieve a version of a ruleset from either the global scope or their own scope.
     * Example of Request: GET /api/v1/validation/rule/version/fx_fwd_May04/teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;  Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;definition\&quot;: {            \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,            \&quot;criteria\&quot;: [                {                    \&quot;name\&quot;: \&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,                    \&quot;description\&quot;: \&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,                    \&quot;rule\&quot;: \&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,                    \&quot;tags\&quot;: [                        \&quot;forward points\&quot;                    ],                    \&quot;metadata\&quot;: [],                    \&quot;validations\&quot;: [                        {                            \&quot;name\&quot;: \&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,                            \&quot;description\&quot;: \&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,                            \&quot;rule\&quot;: \&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,                            \&quot;ruleType\&quot;: \&quot;INPUT_DATA\&quot;,                            \&quot;severity\&quot;: 1,                            \&quot;tags\&quot;: [],                            \&quot;error\&quot;: {                                \&quot;message\&quot;: \&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,                                \&quot;messageArgs\&quot;: [                                    \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,                                    \&quot;foreign_exchange-vanilla-options.underlying\&quot;                                ]                            },                            \&quot;filter\&quot;: \&quot;\&quot;                        }                    ]                }            ]        },        \&quot;scope\&quot;: \&quot;global\&quot;,        \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd_May04], details: MetaData entity not found: name [fx_fwd_May04] version: [teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk] in namespace: [global]\&quot;    } }
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @return ApiResponse&lt;TitaniumGetValidationRuleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumGetValidationRuleResponse> validatorServiceGetValidationRuleVersionWithHttpInfo(String descriptorName, String versionId, String name, String scope) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceGetValidationRuleVersionValidateBeforeCall(descriptorName, versionId, name, scope, null);
        Type localVarReturnType = new TypeToken<TitaniumGetValidationRuleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * This is a method that allows both back office users and regular users to retrieve a specific version of a ruleset given the descriptor name and version ID. The ruleset is used for validation purposes and contains criteria and rules for validating data submissions. Back office users can retrieve a particular version of a ruleset from any scope, while participant users can only retrieve a version of a ruleset from either the global scope or their own scope. (asynchronously)
     * Example of Request: GET /api/v1/validation/rule/version/fx_fwd_May04/teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;  Example of Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;definition\&quot;: {            \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,            \&quot;criteria\&quot;: [                {                    \&quot;name\&quot;: \&quot;FX-V-FXO: Option Instrument Parameter: Forward Points\&quot;,                    \&quot;description\&quot;: \&quot;This criteria element contains validation rules that will be applied to all fx-vanilla-options data submission rows where option_instrument_parameter equals \\\&quot;Forward Points\\\&quot;.\&quot;,                    \&quot;rule\&quot;: \&quot;[\\\&quot;foreign_exchange-vanilla-options.option_instrument_parameter\\\&quot;,\\\&quot;$eq_case_insensitive\\\&quot;,\\\&quot;Forward Points\\\&quot;]\&quot;,                    \&quot;tags\&quot;: [                        \&quot;forward points\&quot;                    ],                    \&quot;metadata\&quot;: [],                    \&quot;validations\&quot;: [                        {                            \&quot;name\&quot;: \&quot;FX-V-FXO: Forward Points: Forward Conversion Factor: Exiting Value Check\&quot;,                            \&quot;description\&quot;: \&quot;Compare the fwrd_conversion_factor for a given underlying against the expected values.\&quot;,                            \&quot;rule\&quot;: \&quot;[ { \\\&quot;$lut_name\\\&quot;: \\\&quot;conversion_factor\\\&quot;, \\\&quot;$get\\\&quot;: [ \\\&quot;foreign_exchange-vanilla-options.underlying\\\&quot; ] }, \\\&quot;$eq\\\&quot;, \\\&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\\\&quot; ]\&quot;,                            \&quot;ruleType\&quot;: \&quot;INPUT_DATA\&quot;,                            \&quot;severity\&quot;: 1,                            \&quot;tags\&quot;: [],                            \&quot;error\&quot;: {                                \&quot;message\&quot;: \&quot;[%s] is not a conversion factor used in consensus. Please update the conversion factor for this underlying -- [%s].\&quot;,                                \&quot;messageArgs\&quot;: [                                    \&quot;foreign_exchange-vanilla-options.fwrd_conversion_factor\&quot;,                                    \&quot;foreign_exchange-vanilla-options.underlying\&quot;                                ]                            },                            \&quot;filter\&quot;: \&quot;\&quot;                        }                    ]                }            ]        },        \&quot;scope\&quot;: \&quot;global\&quot;,        \&quot;descriptorName\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd_May04], details: MetaData entity not found: name [fx_fwd_May04] version: [teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk] in namespace: [global]\&quot;    } }
     * @param descriptorName  (required)
     * @param versionId  (required)
     * @param name  (optional)
     * @param scope  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceGetValidationRuleVersionAsync(String descriptorName, String versionId, String name, String scope, final ApiCallback<TitaniumGetValidationRuleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceGetValidationRuleVersionValidateBeforeCall(descriptorName, versionId, name, scope, _callback);
        Type localVarReturnType = new TypeToken<TitaniumGetValidationRuleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceListGeneratedValidationRuleVersions
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceListGeneratedValidationRuleVersionsCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/generated/versions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceListGeneratedValidationRuleVersionsValidateBeforeCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceListGeneratedValidationRuleVersions(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceListGeneratedValidationRuleVersionsCall(body, _callback);
        return localVarCall;

    }

    /**
     * ListGeneratedValidationRuleVersions method returns a list of generated ruleset version IDs along with their creation timestamps. The request requires a descriptor name. If the requested ruleset is not found, an error response is returned.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }   Example of Response: {    \&quot;data\&quot;: {        \&quot;versions\&quot;: [            {                \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;            }        ]    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd] versions, details: Rule [fx_fwd] not found\&quot;    } }
     * @param body  (required)
     * @return TitaniumListVersionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumListVersionResponse validatorServiceListGeneratedValidationRuleVersions(TitaniumGetDefinition body) throws ApiException {
        ApiResponse<TitaniumListVersionResponse> localVarResp = validatorServiceListGeneratedValidationRuleVersionsWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * ListGeneratedValidationRuleVersions method returns a list of generated ruleset version IDs along with their creation timestamps. The request requires a descriptor name. If the requested ruleset is not found, an error response is returned.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }   Example of Response: {    \&quot;data\&quot;: {        \&quot;versions\&quot;: [            {                \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;            }        ]    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd] versions, details: Rule [fx_fwd] not found\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumListVersionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumListVersionResponse> validatorServiceListGeneratedValidationRuleVersionsWithHttpInfo(TitaniumGetDefinition body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceListGeneratedValidationRuleVersionsValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumListVersionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ListGeneratedValidationRuleVersions method returns a list of generated ruleset version IDs along with their creation timestamps. The request requires a descriptor name. If the requested ruleset is not found, an error response is returned. (asynchronously)
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }   Example of Response: {    \&quot;data\&quot;: {        \&quot;versions\&quot;: [            {                \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;            }        ]    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd] versions, details: Rule [fx_fwd] not found\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceListGeneratedValidationRuleVersionsAsync(TitaniumGetDefinition body, final ApiCallback<TitaniumListVersionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceListGeneratedValidationRuleVersionsValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumListVersionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceListValidationRuleVersions
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceListValidationRuleVersionsCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/versions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceListValidationRuleVersionsValidateBeforeCall(TitaniumGetDefinition body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceListValidationRuleVersions(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceListValidationRuleVersionsCall(body, _callback);
        return localVarCall;

    }

    /**
     * ListValidationRuleVersions method is used to retrieve a list of versions for a given validation rule. Both back office users and participant users can retrieve versions of validation rulesets, but the scope will depend on the user. The request must specify the descriptor name for the validation rule. The response will include a list of versions and their created timestamp. If the requested rule is not found, an error response will be returned.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }  Example of Response: {    \&quot;data\&quot;: {        \&quot;versions\&quot;: [            {                \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;            }        ]    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd] versions, details: Rule [fx_fwd_validation] not found\&quot;    } }
     * @param body  (required)
     * @return TitaniumListVersionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumListVersionResponse validatorServiceListValidationRuleVersions(TitaniumGetDefinition body) throws ApiException {
        ApiResponse<TitaniumListVersionResponse> localVarResp = validatorServiceListValidationRuleVersionsWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * ListValidationRuleVersions method is used to retrieve a list of versions for a given validation rule. Both back office users and participant users can retrieve versions of validation rulesets, but the scope will depend on the user. The request must specify the descriptor name for the validation rule. The response will include a list of versions and their created timestamp. If the requested rule is not found, an error response will be returned.
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }  Example of Response: {    \&quot;data\&quot;: {        \&quot;versions\&quot;: [            {                \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;            }        ]    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd] versions, details: Rule [fx_fwd_validation] not found\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumListVersionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumListVersionResponse> validatorServiceListValidationRuleVersionsWithHttpInfo(TitaniumGetDefinition body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceListValidationRuleVersionsValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumListVersionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ListValidationRuleVersions method is used to retrieve a list of versions for a given validation rule. Both back office users and participant users can retrieve versions of validation rulesets, but the scope will depend on the user. The request must specify the descriptor name for the validation rule. The response will include a list of versions and their created timestamp. If the requested rule is not found, an error response will be returned. (asynchronously)
     * Example of Request: {  \&quot;descriptor_name\&quot;: \&quot;fx_fwd\&quot; }  Example of Response: {    \&quot;data\&quot;: {        \&quot;versions\&quot;: [            {                \&quot;versionId\&quot;: \&quot;teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:20:58.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;mwpGZcWNc2zFgweB5rcNmAbcxqekM_zUCdpVrl_V6BM&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 16:17:19.0\&quot;            },            {                \&quot;versionId\&quot;: \&quot;6pfCXN2rFnIAMoDHy7VIFh6HmoyDu3njXkpwzeTp2nc&#x3D;\&quot;,                \&quot;createdAt\&quot;: \&quot;2022-05-04 15:02:00.0\&quot;            }        ]    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to get rule [fx_fwd] versions, details: Rule [fx_fwd_validation] not found\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceListValidationRuleVersionsAsync(TitaniumGetDefinition body, final ApiCallback<TitaniumListVersionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceListValidationRuleVersionsValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumListVersionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceListValidationRules
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceListValidationRulesCall(TitaniumListRequest body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceListValidationRulesValidateBeforeCall(TitaniumListRequest body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceListValidationRules(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceListValidationRulesCall(body, _callback);
        return localVarCall;

    }

    /**
     * ListValidationRules method is used to retrieve a list of validation rule names. Both back office users and participant users can retrieve validation rulesets, but the scope and authorization will depend on the user. The default scope is used if no scope is specified in the request. The request may include an optional filter and orderBy parameter to refine the search results. Pagination is also supported. The response will include a list of rule names matching the filter criteria.
     * Example of Request: {  \&quot;scope\&quot;: \&quot;global\&quot;,  \&quot;filter\&quot;: \&quot;.*exchange.*\&quot;,  \&quot;orderBy\&quot;: {   \&quot;order\&quot;: \&quot;DESC\&quot;  } }  Example of Response: {    \&quot;data\&quot;: {        \&quot;results\&quot;: [            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-exotics-tarfs\&quot;            }        ]    } }  Example of Request with pagination: {  \&quot;scope\&quot;: \&quot;global\&quot;,  \&quot;filter\&quot;: \&quot;.*exchange.*\&quot;,  \&quot;orderBy\&quot;: {   \&quot;order\&quot;: \&quot;DESC\&quot;  },  \&quot;limit\&quot;: {   \&quot;value\&quot;: 2  },  \&quot;offset\&quot;: 1 }  Example of Response: {    \&quot;data\&quot;: {        \&quot;results\&quot;: [            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-exotics-tarfs\&quot;            }        ]    } }  Example of Error response: not ‘global’ scope: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid argument: only support &#39;global&#39; scope\&quot;    } }  Invalid filter/regex: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to list rules: Dangling meta character &#39;*&#39; near index 0\\n*May*\\n^\&quot;    } }
     * @param body  (required)
     * @return TitaniumListRuleResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumListRuleResponse validatorServiceListValidationRules(TitaniumListRequest body) throws ApiException {
        ApiResponse<TitaniumListRuleResponse> localVarResp = validatorServiceListValidationRulesWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * ListValidationRules method is used to retrieve a list of validation rule names. Both back office users and participant users can retrieve validation rulesets, but the scope and authorization will depend on the user. The default scope is used if no scope is specified in the request. The request may include an optional filter and orderBy parameter to refine the search results. Pagination is also supported. The response will include a list of rule names matching the filter criteria.
     * Example of Request: {  \&quot;scope\&quot;: \&quot;global\&quot;,  \&quot;filter\&quot;: \&quot;.*exchange.*\&quot;,  \&quot;orderBy\&quot;: {   \&quot;order\&quot;: \&quot;DESC\&quot;  } }  Example of Response: {    \&quot;data\&quot;: {        \&quot;results\&quot;: [            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-exotics-tarfs\&quot;            }        ]    } }  Example of Request with pagination: {  \&quot;scope\&quot;: \&quot;global\&quot;,  \&quot;filter\&quot;: \&quot;.*exchange.*\&quot;,  \&quot;orderBy\&quot;: {   \&quot;order\&quot;: \&quot;DESC\&quot;  },  \&quot;limit\&quot;: {   \&quot;value\&quot;: 2  },  \&quot;offset\&quot;: 1 }  Example of Response: {    \&quot;data\&quot;: {        \&quot;results\&quot;: [            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-exotics-tarfs\&quot;            }        ]    } }  Example of Error response: not ‘global’ scope: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid argument: only support &#39;global&#39; scope\&quot;    } }  Invalid filter/regex: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to list rules: Dangling meta character &#39;*&#39; near index 0\\n*May*\\n^\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumListRuleResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumListRuleResponse> validatorServiceListValidationRulesWithHttpInfo(TitaniumListRequest body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceListValidationRulesValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumListRuleResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * ListValidationRules method is used to retrieve a list of validation rule names. Both back office users and participant users can retrieve validation rulesets, but the scope and authorization will depend on the user. The default scope is used if no scope is specified in the request. The request may include an optional filter and orderBy parameter to refine the search results. Pagination is also supported. The response will include a list of rule names matching the filter criteria. (asynchronously)
     * Example of Request: {  \&quot;scope\&quot;: \&quot;global\&quot;,  \&quot;filter\&quot;: \&quot;.*exchange.*\&quot;,  \&quot;orderBy\&quot;: {   \&quot;order\&quot;: \&quot;DESC\&quot;  } }  Example of Response: {    \&quot;data\&quot;: {        \&quot;results\&quot;: [            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-exotics-tarfs\&quot;            }        ]    } }  Example of Request with pagination: {  \&quot;scope\&quot;: \&quot;global\&quot;,  \&quot;filter\&quot;: \&quot;.*exchange.*\&quot;,  \&quot;orderBy\&quot;: {   \&quot;order\&quot;: \&quot;DESC\&quot;  },  \&quot;limit\&quot;: {   \&quot;value\&quot;: 2  },  \&quot;offset\&quot;: 1 }  Example of Response: {    \&quot;data\&quot;: {        \&quot;results\&quot;: [            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;            },            {                \&quot;uid\&quot;: \&quot;\&quot;,                \&quot;descriptor_name\&quot;: \&quot;foreign_exchange-exotics-tarfs\&quot;            }        ]    } }  Example of Error response: not ‘global’ scope: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Invalid argument: only support &#39;global&#39; scope\&quot;    } }  Invalid filter/regex: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 70,        \&quot;message\&quot;: \&quot;Failed to list rules: Dangling meta character &#39;*&#39; near index 0\\n*May*\\n^\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceListValidationRulesAsync(TitaniumListRequest body, final ApiCallback<TitaniumListRuleResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceListValidationRulesValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumListRuleResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for validatorServiceRdlCheck
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceRdlCheckCall(TitaniumRdlCheckRequest body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/validation/rule/check";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call validatorServiceRdlCheckValidateBeforeCall(TitaniumRdlCheckRequest body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling validatorServiceRdlCheck(Async)");
        }
        

        okhttp3.Call localVarCall = validatorServiceRdlCheckCall(body, _callback);
        return localVarCall;

    }

    /**
     * RdlCheck method checks the syntax of a given RDL (Rule Description Language) expression. It takes a RdlCheckRequest message as input and returns a MessageResponse message.
     * Example of Request: {  \&quot;rdl\&quot;: \&quot;[\\\&quot;a\\\&quot;, \\\&quot;$eq\\\&quot;, \\\&quot;b\\\&quot;\&quot; }  Example of Response: {    \&quot;data\&quot;: {        \&quot;message\&quot;: \&quot;success\&quot;    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 69,        \&quot;message\&quot;: \&quot;rdl [[\\\&quot;a\\\&quot;, \\\&quot;$eq\\\&quot;, \\\&quot;b\\\&quot;] cannot be parsed. Error: line 1:16 missing &#39;]&#39; at &#39;&lt;EOF&gt;&#39;\&quot;    } }
     * @param body  (required)
     * @return TitaniumMessageResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public TitaniumMessageResponse validatorServiceRdlCheck(TitaniumRdlCheckRequest body) throws ApiException {
        ApiResponse<TitaniumMessageResponse> localVarResp = validatorServiceRdlCheckWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * RdlCheck method checks the syntax of a given RDL (Rule Description Language) expression. It takes a RdlCheckRequest message as input and returns a MessageResponse message.
     * Example of Request: {  \&quot;rdl\&quot;: \&quot;[\\\&quot;a\\\&quot;, \\\&quot;$eq\\\&quot;, \\\&quot;b\\\&quot;\&quot; }  Example of Response: {    \&quot;data\&quot;: {        \&quot;message\&quot;: \&quot;success\&quot;    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 69,        \&quot;message\&quot;: \&quot;rdl [[\\\&quot;a\\\&quot;, \\\&quot;$eq\\\&quot;, \\\&quot;b\\\&quot;] cannot be parsed. Error: line 1:16 missing &#39;]&#39; at &#39;&lt;EOF&gt;&#39;\&quot;    } }
     * @param body  (required)
     * @return ApiResponse&lt;TitaniumMessageResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TitaniumMessageResponse> validatorServiceRdlCheckWithHttpInfo(TitaniumRdlCheckRequest body) throws ApiException {
        okhttp3.Call localVarCall = validatorServiceRdlCheckValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<TitaniumMessageResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * RdlCheck method checks the syntax of a given RDL (Rule Description Language) expression. It takes a RdlCheckRequest message as input and returns a MessageResponse message. (asynchronously)
     * Example of Request: {  \&quot;rdl\&quot;: \&quot;[\\\&quot;a\\\&quot;, \\\&quot;$eq\\\&quot;, \\\&quot;b\\\&quot;\&quot; }  Example of Response: {    \&quot;data\&quot;: {        \&quot;message\&quot;: \&quot;success\&quot;    } }  Example of Error response: Resource not found: {    \&quot;error\&quot;: {        \&quot;code\&quot;: 69,        \&quot;message\&quot;: \&quot;rdl [[\\\&quot;a\\\&quot;, \\\&quot;$eq\\\&quot;, \\\&quot;b\\\&quot;] cannot be parsed. Error: line 1:16 missing &#39;]&#39; at &#39;&lt;EOF&gt;&#39;\&quot;    } }
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A successful response. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected error response. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call validatorServiceRdlCheckAsync(TitaniumRdlCheckRequest body, final ApiCallback<TitaniumMessageResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = validatorServiceRdlCheckValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<TitaniumMessageResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
