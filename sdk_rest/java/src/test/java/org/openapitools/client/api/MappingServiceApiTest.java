/*
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RpcStatus;
import org.openapitools.client.model.TitaniumDescriptorPairBasedAcknowledgeResponse;
import org.openapitools.client.model.TitaniumDescriptorPairBasedGetDefinition;
import org.openapitools.client.model.TitaniumListRequest;
import org.openapitools.client.model.TitaniumListVersionResponse;
import org.openapitools.client.model.TitaniumMappingRuleDefinition;
import org.openapitools.client.model.TitaniumMappingRuleList;
import org.openapitools.client.model.TitaniumMappingRuleResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MappingServiceApi
 */
@Disabled
public class MappingServiceApiTest {

    private final MappingServiceApi api = new MappingServiceApi();

    /**
     * AddMappingRule AddMappingRule is an API used to add a specific mapping rule to the system. The name provided for the mapping rule must match the asset class and descriptor names. If a mapping rule with the same name already exists, it will be updated. This API accepts a MappingRuleDefinition object as its parameter,which includes information about the mapping rule being added. The response from this API is a DescriptorPairBasedAcknowledgeResponse,which acknowledges the addition of the mapping rule.
     *
     * Example of request for regular user : {   \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,   \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,   \&quot;transformations\&quot;:[      {         \&quot;targetColumn\&quot;:\&quot;submission_date\&quot;,         \&quot;sourceColumn\&quot;:\&quot;date\&quot;      },      {         \&quot;targetColumn\&quot;:\&quot;submission_asset\&quot;,         \&quot;rule\&quot;:\&quot;{ \\\&quot;$to_upper\\\&quot;: { \\\&quot;$trim\\\&quot; : \\\&quot;fx_test_for_bank1.submission_asset\\\&quot; }}\&quot;,         \&quot;name\&quot;: \&quot;upper case asset\&quot;,         \&quot;description\&quot;: \&quot;i am optional...\&quot;      }   ] }  Example of request for Back Office : {   \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,   \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,   \&quot;scope\&quot;:\&quot;global\&quot;,   \&quot;transformations\&quot;:[      {         \&quot;targetColumn\&quot;:\&quot;submission_date\&quot;,         \&quot;sourceColumn\&quot;:\&quot;another_date\&quot;      },      {         \&quot;targetColumn\&quot;:\&quot;submission_asset\&quot;,         \&quot;rule\&quot;:\&quot;{ \\\&quot;$to_upper\\\&quot;: { \\\&quot;$trim\\\&quot; : \\\&quot;fx_test_for_bank1.submission_asset\\\&quot; }}\&quot;,         \&quot;name\&quot;: \&quot;upper case asset\&quot;,         \&quot;description\&quot;: \&quot;i am optional...\&quot;      }   ] }  Example of response : {   \&quot;data\&quot;:{      \&quot;uid\&quot;:\&quot;fc8b57b7-cc90-11ec-b784-8dfc726b351f\&quot;,      \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,      \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;   } }  Example of error response : {   \&quot;error\&quot;:{      \&quot;code\&quot;:70,      \&quot;message\&quot;:\&quot;Missing argument: rule name.\&quot;   } }
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mappingServiceAddMappingRuleTest() throws ApiException {
        TitaniumMappingRuleDefinition body = null;
        TitaniumDescriptorPairBasedAcknowledgeResponse response = api.mappingServiceAddMappingRule(body);
        // TODO: test validations
    }

    /**
     * DisableMappingRule is used to disable a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a DescriptorPairBasedAcknowledgeResponse, which acknowledges the disablement of the mapping rule.
     *
     * Request: {  \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,  \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;  \&quot;scope\&quot;: \&quot;Zbank1\&quot; }  Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,        \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;    } }
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mappingServiceDisableMappingRuleTest() throws ApiException {
        TitaniumDescriptorPairBasedGetDefinition body = null;
        TitaniumDescriptorPairBasedAcknowledgeResponse response = api.mappingServiceDisableMappingRule(body);
        // TODO: test validations
    }

    /**
     * EnableMappingRule is used to enable a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a DescriptorPairBasedAcknowledgeResponse, which acknowledges the enablement of the mapping rule.
     *
     * Request: {  \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,  \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;  \&quot;scope\&quot;: \&quot;Zbank1\&quot; }  Response: {    \&quot;data\&quot;: {        \&quot;uid\&quot;: \&quot;\&quot;,        \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,        \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;    } }
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mappingServiceEnableMappingRuleTest() throws ApiException {
        TitaniumDescriptorPairBasedGetDefinition body = null;
        TitaniumDescriptorPairBasedAcknowledgeResponse response = api.mappingServiceEnableMappingRule(body);
        // TODO: test validations
    }

    /**
     * GetMappingRule is used to retrieve a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a MappingRuleResponse, which includes information about the retrieved mapping rule.
     *
     * Example of request for regular user : {   \&quot;identifier\&quot;:{      \&quot;uid\&quot;:\&quot;fc8b57b7-cc90-11ec-b784-8dfc726b351f\&quot;   } } Or : {      \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,      \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot; }  Example of request for Back Office : {   \&quot;identifier\&quot;:{       \&quot;uid\&quot;:\&quot;fc8b57b7-cc90-11ec-b784-8dfc726b351f\&quot;   },   \&quot;scope\&quot;:\&quot;bank1\&quot; } Or : {   \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,   \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-forwards\&quot;,   \&quot;scope\&quot;:\&quot;bank1\&quot; }  Example of response : { \&quot;data\&quot;: {  \&quot;uid\&quot;: \&quot;\&quot;,  \&quot;srcDescriptor\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,  \&quot;destDescriptor\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,  \&quot;transformations\&quot;: [   {    \&quot;name\&quot;: \&quot;\&quot;,    \&quot;targetColumn\&quot;: \&quot;snap_date\&quot;,    \&quot;sourceColumn\&quot;: \&quot;submission_date\&quot;,    \&quot;rule\&quot;: \&quot;\&quot;,    \&quot;description\&quot;: \&quot;\&quot;   }  ],  \&quot;scope\&quot;: \&quot;\&quot; } }  Example of error response : {   \&quot;error\&quot;:{      \&quot;code\&quot;:70,      \&quot;message\&quot;:\&quot;Can&#39;t get mapping rule: [[empty] of service [MAPPINGRULESET] does not exist in namespace [bank1]].\&quot;   } }
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mappingServiceGetMappingRuleTest() throws ApiException {
        TitaniumDescriptorPairBasedGetDefinition body = null;
        TitaniumMappingRuleResponse response = api.mappingServiceGetMappingRule(body);
        // TODO: test validations
    }

    /**
     * GetMappingRuleVersion is used to retrieve a specific version of a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedVersionRequest object as its parameter, which includes the scope, source descriptor, destination descriptor, and version ID for the mapping rule. The response from it is a MappingRuleResponse, which includes information about the retrieved version of the mapping rule.
     *
     * Example of request : GET /api/v1/validation/rule/version/fx_fwd_1/fx_fwd_2/teTYb9Fs_lIOoPQJukM6dY3aJdiMqT-SdBPdvYfJAjk&#x3D;  Example of response : {   \&quot;definition\&quot;:\&quot;{\\\&quot;src_descriptor\\\&quot;:\\\&quot;foreign_exchange-vanilla-forwards\\\&quot;,\\\&quot;dest_descriptor\\\&quot;:\\\&quot;foreign_exchange-vanilla-forwards\\\&quot;,\\\&quot;transformations\\\&quot;:[{\\\&quot;targetColumnName\\\&quot;:\\\&quot;submission_date\\\&quot;,\\\&quot;sourceColumnName\\\&quot;:\\\&quot;another_date\\\&quot;},{\\\&quot;rule\\\&quot;:\\\&quot;{ \\\\\\\&quot;$to_upper\\\\\\\&quot;: { \\\\\\\&quot;$trim\\\\\\\&quot; : \\\\\\\&quot;fx_test_for_bank1.submission_asset\\\\\\\&quot; }}\\\&quot;,\\\&quot;targetColumnName\\\&quot;:\\\&quot;submission_asset\\\&quot;, \\\&quot;name\\\&quot;: \\\&quot;upper case asset\\\&quot;, \\\&quot;description\\\&quot;: \\\&quot;i am optional...\\\&quot;}]}\&quot; }
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mappingServiceGetMappingRuleVersionTest() throws ApiException {
        String scope = null;
        String srcDescriptor = null;
        String destDescriptor = null;
        String versionId = null;
        TitaniumMappingRuleResponse response = api.mappingServiceGetMappingRuleVersion(scope, srcDescriptor, destDescriptor, versionId);
        // TODO: test validations
    }

    /**
     * ListMappingRuleVersions is used to retrieve a list of all versions of a mapping rule for a given descriptor pair. It accepts a DescriptorPairBasedGetDefinition object as its parameter, which specifies the source and destination descriptors for the mapping rule. The response from this it is a ListVersionResponse, which includes information about all versions of the mapping rule.
     *
     * Example of request : {  \&quot;scope\&quot;: \&quot;global\&quot;,  \&quot;src_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot;,  \&quot;dest_descriptor\&quot;:\&quot;foreign_exchange-vanilla-options\&quot; }  Example of response : {   \&quot;data\&quot;:{      \&quot;versions\&quot;:[         {            \&quot;versionId\&quot;:\&quot;EKc9bpBGCbLJmBqOpP0FTqtNusxgZrgCheGXj_MTj7A&#x3D;\&quot;,            \&quot;createdAt\&quot;:\&quot;2022-05-05 11:33:59.0\&quot;         },         {            \&quot;versionId\&quot;:\&quot;JKLFLkhV3SC-fqO0L-WTswr5ttHLfnvF8rMlLnkafAc&#x3D;\&quot;,            \&quot;createdAt\&quot;:\&quot;2022-05-05 11:32:42.0\&quot;         }      ]   } }
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mappingServiceListMappingRuleVersionsTest() throws ApiException {
        TitaniumDescriptorPairBasedGetDefinition body = null;
        TitaniumListVersionResponse response = api.mappingServiceListMappingRuleVersions(body);
        // TODO: test validations
    }

    /**
     * ListMappingRules is used to retrieve a list of all mapping rules in the system. It accepts a ListRequest object as its parameter, which includes optional parameters for filtering the results. The response from this it is a MappingRuleList, which includes information about all mapping rules in the system that match the provided filter parameters.
     *
     * Example of request : {   \&quot;scope\&quot;:\&quot;global\&quot; } Or optionally use filter: {   \&quot;scope\&quot;:\&quot;global\&quot;,   \&quot;filter\&quot;: \&quot;.*vanilla.*__.*vanilla.*\&quot; // all mapping rules from any vanilla to any vanilla }  Example of response : {    \&quot;data\&quot;: {        \&quot;results\&quot;: [            {                \&quot;uid\&quot;: \&quot;Djqreg7gTs7CV2rSyyucOWCFjK7ldgS9yQX0o0rEiV0&#x3D;\&quot;,                \&quot;src_descriptor\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;,                \&quot;dest_descriptor\&quot;: \&quot;foreign_exchange-vanilla-forwards\&quot;             },            {                \&quot;uid\&quot;: \&quot;Djqreg7gTs7CV2rSyyucOWCFjK7ldgS9yQX0o0rEiV0&#x3D;\&quot;,                \&quot;src_descriptor\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;,                \&quot;dest_descriptor\&quot;: \&quot;foreign_exchange-vanilla-options\&quot;            }        ]    } }
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mappingServiceListMappingRulesTest() throws ApiException {
        TitaniumListRequest body = null;
        TitaniumMappingRuleList response = api.mappingServiceListMappingRules(body);
        // TODO: test validations
    }

}
