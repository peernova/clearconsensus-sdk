/**
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TitaniumRange from './TitaniumRange';

/**
 * The TitaniumChartRanges model module.
 * @module model/TitaniumChartRanges
 * @version 1.0.0
 */
class TitaniumChartRanges {
    /**
     * Constructs a new <code>TitaniumChartRanges</code>.
     * @alias module:model/TitaniumChartRanges
     */
    constructor() { 
        
        TitaniumChartRanges.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TitaniumChartRanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TitaniumChartRanges} obj Optional instance to populate.
     * @return {module:model/TitaniumChartRanges} The populated <code>TitaniumChartRanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TitaniumChartRanges();

            if (data.hasOwnProperty('bimodalLeftPopulation')) {
                obj['bimodalLeftPopulation'] = TitaniumRange.constructFromObject(data['bimodalLeftPopulation']);
            }
            if (data.hasOwnProperty('bimodalRightPopulation')) {
                obj['bimodalRightPopulation'] = TitaniumRange.constructFromObject(data['bimodalRightPopulation']);
            }
            if (data.hasOwnProperty('cohortConsensus')) {
                obj['cohortConsensus'] = TitaniumRange.constructFromObject(data['cohortConsensus']);
            }
            if (data.hasOwnProperty('evp')) {
                obj['evp'] = TitaniumRange.constructFromObject(data['evp']);
            }
            if (data.hasOwnProperty('submissionEvidence')) {
                obj['submissionEvidence'] = TitaniumRange.constructFromObject(data['submissionEvidence']);
            }
            if (data.hasOwnProperty('submissionMinMax')) {
                obj['submissionMinMax'] = TitaniumRange.constructFromObject(data['submissionMinMax']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/TitaniumRange} bimodalLeftPopulation
 */
TitaniumChartRanges.prototype['bimodalLeftPopulation'] = undefined;

/**
 * @member {module:model/TitaniumRange} bimodalRightPopulation
 */
TitaniumChartRanges.prototype['bimodalRightPopulation'] = undefined;

/**
 * @member {module:model/TitaniumRange} cohortConsensus
 */
TitaniumChartRanges.prototype['cohortConsensus'] = undefined;

/**
 * @member {module:model/TitaniumRange} evp
 */
TitaniumChartRanges.prototype['evp'] = undefined;

/**
 * @member {module:model/TitaniumRange} submissionEvidence
 */
TitaniumChartRanges.prototype['submissionEvidence'] = undefined;

/**
 * @member {module:model/TitaniumRange} submissionMinMax
 */
TitaniumChartRanges.prototype['submissionMinMax'] = undefined;






export default TitaniumChartRanges;

