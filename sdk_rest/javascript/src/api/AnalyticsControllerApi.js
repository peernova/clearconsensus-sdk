/**
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RpcStatus from '../model/RpcStatus';
import TitaniumGenericChartMetadataDataQuality from '../model/TitaniumGenericChartMetadataDataQuality';
import TitaniumGenericChartMetadataDataQualityResponse from '../model/TitaniumGenericChartMetadataDataQualityResponse';
import TitaniumGetPredefinedFiltersResponse from '../model/TitaniumGetPredefinedFiltersResponse';
import TitaniumHistogramResponse from '../model/TitaniumHistogramResponse';

/**
* AnalyticsController service.
* @module api/AnalyticsControllerApi
* @version 1.0.0
*/
export default class AnalyticsControllerApi {

    /**
    * Constructs a new AnalyticsControllerApi. 
    * @alias module:api/AnalyticsControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the analyticsControllerFindConsensusAnalytics operation.
     * @callback module:api/AnalyticsControllerApi~analyticsControllerFindConsensusAnalyticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumGenericChartMetadataDataQualityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * FindConsensusAnalytics returns analytics related to specific consensus according to request.
     * @param {module:model/TitaniumGenericChartMetadataDataQuality} body 
     * @param {module:api/AnalyticsControllerApi~analyticsControllerFindConsensusAnalyticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumGenericChartMetadataDataQualityResponse}
     */
    analyticsControllerFindConsensusAnalytics(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling analyticsControllerFindConsensusAnalytics");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumGenericChartMetadataDataQualityResponse;
      return this.apiClient.callApi(
        '/api/v1/analytics/consensus/find', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsControllerFindDataQualityErrors operation.
     * @callback module:api/AnalyticsControllerApi~analyticsControllerFindDataQualityErrorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumGenericChartMetadataDataQualityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * FindDataQualityErrors returns data quality errors according to request.
     * @param {module:model/TitaniumGenericChartMetadataDataQuality} body 
     * @param {module:api/AnalyticsControllerApi~analyticsControllerFindDataQualityErrorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumGenericChartMetadataDataQualityResponse}
     */
    analyticsControllerFindDataQualityErrors(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling analyticsControllerFindDataQualityErrors");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumGenericChartMetadataDataQualityResponse;
      return this.apiClient.callApi(
        '/api/v1/analytics/data-quality-errors/find', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsControllerGetAllConsensusAnalytics operation.
     * @callback module:api/AnalyticsControllerApi~analyticsControllerGetAllConsensusAnalyticsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumGenericChartMetadataDataQualityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetAllConsensusAnalytics returns analytics related to all consensuses.
     * @param {module:api/AnalyticsControllerApi~analyticsControllerGetAllConsensusAnalyticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumGenericChartMetadataDataQualityResponse}
     */
    analyticsControllerGetAllConsensusAnalytics(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumGenericChartMetadataDataQualityResponse;
      return this.apiClient.callApi(
        '/api/v1/analytics/consensus/get-all', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsControllerGetAllDataQualityErrors operation.
     * @callback module:api/AnalyticsControllerApi~analyticsControllerGetAllDataQualityErrorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumGenericChartMetadataDataQualityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetAllDataQualityErrors returns all existing data quality errors in the system.
     * @param {module:api/AnalyticsControllerApi~analyticsControllerGetAllDataQualityErrorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumGenericChartMetadataDataQualityResponse}
     */
    analyticsControllerGetAllDataQualityErrors(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumGenericChartMetadataDataQualityResponse;
      return this.apiClient.callApi(
        '/api/v1/analytics/data-quality-errors/get-all', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsControllerGetHistogram operation.
     * @callback module:api/AnalyticsControllerApi~analyticsControllerGetHistogramCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumHistogramResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetHistogram returns analytics(submission and consensus) represented by histogram according to request.
     * @param {module:api/AnalyticsControllerApi~analyticsControllerGetHistogramCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumHistogramResponse}
     */
    analyticsControllerGetHistogram(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumHistogramResponse;
      return this.apiClient.callApi(
        '/api/v1/analytics/histogram/get-all', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyticsControllerGetPredefinedFilter operation.
     * @callback module:api/AnalyticsControllerApi~analyticsControllerGetPredefinedFilterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumGetPredefinedFiltersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetPredefinedFilter returns pre defined filters according to request.
     * @param {module:api/AnalyticsControllerApi~analyticsControllerGetPredefinedFilterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumGetPredefinedFiltersResponse}
     */
    analyticsControllerGetPredefinedFilter(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumGetPredefinedFiltersResponse;
      return this.apiClient.callApi(
        '/api/v1/analytics/predefined/filters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
