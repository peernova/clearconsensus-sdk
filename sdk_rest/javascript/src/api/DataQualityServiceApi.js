/**
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RpcStatus from '../model/RpcStatus';
import TitaniumDQErrorsRequest from '../model/TitaniumDQErrorsRequest';
import TitaniumDQErrorsResponse from '../model/TitaniumDQErrorsResponse';
import TitaniumGetDataQualityErrorsRequest from '../model/TitaniumGetDataQualityErrorsRequest';
import TitaniumGetDataQualityErrorsResponse from '../model/TitaniumGetDataQualityErrorsResponse';

/**
* DataQualityService service.
* @module api/DataQualityServiceApi
* @version 1.0.0
*/
export default class DataQualityServiceApi {

    /**
    * Constructs a new DataQualityServiceApi. 
    * @alias module:api/DataQualityServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dataQualityServiceDQErrors operation.
     * @callback module:api/DataQualityServiceApi~dataQualityServiceDQErrorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumDQErrorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/TitaniumDQErrorsRequest} body 
     * @param {module:api/DataQualityServiceApi~dataQualityServiceDQErrorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumDQErrorsResponse}
     */
    dataQualityServiceDQErrors(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling dataQualityServiceDQErrors");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumDQErrorsResponse;
      return this.apiClient.callApi(
        '/api/v1/dqerrors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dataQualityServiceGetDataQualityErrors operation.
     * @callback module:api/DataQualityServiceApi~dataQualityServiceGetDataQualityErrorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumGetDataQualityErrorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/TitaniumGetDataQualityErrorsRequest} body 
     * @param {module:api/DataQualityServiceApi~dataQualityServiceGetDataQualityErrorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumGetDataQualityErrorsResponse}
     */
    dataQualityServiceGetDataQualityErrors(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling dataQualityServiceGetDataQualityErrors");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumGetDataQualityErrorsResponse;
      return this.apiClient.callApi(
        '/api/v1/data-quality-errors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
