/**
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ProtoGroupPolicies from '../model/ProtoGroupPolicies';
import ProtoGroupPoliciesResponse from '../model/ProtoGroupPoliciesResponse';
import ProtoOperationSuccess from '../model/ProtoOperationSuccess';
import ProtoPolicyType from '../model/ProtoPolicyType';
import RpcStatus from '../model/RpcStatus';

/**
* GroupPolicyService service.
* @module api/GroupPolicyServiceApi
* @version 1.0.0
*/
export default class GroupPolicyServiceApi {

    /**
    * Constructs a new GroupPolicyServiceApi. 
    * @alias module:api/GroupPolicyServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the groupPolicyServiceCreate operation.
     * @callback module:api/GroupPolicyServiceApi~groupPolicyServiceCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProtoOperationSuccess} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/ProtoGroupPolicies} body 
     * @param {module:api/GroupPolicyServiceApi~groupPolicyServiceCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProtoOperationSuccess}
     */
    groupPolicyServiceCreate(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling groupPolicyServiceCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ProtoOperationSuccess;
      return this.apiClient.callApi(
        '/api/v1/user-management/group-policies/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the groupPolicyServiceGetPolicies operation.
     * @callback module:api/GroupPolicyServiceApi~groupPolicyServiceGetPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProtoGroupPoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/ProtoPolicyType} body 
     * @param {module:api/GroupPolicyServiceApi~groupPolicyServiceGetPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProtoGroupPoliciesResponse}
     */
    groupPolicyServiceGetPolicies(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling groupPolicyServiceGetPolicies");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ProtoGroupPoliciesResponse;
      return this.apiClient.callApi(
        '/api/v1/user-management/group-policies/getPolicies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
