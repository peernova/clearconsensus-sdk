/**
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RpcStatus from '../model/RpcStatus';
import TitaniumConsensusActiveResponse from '../model/TitaniumConsensusActiveResponse';
import TitaniumConsensusExplorerInstrumentDetailsResponse from '../model/TitaniumConsensusExplorerInstrumentDetailsResponse';
import TitaniumConsensusExplorerRangeResponse from '../model/TitaniumConsensusExplorerRangeResponse';
import TitaniumConsensusExplorerTableResponse from '../model/TitaniumConsensusExplorerTableResponse';
import TitaniumConsensusRequest from '../model/TitaniumConsensusRequest';
import TitaniumConsensusResponse from '../model/TitaniumConsensusResponse';
import TitaniumConsensusResultSetValuesRequest from '../model/TitaniumConsensusResultSetValuesRequest';
import TitaniumConsensusResultSetValuesResponse from '../model/TitaniumConsensusResultSetValuesResponse';
import TitaniumConsensusTimestampsRequest from '../model/TitaniumConsensusTimestampsRequest';
import TitaniumConsensusTimestampsResponse from '../model/TitaniumConsensusTimestampsResponse';
import TitaniumEVPRequest from '../model/TitaniumEVPRequest';
import TitaniumEVPResponse from '../model/TitaniumEVPResponse';
import TitaniumGetConsensusRunsRequest from '../model/TitaniumGetConsensusRunsRequest';
import TitaniumGetConsensusRunsResponse from '../model/TitaniumGetConsensusRunsResponse';
import TitaniumOutliersListRequest from '../model/TitaniumOutliersListRequest';

/**
* ConsensusService service.
* @module api/ConsensusServiceApi
* @version 1.0.0
*/
export default class ConsensusServiceApi {

    /**
    * Constructs a new ConsensusServiceApi. 
    * @alias module:api/ConsensusServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the consensusServiceConsensus operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceConsensusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumConsensusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Consensus return information about consensus according to request. Need to specify consensus run timestamp, asset ID and etc.(See ConsensusRequest definition) Returns ConsensusResponse that contains information about column and rows related to consensus.
     * This is a test of a different commenting type: Below we will be shown a placeholder for the Consensus RPC request. *sample input**  >`{`<br> >`   \"asset_id\": \"238917-2131-341ff\",`<br> >`   \"trace_name\": \"placeholder value\",`<br> >`   \"submitted_date\": \"238472301213\"`<br> >`}`
     * @param {module:model/TitaniumConsensusRequest} body 
     * @param {module:api/ConsensusServiceApi~consensusServiceConsensusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumConsensusResponse}
     */
    consensusServiceConsensus(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling consensusServiceConsensus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumConsensusResponse;
      return this.apiClient.callApi(
        '/api/v1/consensus', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceConsensusExplorerInstrumentDetails operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceConsensusExplorerInstrumentDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumConsensusExplorerInstrumentDetailsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ConsensusServiceApi~consensusServiceConsensusExplorerInstrumentDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumConsensusExplorerInstrumentDetailsResponse}
     */
    consensusServiceConsensusExplorerInstrumentDetails(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumConsensusExplorerInstrumentDetailsResponse;
      return this.apiClient.callApi(
        '/api/v1/consensus-explorer/details', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceConsensusExplorerRanges operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceConsensusExplorerRangesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumConsensusExplorerRangeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ConsensusServiceApi~consensusServiceConsensusExplorerRangesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumConsensusExplorerRangeResponse}
     */
    consensusServiceConsensusExplorerRanges(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumConsensusExplorerRangeResponse;
      return this.apiClient.callApi(
        '/api/v1/consensus-explorer/range', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceConsensusExplorerTable operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceConsensusExplorerTableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumConsensusExplorerTableResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ConsensusServiceApi~consensusServiceConsensusExplorerTableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumConsensusExplorerTableResponse}
     */
    consensusServiceConsensusExplorerTable(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumConsensusExplorerTableResponse;
      return this.apiClient.callApi(
        '/api/v1/consensus-explorer/table', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceConsensusOutliers operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceConsensusOutliersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumConsensusActiveResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ConsensusOutliers return list of outliers according to specified consensus. Need to identify consensus tun timestamp and etc.(Described in OutliersListRequest) Return ConsensusActiveResponse that contains active consensuses with specified run timestamp.
     * @param {module:model/TitaniumOutliersListRequest} body 
     * @param {module:api/ConsensusServiceApi~consensusServiceConsensusOutliersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumConsensusActiveResponse}
     */
    consensusServiceConsensusOutliers(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling consensusServiceConsensusOutliers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumConsensusActiveResponse;
      return this.apiClient.callApi(
        '/api/v1/outliers-list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceConsensusResultSetValues operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceConsensusResultSetValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumConsensusResultSetValuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/TitaniumConsensusResultSetValuesRequest} body 
     * @param {module:api/ConsensusServiceApi~consensusServiceConsensusResultSetValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumConsensusResultSetValuesResponse}
     */
    consensusServiceConsensusResultSetValues(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling consensusServiceConsensusResultSetValues");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumConsensusResultSetValuesResponse;
      return this.apiClient.callApi(
        '/api/v1/consensus-result-set-view', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceConsensusTimestamps operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceConsensusTimestampsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumConsensusTimestampsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ConsensusTimestamps returns timestamps when it was submitted. Need to specify asset ID and trace name. Returns ConsensusTimestampsResponse that contains all the timestamps related to specified asset ID.
     * This is a test to see how detailed we can make a RPC method's documentation using this commenting type: Below we will be shown sample input for the ConsensusTimestamps endpoint. **sample input**  >`{`<br> >`   \"asset_id\": \"238917-2131-341ff\",`<br> >`   \"trace_name\": \"placeholder value\"`<br> >`}`
     * @param {module:model/TitaniumConsensusTimestampsRequest} body 
     * @param {module:api/ConsensusServiceApi~consensusServiceConsensusTimestampsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumConsensusTimestampsResponse}
     */
    consensusServiceConsensusTimestamps(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling consensusServiceConsensusTimestamps");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumConsensusTimestampsResponse;
      return this.apiClient.callApi(
        '/api/v1/consensus/timestamps', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceEvaluatedPrice operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceEvaluatedPriceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumEVPResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/TitaniumEVPRequest} body 
     * @param {module:api/ConsensusServiceApi~consensusServiceEvaluatedPriceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumEVPResponse}
     */
    consensusServiceEvaluatedPrice(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling consensusServiceEvaluatedPrice");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumEVPResponse;
      return this.apiClient.callApi(
        '/api/v1/evaluated-price', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the consensusServiceGetConsensusRuns operation.
     * @callback module:api/ConsensusServiceApi~consensusServiceGetConsensusRunsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TitaniumGetConsensusRunsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Consensus Run's consensus result sets
     * @param {module:model/TitaniumGetConsensusRunsRequest} body 
     * @param {module:api/ConsensusServiceApi~consensusServiceGetConsensusRunsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TitaniumGetConsensusRunsResponse}
     */
    consensusServiceGetConsensusRuns(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling consensusServiceGetConsensusRuns");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = TitaniumGetConsensusRunsResponse;
      return this.apiClient.callApi(
        '/api/v1/consensus-runs-view', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
