/**
 * clearconsensus-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClearconsensusSdk);
  }
}(this, function(expect, ClearconsensusSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClearconsensusSdk.OperatorServicePrivateApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OperatorServicePrivateApi', function() {
    describe('operatorServicePrivateAddAsset', function() {
      it('should call operatorServicePrivateAddAsset successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateAddAsset
        //instance.operatorServicePrivateAddAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateAddClient', function() {
      it('should call operatorServicePrivateAddClient successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateAddClient
        //instance.operatorServicePrivateAddClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateAddSupportedFields', function() {
      it('should call operatorServicePrivateAddSupportedFields successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateAddSupportedFields
        //instance.operatorServicePrivateAddSupportedFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateAssets', function() {
      it('should call operatorServicePrivateAssets successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateAssets
        //instance.operatorServicePrivateAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateCreateSupportedFields', function() {
      it('should call operatorServicePrivateCreateSupportedFields successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateCreateSupportedFields
        //instance.operatorServicePrivateCreateSupportedFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateDeleteSupportedFields', function() {
      it('should call operatorServicePrivateDeleteSupportedFields successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateDeleteSupportedFields
        //instance.operatorServicePrivateDeleteSupportedFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateEvpStatuses', function() {
      it('should call operatorServicePrivateEvpStatuses successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateEvpStatuses
        //instance.operatorServicePrivateEvpStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateExportReport', function() {
      it('should call operatorServicePrivateExportReport successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateExportReport
        //instance.operatorServicePrivateExportReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateListClients', function() {
      it('should call operatorServicePrivateListClients successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateListClients
        //instance.operatorServicePrivateListClients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateOperatorOutliers', function() {
      it('should call operatorServicePrivateOperatorOutliers successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateOperatorOutliers
        //instance.operatorServicePrivateOperatorOutliers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateOutliers', function() {
      it('should call operatorServicePrivateOutliers successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateOutliers
        //instance.operatorServicePrivateOutliers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateRecentAssets', function() {
      it('should call operatorServicePrivateRecentAssets successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateRecentAssets
        //instance.operatorServicePrivateRecentAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateUploadDTCC', function() {
      it('should call operatorServicePrivateUploadDTCC successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateUploadDTCC
        //instance.operatorServicePrivateUploadDTCC(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('operatorServicePrivateUploadEVP', function() {
      it('should call operatorServicePrivateUploadEVP successfully', function(done) {
        //uncomment below and update the code to test operatorServicePrivateUploadEVP
        //instance.operatorServicePrivateUploadEVP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
