/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: common/normalization.proto

import * as jspb from "google-protobuf";
import * as common_gateway_base_pb from "../common/gateway_base_pb";

export class NormalizationRuleDefinition extends jspb.Message {
  getUid(): string;
  setUid(value: string): void;

  getDescriptorName(): string;
  setDescriptorName(value: string): void;

  clearTransformationsList(): void;
  getTransformationsList(): Array<common_gateway_base_pb.Transformation>;
  setTransformationsList(value: Array<common_gateway_base_pb.Transformation>): void;
  addTransformations(value?: common_gateway_base_pb.Transformation, index?: number): common_gateway_base_pb.Transformation;

  getScope(): string;
  setScope(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): NormalizationRuleDefinition.AsObject;
  static toObject(includeInstance: boolean, msg: NormalizationRuleDefinition): NormalizationRuleDefinition.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: NormalizationRuleDefinition, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): NormalizationRuleDefinition;
  static deserializeBinaryFromReader(message: NormalizationRuleDefinition, reader: jspb.BinaryReader): NormalizationRuleDefinition;
}

export namespace NormalizationRuleDefinition {
  export type AsObject = {
    uid: string,
    descriptorName: string,
    transformationsList: Array<common_gateway_base_pb.Transformation.AsObject>,
    scope: string,
  }
}

export class NormalizationRuleResponse extends jspb.Message {
  hasData(): boolean;
  clearData(): void;
  getData(): NormalizationRuleDefinition | undefined;
  setData(value?: NormalizationRuleDefinition): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  getResponseCase(): NormalizationRuleResponse.ResponseCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): NormalizationRuleResponse.AsObject;
  static toObject(includeInstance: boolean, msg: NormalizationRuleResponse): NormalizationRuleResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: NormalizationRuleResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): NormalizationRuleResponse;
  static deserializeBinaryFromReader(message: NormalizationRuleResponse, reader: jspb.BinaryReader): NormalizationRuleResponse;
}

export namespace NormalizationRuleResponse {
  export type AsObject = {
    data?: NormalizationRuleDefinition.AsObject,
    error?: common_gateway_base_pb.Error.AsObject,
  }

  export enum ResponseCase {
    RESPONSE_NOT_SET = 0,
    DATA = 1,
    ERROR = 2,
  }
}

