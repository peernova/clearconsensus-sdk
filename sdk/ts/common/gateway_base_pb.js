/* eslint-disable */
/*Generated by GenDocu.com*/
// source: common/gateway_base.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.titanium.AcknowledgeResponse', null, global);
goog.exportSymbol('proto.titanium.AcknowledgeResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.BenchmarkMetadata', null, global);
goog.exportSymbol('proto.titanium.ColumnInfo', null, global);
goog.exportSymbol('proto.titanium.ConsensusActiveResponse', null, global);
goog.exportSymbol('proto.titanium.ConsensusActiveResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ConsensusDetail', null, global);
goog.exportSymbol('proto.titanium.ConsensusResultSetInfo', null, global);
goog.exportSymbol('proto.titanium.ConsensusRunInfo', null, global);
goog.exportSymbol('proto.titanium.CriteriaDefinition', null, global);
goog.exportSymbol('proto.titanium.DataQualityError', null, global);
goog.exportSymbol('proto.titanium.DataQualityErrors', null, global);
goog.exportSymbol('proto.titanium.Decision', null, global);
goog.exportSymbol('proto.titanium.DescriptorBasedIdentifier', null, global);
goog.exportSymbol('proto.titanium.DescriptorBasedResultsList', null, global);
goog.exportSymbol('proto.titanium.DescriptorDefinition', null, global);
goog.exportSymbol('proto.titanium.DescriptorField', null, global);
goog.exportSymbol('proto.titanium.DynamicLut', null, global);
goog.exportSymbol('proto.titanium.DynamicLut.DynamicLutType', null, global);
goog.exportSymbol('proto.titanium.EnableDisableRequest', null, global);
goog.exportSymbol('proto.titanium.EntityDefinition', null, global);
goog.exportSymbol('proto.titanium.EntityIdentifier', null, global);
goog.exportSymbol('proto.titanium.EntityType', null, global);
goog.exportSymbol('proto.titanium.Error', null, global);
goog.exportSymbol('proto.titanium.ErrorDefinition', null, global);
goog.exportSymbol('proto.titanium.Fields', null, global);
goog.exportSymbol('proto.titanium.Filter', null, global);
goog.exportSymbol('proto.titanium.FilterPack', null, global);
goog.exportSymbol('proto.titanium.GenericChartResponse', null, global);
goog.exportSymbol('proto.titanium.GenericChartResponseRow', null, global);
goog.exportSymbol('proto.titanium.GetDefinition', null, global);
goog.exportSymbol('proto.titanium.Identifier', null, global);
goog.exportSymbol('proto.titanium.KeyAndValue', null, global);
goog.exportSymbol('proto.titanium.Limit', null, global);
goog.exportSymbol('proto.titanium.ListOfKeys', null, global);
goog.exportSymbol('proto.titanium.ListRequest', null, global);
goog.exportSymbol('proto.titanium.ListRuleResponse', null, global);
goog.exportSymbol('proto.titanium.ListRuleResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ListVersionResponse', null, global);
goog.exportSymbol('proto.titanium.ListVersionResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.MessageResponse', null, global);
goog.exportSymbol('proto.titanium.MessageResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.MessageResponseData', null, global);
goog.exportSymbol('proto.titanium.NameAliasPair', null, global);
goog.exportSymbol('proto.titanium.Order', null, global);
goog.exportSymbol('proto.titanium.OrderBy', null, global);
goog.exportSymbol('proto.titanium.OutlierMetadata', null, global);
goog.exportSymbol('proto.titanium.OutliersListRequest', null, global);
goog.exportSymbol('proto.titanium.Page', null, global);
goog.exportSymbol('proto.titanium.PredefinedFilter', null, global);
goog.exportSymbol('proto.titanium.Range', null, global);
goog.exportSymbol('proto.titanium.RangePoint', null, global);
goog.exportSymbol('proto.titanium.ResponseData', null, global);
goog.exportSymbol('proto.titanium.ResultsList', null, global);
goog.exportSymbol('proto.titanium.RuleDefinition', null, global);
goog.exportSymbol('proto.titanium.RuleDefinition.RuleType', null, global);
goog.exportSymbol('proto.titanium.RulesetDefinition', null, global);
goog.exportSymbol('proto.titanium.StatusResponse', null, global);
goog.exportSymbol('proto.titanium.StatusResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.StatusResponseData', null, global);
goog.exportSymbol('proto.titanium.StringKeyVal', null, global);
goog.exportSymbol('proto.titanium.Transformation', null, global);
goog.exportSymbol('proto.titanium.UploadURLResponse', null, global);
goog.exportSymbol('proto.titanium.Values', null, global);
goog.exportSymbol('proto.titanium.ValuesRow', null, global);
goog.exportSymbol('proto.titanium.Version', null, global);
goog.exportSymbol('proto.titanium.VersionList', null, global);
goog.exportSymbol('proto.titanium.VersionRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Error.displayName = 'proto.titanium.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.RangePoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.RangePoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.RangePoint.displayName = 'proto.titanium.RangePoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Identifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Identifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Identifier.displayName = 'proto.titanium.Identifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.GetDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetDefinition.displayName = 'proto.titanium.GetDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Limit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Limit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Limit.displayName = 'proto.titanium.Limit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.OrderBy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.OrderBy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.OrderBy.displayName = 'proto.titanium.OrderBy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ListRequest.displayName = 'proto.titanium.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.AcknowledgeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.AcknowledgeResponse.oneofGroups_);
};
goog.inherits(proto.titanium.AcknowledgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.AcknowledgeResponse.displayName = 'proto.titanium.AcknowledgeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Version = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Version, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Version.displayName = 'proto.titanium.Version';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.VersionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.VersionList.repeatedFields_, null);
};
goog.inherits(proto.titanium.VersionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.VersionList.displayName = 'proto.titanium.VersionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ListVersionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ListVersionResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ListVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ListVersionResponse.displayName = 'proto.titanium.ListVersionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.VersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.VersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.VersionRequest.displayName = 'proto.titanium.VersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.DescriptorField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorField.displayName = 'proto.titanium.DescriptorField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.DescriptorDefinition.repeatedFields_, null);
};
goog.inherits(proto.titanium.DescriptorDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorDefinition.displayName = 'proto.titanium.DescriptorDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.MessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.MessageResponse.oneofGroups_);
};
goog.inherits(proto.titanium.MessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.MessageResponse.displayName = 'proto.titanium.MessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.MessageResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.MessageResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.MessageResponseData.displayName = 'proto.titanium.MessageResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Transformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Transformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Transformation.displayName = 'proto.titanium.Transformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ResultsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ResultsList.repeatedFields_, null);
};
goog.inherits(proto.titanium.ResultsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ResultsList.displayName = 'proto.titanium.ResultsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ColumnInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ColumnInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ColumnInfo.displayName = 'proto.titanium.ColumnInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ListRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ListRuleResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ListRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ListRuleResponse.displayName = 'proto.titanium.ListRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorBasedResultsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.DescriptorBasedResultsList.repeatedFields_, null);
};
goog.inherits(proto.titanium.DescriptorBasedResultsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorBasedResultsList.displayName = 'proto.titanium.DescriptorBasedResultsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorBasedIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.DescriptorBasedIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorBasedIdentifier.displayName = 'proto.titanium.DescriptorBasedIdentifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ValuesRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ValuesRow.repeatedFields_, null);
};
goog.inherits(proto.titanium.ValuesRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ValuesRow.displayName = 'proto.titanium.ValuesRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ResponseData.repeatedFields_, null);
};
goog.inherits(proto.titanium.ResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ResponseData.displayName = 'proto.titanium.ResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.StatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.StatusResponse.oneofGroups_);
};
goog.inherits(proto.titanium.StatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.StatusResponse.displayName = 'proto.titanium.StatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.StatusResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.StatusResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.StatusResponseData.displayName = 'proto.titanium.StatusResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ConsensusActiveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ConsensusActiveResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ConsensusActiveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ConsensusActiveResponse.displayName = 'proto.titanium.ConsensusActiveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DataQualityError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.DataQualityError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DataQualityError.displayName = 'proto.titanium.DataQualityError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ConsensusDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ConsensusDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ConsensusDetail.displayName = 'proto.titanium.ConsensusDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DataQualityErrors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.DataQualityErrors.repeatedFields_, null);
};
goog.inherits(proto.titanium.DataQualityErrors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DataQualityErrors.displayName = 'proto.titanium.DataQualityErrors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.StringKeyVal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.StringKeyVal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.StringKeyVal.displayName = 'proto.titanium.StringKeyVal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.BenchmarkMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.BenchmarkMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.BenchmarkMetadata.displayName = 'proto.titanium.BenchmarkMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.OutlierMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.OutlierMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.OutlierMetadata.displayName = 'proto.titanium.OutlierMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Fields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.Fields.repeatedFields_, null);
};
goog.inherits(proto.titanium.Fields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Fields.displayName = 'proto.titanium.Fields';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Values = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.Values.repeatedFields_, null);
};
goog.inherits(proto.titanium.Values, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Values.displayName = 'proto.titanium.Values';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.UploadURLResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.UploadURLResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.UploadURLResponse.displayName = 'proto.titanium.UploadURLResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Filter.displayName = 'proto.titanium.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.PredefinedFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.PredefinedFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.PredefinedFilter.displayName = 'proto.titanium.PredefinedFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.NameAliasPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.NameAliasPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.NameAliasPair.displayName = 'proto.titanium.NameAliasPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GenericChartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.GenericChartResponse.repeatedFields_, null);
};
goog.inherits(proto.titanium.GenericChartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GenericChartResponse.displayName = 'proto.titanium.GenericChartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GenericChartResponseRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.GenericChartResponseRow.repeatedFields_, null);
};
goog.inherits(proto.titanium.GenericChartResponseRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GenericChartResponseRow.displayName = 'proto.titanium.GenericChartResponseRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.EnableDisableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.EnableDisableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.EnableDisableRequest.displayName = 'proto.titanium.EnableDisableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.OutliersListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.OutliersListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.OutliersListRequest.displayName = 'proto.titanium.OutliersListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.RulesetDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.RulesetDefinition.repeatedFields_, null);
};
goog.inherits(proto.titanium.RulesetDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.RulesetDefinition.displayName = 'proto.titanium.RulesetDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.CriteriaDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.CriteriaDefinition.repeatedFields_, null);
};
goog.inherits(proto.titanium.CriteriaDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.CriteriaDefinition.displayName = 'proto.titanium.CriteriaDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.RuleDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.RuleDefinition.repeatedFields_, null);
};
goog.inherits(proto.titanium.RuleDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.RuleDefinition.displayName = 'proto.titanium.RuleDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ErrorDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ErrorDefinition.repeatedFields_, null);
};
goog.inherits(proto.titanium.ErrorDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ErrorDefinition.displayName = 'proto.titanium.ErrorDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DynamicLut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.DynamicLut.repeatedFields_, null);
};
goog.inherits(proto.titanium.DynamicLut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DynamicLut.displayName = 'proto.titanium.DynamicLut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.FilterPack = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.FilterPack.repeatedFields_, null);
};
goog.inherits(proto.titanium.FilterPack, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.FilterPack.displayName = 'proto.titanium.FilterPack';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ConsensusRunInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ConsensusRunInfo.repeatedFields_, null);
};
goog.inherits(proto.titanium.ConsensusRunInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ConsensusRunInfo.displayName = 'proto.titanium.ConsensusRunInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ConsensusResultSetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ConsensusResultSetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ConsensusResultSetInfo.displayName = 'proto.titanium.ConsensusResultSetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Page = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Page, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Page.displayName = 'proto.titanium.Page';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.EntityDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.EntityDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.EntityDefinition.displayName = 'proto.titanium.EntityDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.EntityIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.EntityIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.EntityIdentifier.displayName = 'proto.titanium.EntityIdentifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ListOfKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ListOfKeys.repeatedFields_, null);
};
goog.inherits(proto.titanium.ListOfKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ListOfKeys.displayName = 'proto.titanium.ListOfKeys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.KeyAndValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.KeyAndValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.KeyAndValue.displayName = 'proto.titanium.KeyAndValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Range.displayName = 'proto.titanium.Range';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Error}
 */
proto.titanium.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Error;
  return proto.titanium.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Error}
 */
proto.titanium.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.titanium.Error.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.Error} returns this
 */
proto.titanium.Error.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.titanium.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Error} returns this
 */
proto.titanium.Error.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.RangePoint.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.RangePoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.RangePoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.RangePoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.RangePoint}
 */
proto.titanium.RangePoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.RangePoint;
  return proto.titanium.RangePoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.RangePoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.RangePoint}
 */
proto.titanium.RangePoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.RangePoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.RangePoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.RangePoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.RangePoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.titanium.RangePoint.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.RangePoint} returns this
 */
proto.titanium.RangePoint.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Value value = 2;
 * @return {?proto.google.protobuf.Value}
 */
proto.titanium.RangePoint.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 2));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.titanium.RangePoint} returns this
*/
proto.titanium.RangePoint.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.RangePoint} returns this
 */
proto.titanium.RangePoint.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.RangePoint.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Identifier.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Identifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Identifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Identifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Identifier}
 */
proto.titanium.Identifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Identifier;
  return proto.titanium.Identifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Identifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Identifier}
 */
proto.titanium.Identifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Identifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Identifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Identifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Identifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.titanium.Identifier.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Identifier} returns this
 */
proto.titanium.Identifier.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.titanium.Identifier.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Identifier} returns this
 */
proto.titanium.Identifier.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && proto.titanium.Identifier.toObject(includeInstance, f),
    scope: jspb.Message.getFieldWithDefault(msg, 2, ""),
    descriptorName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetDefinition}
 */
proto.titanium.GetDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetDefinition;
  return proto.titanium.GetDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetDefinition}
 */
proto.titanium.GetDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.Identifier;
      reader.readMessage(value,proto.titanium.Identifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescriptorName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Identifier identifier = 1;
 * @return {?proto.titanium.Identifier}
 */
proto.titanium.GetDefinition.prototype.getIdentifier = function() {
  return /** @type{?proto.titanium.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Identifier, 1));
};


/**
 * @param {?proto.titanium.Identifier|undefined} value
 * @return {!proto.titanium.GetDefinition} returns this
*/
proto.titanium.GetDefinition.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetDefinition} returns this
 */
proto.titanium.GetDefinition.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetDefinition.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string scope = 2;
 * @return {string}
 */
proto.titanium.GetDefinition.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetDefinition} returns this
 */
proto.titanium.GetDefinition.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string descriptor_name = 3;
 * @return {string}
 */
proto.titanium.GetDefinition.prototype.getDescriptorName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetDefinition} returns this
 */
proto.titanium.GetDefinition.prototype.setDescriptorName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Limit.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Limit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Limit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Limit.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Limit}
 */
proto.titanium.Limit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Limit;
  return proto.titanium.Limit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Limit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Limit}
 */
proto.titanium.Limit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Limit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Limit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Limit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Limit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.titanium.Limit.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.Limit} returns this
 */
proto.titanium.Limit.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.OrderBy.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.OrderBy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.OrderBy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.OrderBy.toObject = function(includeInstance, msg) {
  var f, obj = {
    column: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.OrderBy}
 */
proto.titanium.OrderBy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.OrderBy;
  return proto.titanium.OrderBy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.OrderBy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.OrderBy}
 */
proto.titanium.OrderBy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumn(value);
      break;
    case 2:
      var value = /** @type {!proto.titanium.Order} */ (reader.readEnum());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.OrderBy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.OrderBy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.OrderBy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.OrderBy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string column = 1;
 * @return {string}
 */
proto.titanium.OrderBy.prototype.getColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OrderBy} returns this
 */
proto.titanium.OrderBy.prototype.setColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Order order = 2;
 * @return {!proto.titanium.Order}
 */
proto.titanium.OrderBy.prototype.getOrder = function() {
  return /** @type {!proto.titanium.Order} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.titanium.Order} value
 * @return {!proto.titanium.OrderBy} returns this
 */
proto.titanium.OrderBy.prototype.setOrder = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scope: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderby: (f = msg.getOrderby()) && proto.titanium.OrderBy.toObject(includeInstance, f),
    limit: (f = msg.getLimit()) && proto.titanium.Limit.toObject(includeInstance, f),
    offset: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ListRequest}
 */
proto.titanium.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ListRequest;
  return proto.titanium.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ListRequest}
 */
proto.titanium.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 3:
      var value = new proto.titanium.OrderBy;
      reader.readMessage(value,proto.titanium.OrderBy.deserializeBinaryFromReader);
      msg.setOrderby(value);
      break;
    case 4:
      var value = new proto.titanium.Limit;
      reader.readMessage(value,proto.titanium.Limit.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderby();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.titanium.OrderBy.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.titanium.Limit.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string scope = 1;
 * @return {string}
 */
proto.titanium.ListRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ListRequest} returns this
 */
proto.titanium.ListRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string filter = 2;
 * @return {string}
 */
proto.titanium.ListRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ListRequest} returns this
 */
proto.titanium.ListRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OrderBy orderBy = 3;
 * @return {?proto.titanium.OrderBy}
 */
proto.titanium.ListRequest.prototype.getOrderby = function() {
  return /** @type{?proto.titanium.OrderBy} */ (
    jspb.Message.getWrapperField(this, proto.titanium.OrderBy, 3));
};


/**
 * @param {?proto.titanium.OrderBy|undefined} value
 * @return {!proto.titanium.ListRequest} returns this
*/
proto.titanium.ListRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListRequest} returns this
 */
proto.titanium.ListRequest.prototype.clearOrderby = function() {
  return this.setOrderby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListRequest.prototype.hasOrderby = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Limit limit = 4;
 * @return {?proto.titanium.Limit}
 */
proto.titanium.ListRequest.prototype.getLimit = function() {
  return /** @type{?proto.titanium.Limit} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Limit, 4));
};


/**
 * @param {?proto.titanium.Limit|undefined} value
 * @return {!proto.titanium.ListRequest} returns this
*/
proto.titanium.ListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListRequest} returns this
 */
proto.titanium.ListRequest.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 offset = 5;
 * @return {number}
 */
proto.titanium.ListRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ListRequest} returns this
 */
proto.titanium.ListRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.AcknowledgeResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.AcknowledgeResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.AcknowledgeResponse.ResponseCase}
 */
proto.titanium.AcknowledgeResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.AcknowledgeResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.AcknowledgeResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.AcknowledgeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.AcknowledgeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.AcknowledgeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.AcknowledgeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.Identifier.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.titanium.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.AcknowledgeResponse}
 */
proto.titanium.AcknowledgeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.AcknowledgeResponse;
  return proto.titanium.AcknowledgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.AcknowledgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.AcknowledgeResponse}
 */
proto.titanium.AcknowledgeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.Identifier;
      reader.readMessage(value,proto.titanium.Identifier.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.titanium.Error;
      reader.readMessage(value,proto.titanium.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.AcknowledgeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.AcknowledgeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.AcknowledgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.AcknowledgeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional Identifier data = 1;
 * @return {?proto.titanium.Identifier}
 */
proto.titanium.AcknowledgeResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Identifier, 1));
};


/**
 * @param {?proto.titanium.Identifier|undefined} value
 * @return {!proto.titanium.AcknowledgeResponse} returns this
*/
proto.titanium.AcknowledgeResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.AcknowledgeResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.AcknowledgeResponse} returns this
 */
proto.titanium.AcknowledgeResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.AcknowledgeResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.AcknowledgeResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.AcknowledgeResponse} returns this
*/
proto.titanium.AcknowledgeResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.AcknowledgeResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.AcknowledgeResponse} returns this
 */
proto.titanium.AcknowledgeResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.AcknowledgeResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Version.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Version.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Version} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Version.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Version}
 */
proto.titanium.Version.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Version;
  return proto.titanium.Version.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Version} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Version}
 */
proto.titanium.Version.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Version.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Version.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Version} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Version.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string version_id = 1;
 * @return {string}
 */
proto.titanium.Version.prototype.getVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Version} returns this
 */
proto.titanium.Version.prototype.setVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string created_at = 2;
 * @return {string}
 */
proto.titanium.Version.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Version} returns this
 */
proto.titanium.Version.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.VersionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.VersionList.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.VersionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.VersionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.VersionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionsList: jspb.Message.toObjectList(msg.getVersionsList(),
    proto.titanium.Version.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.VersionList}
 */
proto.titanium.VersionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.VersionList;
  return proto.titanium.VersionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.VersionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.VersionList}
 */
proto.titanium.VersionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.Version;
      reader.readMessage(value,proto.titanium.Version.deserializeBinaryFromReader);
      msg.addVersions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.VersionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.VersionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.VersionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.VersionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.Version.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Version versions = 1;
 * @return {!Array<!proto.titanium.Version>}
 */
proto.titanium.VersionList.prototype.getVersionsList = function() {
  return /** @type{!Array<!proto.titanium.Version>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.Version, 1));
};


/**
 * @param {!Array<!proto.titanium.Version>} value
 * @return {!proto.titanium.VersionList} returns this
*/
proto.titanium.VersionList.prototype.setVersionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.Version=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.Version}
 */
proto.titanium.VersionList.prototype.addVersions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.Version, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.VersionList} returns this
 */
proto.titanium.VersionList.prototype.clearVersionsList = function() {
  return this.setVersionsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ListVersionResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ListVersionResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ListVersionResponse.ResponseCase}
 */
proto.titanium.ListVersionResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ListVersionResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ListVersionResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ListVersionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ListVersionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ListVersionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListVersionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.VersionList.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.titanium.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ListVersionResponse}
 */
proto.titanium.ListVersionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ListVersionResponse;
  return proto.titanium.ListVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ListVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ListVersionResponse}
 */
proto.titanium.ListVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.VersionList;
      reader.readMessage(value,proto.titanium.VersionList.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.titanium.Error;
      reader.readMessage(value,proto.titanium.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ListVersionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ListVersionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ListVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListVersionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.VersionList.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional VersionList data = 1;
 * @return {?proto.titanium.VersionList}
 */
proto.titanium.ListVersionResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.VersionList} */ (
    jspb.Message.getWrapperField(this, proto.titanium.VersionList, 1));
};


/**
 * @param {?proto.titanium.VersionList|undefined} value
 * @return {!proto.titanium.ListVersionResponse} returns this
*/
proto.titanium.ListVersionResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ListVersionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListVersionResponse} returns this
 */
proto.titanium.ListVersionResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListVersionResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ListVersionResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ListVersionResponse} returns this
*/
proto.titanium.ListVersionResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ListVersionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListVersionResponse} returns this
 */
proto.titanium.ListVersionResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListVersionResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.VersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.VersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.VersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.VersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    versionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 3, ""),
    descriptorName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.VersionRequest}
 */
proto.titanium.VersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.VersionRequest;
  return proto.titanium.VersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.VersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.VersionRequest}
 */
proto.titanium.VersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.VersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.VersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.VersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.VersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescriptorName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.VersionRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.VersionRequest} returns this
 */
proto.titanium.VersionRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version_id = 2;
 * @return {string}
 */
proto.titanium.VersionRequest.prototype.getVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.VersionRequest} returns this
 */
proto.titanium.VersionRequest.prototype.setVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string scope = 3;
 * @return {string}
 */
proto.titanium.VersionRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.VersionRequest} returns this
 */
proto.titanium.VersionRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string descriptor_name = 4;
 * @return {string}
 */
proto.titanium.VersionRequest.prototype.getDescriptorName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.VersionRequest} returns this
 */
proto.titanium.VersionRequest.prototype.setDescriptorName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorField.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorField.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    nullable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    alias: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorField}
 */
proto.titanium.DescriptorField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorField;
  return proto.titanium.DescriptorField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorField}
 */
proto.titanium.DescriptorField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNullable(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getNullable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.DescriptorField.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorField} returns this
 */
proto.titanium.DescriptorField.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.titanium.DescriptorField.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorField} returns this
 */
proto.titanium.DescriptorField.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Struct options = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.titanium.DescriptorField.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.titanium.DescriptorField} returns this
*/
proto.titanium.DescriptorField.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.DescriptorField} returns this
 */
proto.titanium.DescriptorField.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.DescriptorField.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool nullable = 4;
 * @return {boolean}
 */
proto.titanium.DescriptorField.prototype.getNullable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.titanium.DescriptorField} returns this
 */
proto.titanium.DescriptorField.prototype.setNullable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string alias = 5;
 * @return {string}
 */
proto.titanium.DescriptorField.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorField} returns this
 */
proto.titanium.DescriptorField.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.DescriptorDefinition.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.titanium.DescriptorField.toObject, includeInstance),
    options: (f = msg.getOptions()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    scope: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorDefinition}
 */
proto.titanium.DescriptorDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorDefinition;
  return proto.titanium.DescriptorDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorDefinition}
 */
proto.titanium.DescriptorDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.titanium.DescriptorField;
      reader.readMessage(value,proto.titanium.DescriptorField.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.DescriptorField.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.DescriptorDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorDefinition} returns this
 */
proto.titanium.DescriptorDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated DescriptorField fields = 2;
 * @return {!Array<!proto.titanium.DescriptorField>}
 */
proto.titanium.DescriptorDefinition.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.titanium.DescriptorField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.DescriptorField, 2));
};


/**
 * @param {!Array<!proto.titanium.DescriptorField>} value
 * @return {!proto.titanium.DescriptorDefinition} returns this
*/
proto.titanium.DescriptorDefinition.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.DescriptorField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.DescriptorField}
 */
proto.titanium.DescriptorDefinition.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.DescriptorField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.DescriptorDefinition} returns this
 */
proto.titanium.DescriptorDefinition.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional google.protobuf.Struct options = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.titanium.DescriptorDefinition.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.titanium.DescriptorDefinition} returns this
*/
proto.titanium.DescriptorDefinition.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.DescriptorDefinition} returns this
 */
proto.titanium.DescriptorDefinition.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.DescriptorDefinition.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.titanium.DescriptorDefinition.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorDefinition} returns this
 */
proto.titanium.DescriptorDefinition.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.MessageResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.MessageResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.MessageResponse.ResponseCase}
 */
proto.titanium.MessageResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.MessageResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.MessageResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.MessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.MessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.MessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.MessageResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.titanium.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.MessageResponse}
 */
proto.titanium.MessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.MessageResponse;
  return proto.titanium.MessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.MessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.MessageResponse}
 */
proto.titanium.MessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.MessageResponseData;
      reader.readMessage(value,proto.titanium.MessageResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.titanium.Error;
      reader.readMessage(value,proto.titanium.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.MessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.MessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.MessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.MessageResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional MessageResponseData data = 1;
 * @return {?proto.titanium.MessageResponseData}
 */
proto.titanium.MessageResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.MessageResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.MessageResponseData, 1));
};


/**
 * @param {?proto.titanium.MessageResponseData|undefined} value
 * @return {!proto.titanium.MessageResponse} returns this
*/
proto.titanium.MessageResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.MessageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.MessageResponse} returns this
 */
proto.titanium.MessageResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.MessageResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.MessageResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.MessageResponse} returns this
*/
proto.titanium.MessageResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.MessageResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.MessageResponse} returns this
 */
proto.titanium.MessageResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.MessageResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.MessageResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.MessageResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.MessageResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MessageResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.MessageResponseData}
 */
proto.titanium.MessageResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.MessageResponseData;
  return proto.titanium.MessageResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.MessageResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.MessageResponseData}
 */
proto.titanium.MessageResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.MessageResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.MessageResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.MessageResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MessageResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.titanium.MessageResponseData.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.MessageResponseData} returns this
 */
proto.titanium.MessageResponseData.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Transformation.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Transformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Transformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Transformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    targetColumn: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourceColumn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rule: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lut: (f = msg.getLut()) && proto.titanium.DynamicLut.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Transformation}
 */
proto.titanium.Transformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Transformation;
  return proto.titanium.Transformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Transformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Transformation}
 */
proto.titanium.Transformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetColumn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceColumn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRule(value);
      break;
    case 5:
      var value = new proto.titanium.DynamicLut;
      reader.readMessage(value,proto.titanium.DynamicLut.deserializeBinaryFromReader);
      msg.setLut(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Transformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Transformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Transformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Transformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTargetColumn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSourceColumn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRule();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLut();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.titanium.DynamicLut.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.Transformation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Transformation} returns this
 */
proto.titanium.Transformation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string target_column = 2;
 * @return {string}
 */
proto.titanium.Transformation.prototype.getTargetColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Transformation} returns this
 */
proto.titanium.Transformation.prototype.setTargetColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source_column = 3;
 * @return {string}
 */
proto.titanium.Transformation.prototype.getSourceColumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Transformation} returns this
 */
proto.titanium.Transformation.prototype.setSourceColumn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string rule = 4;
 * @return {string}
 */
proto.titanium.Transformation.prototype.getRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Transformation} returns this
 */
proto.titanium.Transformation.prototype.setRule = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional DynamicLut lut = 5;
 * @return {?proto.titanium.DynamicLut}
 */
proto.titanium.Transformation.prototype.getLut = function() {
  return /** @type{?proto.titanium.DynamicLut} */ (
    jspb.Message.getWrapperField(this, proto.titanium.DynamicLut, 5));
};


/**
 * @param {?proto.titanium.DynamicLut|undefined} value
 * @return {!proto.titanium.Transformation} returns this
*/
proto.titanium.Transformation.prototype.setLut = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.Transformation} returns this
 */
proto.titanium.Transformation.prototype.clearLut = function() {
  return this.setLut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.Transformation.prototype.hasLut = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.titanium.Transformation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Transformation} returns this
 */
proto.titanium.Transformation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ResultsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ResultsList.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ResultsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ResultsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ResultsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.titanium.Identifier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ResultsList}
 */
proto.titanium.ResultsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ResultsList;
  return proto.titanium.ResultsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ResultsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ResultsList}
 */
proto.titanium.ResultsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.Identifier;
      reader.readMessage(value,proto.titanium.Identifier.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ResultsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ResultsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ResultsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ResultsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Identifier results = 1;
 * @return {!Array<!proto.titanium.Identifier>}
 */
proto.titanium.ResultsList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.titanium.Identifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.Identifier, 1));
};


/**
 * @param {!Array<!proto.titanium.Identifier>} value
 * @return {!proto.titanium.ResultsList} returns this
*/
proto.titanium.ResultsList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.Identifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.Identifier}
 */
proto.titanium.ResultsList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.Identifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ResultsList} returns this
 */
proto.titanium.ResultsList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ColumnInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ColumnInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ColumnInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ColumnInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rawcolumnname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columntype: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.ColumnInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ColumnInfo;
  return proto.titanium.ColumnInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ColumnInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.ColumnInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawcolumnname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumntype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ColumnInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ColumnInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ColumnInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ColumnInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRawcolumnname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumntype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string columnName = 1;
 * @return {string}
 */
proto.titanium.ColumnInfo.prototype.getColumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ColumnInfo} returns this
 */
proto.titanium.ColumnInfo.prototype.setColumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string rawColumnName = 2;
 * @return {string}
 */
proto.titanium.ColumnInfo.prototype.getRawcolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ColumnInfo} returns this
 */
proto.titanium.ColumnInfo.prototype.setRawcolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string columnType = 3;
 * @return {string}
 */
proto.titanium.ColumnInfo.prototype.getColumntype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ColumnInfo} returns this
 */
proto.titanium.ColumnInfo.prototype.setColumntype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ListRuleResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ListRuleResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ListRuleResponse.ResponseCase}
 */
proto.titanium.ListRuleResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ListRuleResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ListRuleResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ListRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ListRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ListRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.DescriptorBasedResultsList.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.titanium.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ListRuleResponse}
 */
proto.titanium.ListRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ListRuleResponse;
  return proto.titanium.ListRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ListRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ListRuleResponse}
 */
proto.titanium.ListRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.DescriptorBasedResultsList;
      reader.readMessage(value,proto.titanium.DescriptorBasedResultsList.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.titanium.Error;
      reader.readMessage(value,proto.titanium.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ListRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ListRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ListRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.DescriptorBasedResultsList.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional DescriptorBasedResultsList data = 1;
 * @return {?proto.titanium.DescriptorBasedResultsList}
 */
proto.titanium.ListRuleResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.DescriptorBasedResultsList} */ (
    jspb.Message.getWrapperField(this, proto.titanium.DescriptorBasedResultsList, 1));
};


/**
 * @param {?proto.titanium.DescriptorBasedResultsList|undefined} value
 * @return {!proto.titanium.ListRuleResponse} returns this
*/
proto.titanium.ListRuleResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ListRuleResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListRuleResponse} returns this
 */
proto.titanium.ListRuleResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListRuleResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ListRuleResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ListRuleResponse} returns this
*/
proto.titanium.ListRuleResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ListRuleResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListRuleResponse} returns this
 */
proto.titanium.ListRuleResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListRuleResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.DescriptorBasedResultsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorBasedResultsList.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorBasedResultsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorBasedResultsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorBasedResultsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.titanium.DescriptorBasedIdentifier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorBasedResultsList}
 */
proto.titanium.DescriptorBasedResultsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorBasedResultsList;
  return proto.titanium.DescriptorBasedResultsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorBasedResultsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorBasedResultsList}
 */
proto.titanium.DescriptorBasedResultsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.DescriptorBasedIdentifier;
      reader.readMessage(value,proto.titanium.DescriptorBasedIdentifier.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorBasedResultsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorBasedResultsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorBasedResultsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorBasedResultsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.DescriptorBasedIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DescriptorBasedIdentifier results = 1;
 * @return {!Array<!proto.titanium.DescriptorBasedIdentifier>}
 */
proto.titanium.DescriptorBasedResultsList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.titanium.DescriptorBasedIdentifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.DescriptorBasedIdentifier, 1));
};


/**
 * @param {!Array<!proto.titanium.DescriptorBasedIdentifier>} value
 * @return {!proto.titanium.DescriptorBasedResultsList} returns this
*/
proto.titanium.DescriptorBasedResultsList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.DescriptorBasedIdentifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.DescriptorBasedIdentifier}
 */
proto.titanium.DescriptorBasedResultsList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.DescriptorBasedIdentifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.DescriptorBasedResultsList} returns this
 */
proto.titanium.DescriptorBasedResultsList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorBasedIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorBasedIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorBasedIdentifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorBasedIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    descriptorName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorBasedIdentifier}
 */
proto.titanium.DescriptorBasedIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorBasedIdentifier;
  return proto.titanium.DescriptorBasedIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorBasedIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorBasedIdentifier}
 */
proto.titanium.DescriptorBasedIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorBasedIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorBasedIdentifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorBasedIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorBasedIdentifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescriptorName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.titanium.DescriptorBasedIdentifier.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorBasedIdentifier} returns this
 */
proto.titanium.DescriptorBasedIdentifier.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string descriptor_name = 2;
 * @return {string}
 */
proto.titanium.DescriptorBasedIdentifier.prototype.getDescriptorName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorBasedIdentifier} returns this
 */
proto.titanium.DescriptorBasedIdentifier.prototype.setDescriptorName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ValuesRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ValuesRow.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ValuesRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ValuesRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ValuesRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    google_protobuf_struct_pb.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ValuesRow}
 */
proto.titanium.ValuesRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ValuesRow;
  return proto.titanium.ValuesRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ValuesRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ValuesRow}
 */
proto.titanium.ValuesRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ValuesRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ValuesRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ValuesRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ValuesRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Value values = 1;
 * @return {!Array<!proto.google.protobuf.Value>}
 */
proto.titanium.ValuesRow.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.google.protobuf.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Value>} value
 * @return {!proto.titanium.ValuesRow} returns this
*/
proto.titanium.ValuesRow.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Value}
 */
proto.titanium.ValuesRow.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ValuesRow} returns this
 */
proto.titanium.ValuesRow.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ResponseData.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.titanium.ColumnInfo.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.titanium.ValuesRow.toObject, includeInstance),
    page: (f = msg.getPage()) && proto.titanium.Page.toObject(includeInstance, f),
    totalRows: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ResponseData}
 */
proto.titanium.ResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ResponseData;
  return proto.titanium.ResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ResponseData}
 */
proto.titanium.ResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ColumnInfo;
      reader.readMessage(value,proto.titanium.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.titanium.ValuesRow;
      reader.readMessage(value,proto.titanium.ValuesRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 3:
      var value = new proto.titanium.Page;
      reader.readMessage(value,proto.titanium.Page.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.ValuesRow.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.titanium.Page.serializeBinaryToWriter
    );
  }
  f = message.getTotalRows();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.titanium.ColumnInfo>}
 */
proto.titanium.ResponseData.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.titanium.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.titanium.ColumnInfo>} value
 * @return {!proto.titanium.ResponseData} returns this
*/
proto.titanium.ResponseData.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.ResponseData.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ResponseData} returns this
 */
proto.titanium.ResponseData.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated ValuesRow rows = 2;
 * @return {!Array<!proto.titanium.ValuesRow>}
 */
proto.titanium.ResponseData.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.titanium.ValuesRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ValuesRow, 2));
};


/**
 * @param {!Array<!proto.titanium.ValuesRow>} value
 * @return {!proto.titanium.ResponseData} returns this
*/
proto.titanium.ResponseData.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.ValuesRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ValuesRow}
 */
proto.titanium.ResponseData.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.ValuesRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ResponseData} returns this
 */
proto.titanium.ResponseData.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional Page page = 3;
 * @return {?proto.titanium.Page}
 */
proto.titanium.ResponseData.prototype.getPage = function() {
  return /** @type{?proto.titanium.Page} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Page, 3));
};


/**
 * @param {?proto.titanium.Page|undefined} value
 * @return {!proto.titanium.ResponseData} returns this
*/
proto.titanium.ResponseData.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ResponseData} returns this
 */
proto.titanium.ResponseData.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ResponseData.prototype.hasPage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 total_rows = 4;
 * @return {number}
 */
proto.titanium.ResponseData.prototype.getTotalRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ResponseData} returns this
 */
proto.titanium.ResponseData.prototype.setTotalRows = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.StatusResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.StatusResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.StatusResponse.ResponseCase}
 */
proto.titanium.StatusResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.StatusResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.StatusResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.StatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.StatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.StatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.StatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.StatusResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.titanium.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.StatusResponse}
 */
proto.titanium.StatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.StatusResponse;
  return proto.titanium.StatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.StatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.StatusResponse}
 */
proto.titanium.StatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.StatusResponseData;
      reader.readMessage(value,proto.titanium.StatusResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.titanium.Error;
      reader.readMessage(value,proto.titanium.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.StatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.StatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.StatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.StatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.StatusResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional StatusResponseData data = 1;
 * @return {?proto.titanium.StatusResponseData}
 */
proto.titanium.StatusResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.StatusResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.StatusResponseData, 1));
};


/**
 * @param {?proto.titanium.StatusResponseData|undefined} value
 * @return {!proto.titanium.StatusResponse} returns this
*/
proto.titanium.StatusResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.StatusResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.StatusResponse} returns this
 */
proto.titanium.StatusResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.StatusResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.StatusResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.StatusResponse} returns this
*/
proto.titanium.StatusResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.StatusResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.StatusResponse} returns this
 */
proto.titanium.StatusResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.StatusResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.StatusResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.StatusResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.StatusResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.StatusResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.StatusResponseData}
 */
proto.titanium.StatusResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.StatusResponseData;
  return proto.titanium.StatusResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.StatusResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.StatusResponseData}
 */
proto.titanium.StatusResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.StatusResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.StatusResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.StatusResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.StatusResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.titanium.StatusResponseData.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.StatusResponseData} returns this
 */
proto.titanium.StatusResponseData.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ConsensusActiveResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ConsensusActiveResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ConsensusActiveResponse.ResponseCase}
 */
proto.titanium.ConsensusActiveResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ConsensusActiveResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ConsensusActiveResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ConsensusActiveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ConsensusActiveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ConsensusActiveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusActiveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.titanium.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ConsensusActiveResponse}
 */
proto.titanium.ConsensusActiveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ConsensusActiveResponse;
  return proto.titanium.ConsensusActiveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ConsensusActiveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ConsensusActiveResponse}
 */
proto.titanium.ConsensusActiveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ResponseData;
      reader.readMessage(value,proto.titanium.ResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.titanium.Error;
      reader.readMessage(value,proto.titanium.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ConsensusActiveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ConsensusActiveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ConsensusActiveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusActiveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseData data = 1;
 * @return {?proto.titanium.ResponseData}
 */
proto.titanium.ConsensusActiveResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ResponseData, 1));
};


/**
 * @param {?proto.titanium.ResponseData|undefined} value
 * @return {!proto.titanium.ConsensusActiveResponse} returns this
*/
proto.titanium.ConsensusActiveResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ConsensusActiveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ConsensusActiveResponse} returns this
 */
proto.titanium.ConsensusActiveResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ConsensusActiveResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ConsensusActiveResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ConsensusActiveResponse} returns this
*/
proto.titanium.ConsensusActiveResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ConsensusActiveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ConsensusActiveResponse} returns this
 */
proto.titanium.ConsensusActiveResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ConsensusActiveResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DataQualityError.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DataQualityError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DataQualityError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DataQualityError.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    severity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DataQualityError}
 */
proto.titanium.DataQualityError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DataQualityError;
  return proto.titanium.DataQualityError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DataQualityError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DataQualityError}
 */
proto.titanium.DataQualityError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeverity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DataQualityError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DataQualityError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DataQualityError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DataQualityError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSeverity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.titanium.DataQualityError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DataQualityError} returns this
 */
proto.titanium.DataQualityError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 severity = 2;
 * @return {number}
 */
proto.titanium.DataQualityError.prototype.getSeverity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.DataQualityError} returns this
 */
proto.titanium.DataQualityError.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ConsensusDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ConsensusDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ConsensusDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    parseStatus: jspb.Message.getFieldWithDefault(msg, 1, ""),
    highestSev: jspb.Message.getFieldWithDefault(msg, 2, ""),
    calculationStatus: jspb.Message.getFieldWithDefault(msg, 3, ""),
    calculationDetail: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ConsensusDetail}
 */
proto.titanium.ConsensusDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ConsensusDetail;
  return proto.titanium.ConsensusDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ConsensusDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ConsensusDetail}
 */
proto.titanium.ConsensusDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParseStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHighestSev(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCalculationStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCalculationDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ConsensusDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ConsensusDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ConsensusDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParseStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHighestSev();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCalculationStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCalculationDetail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string parse_status = 1;
 * @return {string}
 */
proto.titanium.ConsensusDetail.prototype.getParseStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusDetail} returns this
 */
proto.titanium.ConsensusDetail.prototype.setParseStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string highest_sev = 2;
 * @return {string}
 */
proto.titanium.ConsensusDetail.prototype.getHighestSev = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusDetail} returns this
 */
proto.titanium.ConsensusDetail.prototype.setHighestSev = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string calculation_status = 3;
 * @return {string}
 */
proto.titanium.ConsensusDetail.prototype.getCalculationStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusDetail} returns this
 */
proto.titanium.ConsensusDetail.prototype.setCalculationStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string calculation_detail = 4;
 * @return {string}
 */
proto.titanium.ConsensusDetail.prototype.getCalculationDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusDetail} returns this
 */
proto.titanium.ConsensusDetail.prototype.setCalculationDetail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.DataQualityErrors.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DataQualityErrors.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DataQualityErrors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DataQualityErrors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DataQualityErrors.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.titanium.DataQualityError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DataQualityErrors}
 */
proto.titanium.DataQualityErrors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DataQualityErrors;
  return proto.titanium.DataQualityErrors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DataQualityErrors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DataQualityErrors}
 */
proto.titanium.DataQualityErrors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.DataQualityError;
      reader.readMessage(value,proto.titanium.DataQualityError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DataQualityErrors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DataQualityErrors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DataQualityErrors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DataQualityErrors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.DataQualityError.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DataQualityError errors = 1;
 * @return {!Array<!proto.titanium.DataQualityError>}
 */
proto.titanium.DataQualityErrors.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.titanium.DataQualityError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.DataQualityError, 1));
};


/**
 * @param {!Array<!proto.titanium.DataQualityError>} value
 * @return {!proto.titanium.DataQualityErrors} returns this
*/
proto.titanium.DataQualityErrors.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.DataQualityError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.DataQualityError}
 */
proto.titanium.DataQualityErrors.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.DataQualityError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.DataQualityErrors} returns this
 */
proto.titanium.DataQualityErrors.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.StringKeyVal.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.StringKeyVal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.StringKeyVal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.StringKeyVal.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    val: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.StringKeyVal}
 */
proto.titanium.StringKeyVal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.StringKeyVal;
  return proto.titanium.StringKeyVal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.StringKeyVal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.StringKeyVal}
 */
proto.titanium.StringKeyVal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.StringKeyVal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.StringKeyVal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.StringKeyVal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.StringKeyVal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVal();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.titanium.StringKeyVal.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.StringKeyVal} returns this
 */
proto.titanium.StringKeyVal.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string val = 2;
 * @return {string}
 */
proto.titanium.StringKeyVal.prototype.getVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.StringKeyVal} returns this
 */
proto.titanium.StringKeyVal.prototype.setVal = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.BenchmarkMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.BenchmarkMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.BenchmarkMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.BenchmarkMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.BenchmarkMetadata}
 */
proto.titanium.BenchmarkMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.BenchmarkMetadata;
  return proto.titanium.BenchmarkMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.BenchmarkMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.BenchmarkMetadata}
 */
proto.titanium.BenchmarkMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.BenchmarkMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.BenchmarkMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.BenchmarkMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.BenchmarkMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tenor = 1;
 * @return {string}
 */
proto.titanium.BenchmarkMetadata.prototype.getTenor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.BenchmarkMetadata} returns this
 */
proto.titanium.BenchmarkMetadata.prototype.setTenor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.titanium.BenchmarkMetadata.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.BenchmarkMetadata} returns this
 */
proto.titanium.BenchmarkMetadata.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.OutlierMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.OutlierMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.OutlierMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.OutlierMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.OutlierMetadata}
 */
proto.titanium.OutlierMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.OutlierMetadata;
  return proto.titanium.OutlierMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.OutlierMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.OutlierMetadata}
 */
proto.titanium.OutlierMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.OutlierMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.OutlierMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.OutlierMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.OutlierMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tenor = 1;
 * @return {string}
 */
proto.titanium.OutlierMetadata.prototype.getTenor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutlierMetadata} returns this
 */
proto.titanium.OutlierMetadata.prototype.setTenor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.titanium.OutlierMetadata.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutlierMetadata} returns this
 */
proto.titanium.OutlierMetadata.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.Fields.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Fields.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Fields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Fields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Fields.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupingkeysList: jspb.Message.toObjectList(msg.getGroupingkeysList(),
    proto.titanium.ColumnInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Fields}
 */
proto.titanium.Fields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Fields;
  return proto.titanium.Fields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Fields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Fields}
 */
proto.titanium.Fields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ColumnInfo;
      reader.readMessage(value,proto.titanium.ColumnInfo.deserializeBinaryFromReader);
      msg.addGroupingkeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Fields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Fields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Fields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Fields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupingkeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.ColumnInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ColumnInfo groupingKeys = 1;
 * @return {!Array<!proto.titanium.ColumnInfo>}
 */
proto.titanium.Fields.prototype.getGroupingkeysList = function() {
  return /** @type{!Array<!proto.titanium.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.titanium.ColumnInfo>} value
 * @return {!proto.titanium.Fields} returns this
*/
proto.titanium.Fields.prototype.setGroupingkeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.Fields.prototype.addGroupingkeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.Fields} returns this
 */
proto.titanium.Fields.prototype.clearGroupingkeysList = function() {
  return this.setGroupingkeysList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.Values.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Values.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Values.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Values} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Values.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    google_protobuf_struct_pb.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Values}
 */
proto.titanium.Values.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Values;
  return proto.titanium.Values.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Values} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Values}
 */
proto.titanium.Values.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Values.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Values.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Values} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Values.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.titanium.Values.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Values} returns this
 */
proto.titanium.Values.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated google.protobuf.Value values = 2;
 * @return {!Array<!proto.google.protobuf.Value>}
 */
proto.titanium.Values.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.google.protobuf.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Value, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Value>} value
 * @return {!proto.titanium.Values} returns this
*/
proto.titanium.Values.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Value}
 */
proto.titanium.Values.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.Values} returns this
 */
proto.titanium.Values.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.UploadURLResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.UploadURLResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.UploadURLResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.UploadURLResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s3Url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.UploadURLResponse}
 */
proto.titanium.UploadURLResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.UploadURLResponse;
  return proto.titanium.UploadURLResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.UploadURLResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.UploadURLResponse}
 */
proto.titanium.UploadURLResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS3Url(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.UploadURLResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.UploadURLResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.UploadURLResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.UploadURLResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS3Url();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string s3_url = 1;
 * @return {string}
 */
proto.titanium.UploadURLResponse.prototype.getS3Url = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.UploadURLResponse} returns this
 */
proto.titanium.UploadURLResponse.prototype.setS3Url = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: (f = msg.getValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Filter}
 */
proto.titanium.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Filter;
  return proto.titanium.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Filter}
 */
proto.titanium.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.titanium.Filter.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Filter} returns this
 */
proto.titanium.Filter.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string operator = 2;
 * @return {string}
 */
proto.titanium.Filter.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Filter} returns this
 */
proto.titanium.Filter.prototype.setOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Value value = 3;
 * @return {?proto.google.protobuf.Value}
 */
proto.titanium.Filter.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 3));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.titanium.Filter} returns this
*/
proto.titanium.Filter.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.Filter} returns this
 */
proto.titanium.Filter.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.Filter.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.PredefinedFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.PredefinedFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.PredefinedFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.PredefinedFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: (f = msg.getValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    resultcount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    predefinedvaluelabel: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.PredefinedFilter}
 */
proto.titanium.PredefinedFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.PredefinedFilter;
  return proto.titanium.PredefinedFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.PredefinedFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.PredefinedFilter}
 */
proto.titanium.PredefinedFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperator(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResultcount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPredefinedvaluelabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.PredefinedFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.PredefinedFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.PredefinedFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.PredefinedFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getResultcount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPredefinedvaluelabel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.titanium.PredefinedFilter.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.PredefinedFilter} returns this
 */
proto.titanium.PredefinedFilter.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string operator = 2;
 * @return {string}
 */
proto.titanium.PredefinedFilter.prototype.getOperator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.PredefinedFilter} returns this
 */
proto.titanium.PredefinedFilter.prototype.setOperator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Value value = 3;
 * @return {?proto.google.protobuf.Value}
 */
proto.titanium.PredefinedFilter.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 3));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.titanium.PredefinedFilter} returns this
*/
proto.titanium.PredefinedFilter.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.PredefinedFilter} returns this
 */
proto.titanium.PredefinedFilter.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.PredefinedFilter.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 resultCount = 4;
 * @return {number}
 */
proto.titanium.PredefinedFilter.prototype.getResultcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.PredefinedFilter} returns this
 */
proto.titanium.PredefinedFilter.prototype.setResultcount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string predefinedValueLabel = 5;
 * @return {string}
 */
proto.titanium.PredefinedFilter.prototype.getPredefinedvaluelabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.PredefinedFilter} returns this
 */
proto.titanium.PredefinedFilter.prototype.setPredefinedvaluelabel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.NameAliasPair.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.NameAliasPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.NameAliasPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.NameAliasPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.NameAliasPair}
 */
proto.titanium.NameAliasPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.NameAliasPair;
  return proto.titanium.NameAliasPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.NameAliasPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.NameAliasPair}
 */
proto.titanium.NameAliasPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.NameAliasPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.NameAliasPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.NameAliasPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.NameAliasPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.NameAliasPair.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.NameAliasPair} returns this
 */
proto.titanium.NameAliasPair.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.titanium.NameAliasPair.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.NameAliasPair} returns this
 */
proto.titanium.NameAliasPair.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.GenericChartResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GenericChartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GenericChartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GenericChartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GenericChartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.titanium.ColumnInfo.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.titanium.GenericChartResponseRow.toObject, includeInstance),
    totalRows: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GenericChartResponse}
 */
proto.titanium.GenericChartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GenericChartResponse;
  return proto.titanium.GenericChartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GenericChartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GenericChartResponse}
 */
proto.titanium.GenericChartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ColumnInfo;
      reader.readMessage(value,proto.titanium.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.titanium.GenericChartResponseRow;
      reader.readMessage(value,proto.titanium.GenericChartResponseRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GenericChartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GenericChartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GenericChartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GenericChartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.GenericChartResponseRow.serializeBinaryToWriter
    );
  }
  f = message.getTotalRows();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.titanium.ColumnInfo>}
 */
proto.titanium.GenericChartResponse.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.titanium.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.titanium.ColumnInfo>} value
 * @return {!proto.titanium.GenericChartResponse} returns this
*/
proto.titanium.GenericChartResponse.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.GenericChartResponse.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.GenericChartResponse} returns this
 */
proto.titanium.GenericChartResponse.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated GenericChartResponseRow rows = 2;
 * @return {!Array<!proto.titanium.GenericChartResponseRow>}
 */
proto.titanium.GenericChartResponse.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.titanium.GenericChartResponseRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.GenericChartResponseRow, 2));
};


/**
 * @param {!Array<!proto.titanium.GenericChartResponseRow>} value
 * @return {!proto.titanium.GenericChartResponse} returns this
*/
proto.titanium.GenericChartResponse.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.GenericChartResponseRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.GenericChartResponseRow}
 */
proto.titanium.GenericChartResponse.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.GenericChartResponseRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.GenericChartResponse} returns this
 */
proto.titanium.GenericChartResponse.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional int32 total_rows = 3;
 * @return {number}
 */
proto.titanium.GenericChartResponse.prototype.getTotalRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.GenericChartResponse} returns this
 */
proto.titanium.GenericChartResponse.prototype.setTotalRows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.GenericChartResponseRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GenericChartResponseRow.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GenericChartResponseRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GenericChartResponseRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GenericChartResponseRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    google_protobuf_struct_pb.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GenericChartResponseRow}
 */
proto.titanium.GenericChartResponseRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GenericChartResponseRow;
  return proto.titanium.GenericChartResponseRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GenericChartResponseRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GenericChartResponseRow}
 */
proto.titanium.GenericChartResponseRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GenericChartResponseRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GenericChartResponseRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GenericChartResponseRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GenericChartResponseRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Value values = 1;
 * @return {!Array<!proto.google.protobuf.Value>}
 */
proto.titanium.GenericChartResponseRow.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.google.protobuf.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Value>} value
 * @return {!proto.titanium.GenericChartResponseRow} returns this
*/
proto.titanium.GenericChartResponseRow.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Value}
 */
proto.titanium.GenericChartResponseRow.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.GenericChartResponseRow} returns this
 */
proto.titanium.GenericChartResponseRow.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.EnableDisableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.EnableDisableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.EnableDisableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.EnableDisableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.EnableDisableRequest}
 */
proto.titanium.EnableDisableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.EnableDisableRequest;
  return proto.titanium.EnableDisableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.EnableDisableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.EnableDisableRequest}
 */
proto.titanium.EnableDisableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.EnableDisableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.EnableDisableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.EnableDisableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.EnableDisableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.EnableDisableRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.EnableDisableRequest} returns this
 */
proto.titanium.EnableDisableRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scope = 2;
 * @return {string}
 */
proto.titanium.EnableDisableRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.EnableDisableRequest} returns this
 */
proto.titanium.EnableDisableRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.OutliersListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.OutliersListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.OutliersListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.OutliersListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    submittedDate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submittedId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consensusRunTimestamp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    assetId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    orderby: (f = msg.getOrderby()) && proto.titanium.OrderBy.toObject(includeInstance, f),
    limit: (f = msg.getLimit()) && proto.titanium.Limit.toObject(includeInstance, f),
    offset: jspb.Message.getFieldWithDefault(msg, 8, 0),
    traceName: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.OutliersListRequest}
 */
proto.titanium.OutliersListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.OutliersListRequest;
  return proto.titanium.OutliersListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.OutliersListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.OutliersListRequest}
 */
proto.titanium.OutliersListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusRunTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 6:
      var value = new proto.titanium.OrderBy;
      reader.readMessage(value,proto.titanium.OrderBy.deserializeBinaryFromReader);
      msg.setOrderby(value);
      break;
    case 7:
      var value = new proto.titanium.Limit;
      reader.readMessage(value,proto.titanium.Limit.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.OutliersListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.OutliersListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.OutliersListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.OutliersListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmittedDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmittedId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConsensusRunTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOrderby();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.titanium.OrderBy.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.titanium.Limit.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string submitted_date = 1;
 * @return {string}
 */
proto.titanium.OutliersListRequest.prototype.getSubmittedDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.setSubmittedDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitted_id = 2;
 * @return {string}
 */
proto.titanium.OutliersListRequest.prototype.getSubmittedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.setSubmittedId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string consensus_run_timestamp = 3;
 * @return {string}
 */
proto.titanium.OutliersListRequest.prototype.getConsensusRunTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.setConsensusRunTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string asset_id = 4;
 * @return {string}
 */
proto.titanium.OutliersListRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string filter = 5;
 * @return {string}
 */
proto.titanium.OutliersListRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional OrderBy orderBy = 6;
 * @return {?proto.titanium.OrderBy}
 */
proto.titanium.OutliersListRequest.prototype.getOrderby = function() {
  return /** @type{?proto.titanium.OrderBy} */ (
    jspb.Message.getWrapperField(this, proto.titanium.OrderBy, 6));
};


/**
 * @param {?proto.titanium.OrderBy|undefined} value
 * @return {!proto.titanium.OutliersListRequest} returns this
*/
proto.titanium.OutliersListRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.clearOrderby = function() {
  return this.setOrderby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.OutliersListRequest.prototype.hasOrderby = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Limit limit = 7;
 * @return {?proto.titanium.Limit}
 */
proto.titanium.OutliersListRequest.prototype.getLimit = function() {
  return /** @type{?proto.titanium.Limit} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Limit, 7));
};


/**
 * @param {?proto.titanium.Limit|undefined} value
 * @return {!proto.titanium.OutliersListRequest} returns this
*/
proto.titanium.OutliersListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.OutliersListRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 offset = 8;
 * @return {number}
 */
proto.titanium.OutliersListRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string trace_name = 9;
 * @return {string}
 */
proto.titanium.OutliersListRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.OutliersListRequest} returns this
 */
proto.titanium.OutliersListRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.RulesetDefinition.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.RulesetDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.RulesetDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.RulesetDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.RulesetDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptorName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    criteriaList: jspb.Message.toObjectList(msg.getCriteriaList(),
    proto.titanium.CriteriaDefinition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.RulesetDefinition}
 */
proto.titanium.RulesetDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.RulesetDefinition;
  return proto.titanium.RulesetDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.RulesetDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.RulesetDefinition}
 */
proto.titanium.RulesetDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptorName(value);
      break;
    case 2:
      var value = new proto.titanium.CriteriaDefinition;
      reader.readMessage(value,proto.titanium.CriteriaDefinition.deserializeBinaryFromReader);
      msg.addCriteria(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.RulesetDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.RulesetDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.RulesetDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.RulesetDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescriptorName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCriteriaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.CriteriaDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string descriptor_name = 1;
 * @return {string}
 */
proto.titanium.RulesetDefinition.prototype.getDescriptorName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.RulesetDefinition} returns this
 */
proto.titanium.RulesetDefinition.prototype.setDescriptorName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CriteriaDefinition criteria = 2;
 * @return {!Array<!proto.titanium.CriteriaDefinition>}
 */
proto.titanium.RulesetDefinition.prototype.getCriteriaList = function() {
  return /** @type{!Array<!proto.titanium.CriteriaDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.CriteriaDefinition, 2));
};


/**
 * @param {!Array<!proto.titanium.CriteriaDefinition>} value
 * @return {!proto.titanium.RulesetDefinition} returns this
*/
proto.titanium.RulesetDefinition.prototype.setCriteriaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.CriteriaDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.CriteriaDefinition}
 */
proto.titanium.RulesetDefinition.prototype.addCriteria = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.CriteriaDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.RulesetDefinition} returns this
 */
proto.titanium.RulesetDefinition.prototype.clearCriteriaList = function() {
  return this.setCriteriaList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.CriteriaDefinition.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.CriteriaDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.CriteriaDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.CriteriaDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.CriteriaDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rule: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    metadataList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    validationsList: jspb.Message.toObjectList(msg.getValidationsList(),
    proto.titanium.RuleDefinition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.CriteriaDefinition}
 */
proto.titanium.CriteriaDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.CriteriaDefinition;
  return proto.titanium.CriteriaDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.CriteriaDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.CriteriaDefinition}
 */
proto.titanium.CriteriaDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRule(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addMetadata(value);
      break;
    case 6:
      var value = new proto.titanium.RuleDefinition;
      reader.readMessage(value,proto.titanium.RuleDefinition.deserializeBinaryFromReader);
      msg.addValidations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.CriteriaDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.CriteriaDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.CriteriaDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.CriteriaDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRule();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getValidationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.titanium.RuleDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.CriteriaDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.titanium.CriteriaDefinition.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rule = 3;
 * @return {string}
 */
proto.titanium.CriteriaDefinition.prototype.getRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.setRule = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */
proto.titanium.CriteriaDefinition.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * repeated string metadata = 5;
 * @return {!Array<string>}
 */
proto.titanium.CriteriaDefinition.prototype.getMetadataList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.setMetadataList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.addMetadata = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.clearMetadataList = function() {
  return this.setMetadataList([]);
};


/**
 * repeated RuleDefinition validations = 6;
 * @return {!Array<!proto.titanium.RuleDefinition>}
 */
proto.titanium.CriteriaDefinition.prototype.getValidationsList = function() {
  return /** @type{!Array<!proto.titanium.RuleDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.RuleDefinition, 6));
};


/**
 * @param {!Array<!proto.titanium.RuleDefinition>} value
 * @return {!proto.titanium.CriteriaDefinition} returns this
*/
proto.titanium.CriteriaDefinition.prototype.setValidationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.titanium.RuleDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.RuleDefinition}
 */
proto.titanium.CriteriaDefinition.prototype.addValidations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.titanium.RuleDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.CriteriaDefinition} returns this
 */
proto.titanium.CriteriaDefinition.prototype.clearValidationsList = function() {
  return this.setValidationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.RuleDefinition.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.RuleDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.RuleDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.RuleDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.RuleDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rule: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ruleType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    severity: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    error: (f = msg.getError()) && proto.titanium.ErrorDefinition.toObject(includeInstance, f),
    lookuptable: (f = msg.getLookuptable()) && proto.titanium.DynamicLut.toObject(includeInstance, f),
    filter: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.RuleDefinition}
 */
proto.titanium.RuleDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.RuleDefinition;
  return proto.titanium.RuleDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.RuleDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.RuleDefinition}
 */
proto.titanium.RuleDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRule(value);
      break;
    case 4:
      var value = /** @type {!proto.titanium.RuleDefinition.RuleType} */ (reader.readEnum());
      msg.setRuleType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeverity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 7:
      var value = new proto.titanium.ErrorDefinition;
      reader.readMessage(value,proto.titanium.ErrorDefinition.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 8:
      var value = new proto.titanium.DynamicLut;
      reader.readMessage(value,proto.titanium.DynamicLut.deserializeBinaryFromReader);
      msg.setLookuptable(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.RuleDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.RuleDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.RuleDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.RuleDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRule();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRuleType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSeverity();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.titanium.ErrorDefinition.serializeBinaryToWriter
    );
  }
  f = message.getLookuptable();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.titanium.DynamicLut.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.titanium.RuleDefinition.RuleType = {
  INPUT_DATA: 0,
  BUSINESS_DATA: 1
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.RuleDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.titanium.RuleDefinition.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string rule = 3;
 * @return {string}
 */
proto.titanium.RuleDefinition.prototype.getRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.setRule = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional RuleType rule_type = 4;
 * @return {!proto.titanium.RuleDefinition.RuleType}
 */
proto.titanium.RuleDefinition.prototype.getRuleType = function() {
  return /** @type {!proto.titanium.RuleDefinition.RuleType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.titanium.RuleDefinition.RuleType} value
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.setRuleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int32 severity = 5;
 * @return {number}
 */
proto.titanium.RuleDefinition.prototype.getSeverity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated string tags = 6;
 * @return {!Array<string>}
 */
proto.titanium.RuleDefinition.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional ErrorDefinition error = 7;
 * @return {?proto.titanium.ErrorDefinition}
 */
proto.titanium.RuleDefinition.prototype.getError = function() {
  return /** @type{?proto.titanium.ErrorDefinition} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ErrorDefinition, 7));
};


/**
 * @param {?proto.titanium.ErrorDefinition|undefined} value
 * @return {!proto.titanium.RuleDefinition} returns this
*/
proto.titanium.RuleDefinition.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.RuleDefinition.prototype.hasError = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DynamicLut lookuptable = 8;
 * @return {?proto.titanium.DynamicLut}
 */
proto.titanium.RuleDefinition.prototype.getLookuptable = function() {
  return /** @type{?proto.titanium.DynamicLut} */ (
    jspb.Message.getWrapperField(this, proto.titanium.DynamicLut, 8));
};


/**
 * @param {?proto.titanium.DynamicLut|undefined} value
 * @return {!proto.titanium.RuleDefinition} returns this
*/
proto.titanium.RuleDefinition.prototype.setLookuptable = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.clearLookuptable = function() {
  return this.setLookuptable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.RuleDefinition.prototype.hasLookuptable = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string filter = 9;
 * @return {string}
 */
proto.titanium.RuleDefinition.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.RuleDefinition} returns this
 */
proto.titanium.RuleDefinition.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ErrorDefinition.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ErrorDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ErrorDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ErrorDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ErrorDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messageArgsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ErrorDefinition}
 */
proto.titanium.ErrorDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ErrorDefinition;
  return proto.titanium.ErrorDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ErrorDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ErrorDefinition}
 */
proto.titanium.ErrorDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessageArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ErrorDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ErrorDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ErrorDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ErrorDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessageArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.titanium.ErrorDefinition.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ErrorDefinition} returns this
 */
proto.titanium.ErrorDefinition.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string message_args = 2;
 * @return {!Array<string>}
 */
proto.titanium.ErrorDefinition.prototype.getMessageArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.ErrorDefinition} returns this
 */
proto.titanium.ErrorDefinition.prototype.setMessageArgsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.ErrorDefinition} returns this
 */
proto.titanium.ErrorDefinition.prototype.addMessageArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ErrorDefinition} returns this
 */
proto.titanium.ErrorDefinition.prototype.clearMessageArgsList = function() {
  return this.setMessageArgsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.DynamicLut.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DynamicLut.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DynamicLut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DynamicLut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DynamicLut.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    filter: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DynamicLut}
 */
proto.titanium.DynamicLut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DynamicLut;
  return proto.titanium.DynamicLut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DynamicLut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DynamicLut}
 */
proto.titanium.DynamicLut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!proto.titanium.DynamicLut.DynamicLutType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DynamicLut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DynamicLut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DynamicLut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DynamicLut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.titanium.DynamicLut.DynamicLutType = {
  BOOLEAN: 0,
  STRING: 1,
  NUMERIC: 2,
  TIMESTAMP: 3
};

/**
 * repeated string key = 1;
 * @return {!Array<string>}
 */
proto.titanium.DynamicLut.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.DynamicLut} returns this
 */
proto.titanium.DynamicLut.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.DynamicLut} returns this
 */
proto.titanium.DynamicLut.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.DynamicLut} returns this
 */
proto.titanium.DynamicLut.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.titanium.DynamicLut.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DynamicLut} returns this
 */
proto.titanium.DynamicLut.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional DynamicLutType type = 3;
 * @return {!proto.titanium.DynamicLut.DynamicLutType}
 */
proto.titanium.DynamicLut.prototype.getType = function() {
  return /** @type {!proto.titanium.DynamicLut.DynamicLutType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.titanium.DynamicLut.DynamicLutType} value
 * @return {!proto.titanium.DynamicLut} returns this
 */
proto.titanium.DynamicLut.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string filter = 4;
 * @return {string}
 */
proto.titanium.DynamicLut.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DynamicLut} returns this
 */
proto.titanium.DynamicLut.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.FilterPack.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.FilterPack.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.FilterPack.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.FilterPack} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.FilterPack.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.titanium.Filter.toObject, includeInstance),
    logicalOperation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filterPacksList: jspb.Message.toObjectList(msg.getFilterPacksList(),
    proto.titanium.FilterPack.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.FilterPack}
 */
proto.titanium.FilterPack.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.FilterPack;
  return proto.titanium.FilterPack.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.FilterPack} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.FilterPack}
 */
proto.titanium.FilterPack.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.Filter;
      reader.readMessage(value,proto.titanium.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogicalOperation(value);
      break;
    case 3:
      var value = new proto.titanium.FilterPack;
      reader.readMessage(value,proto.titanium.FilterPack.deserializeBinaryFromReader);
      msg.addFilterPacks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.FilterPack.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.FilterPack.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.FilterPack} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.FilterPack.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.Filter.serializeBinaryToWriter
    );
  }
  f = message.getLogicalOperation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilterPacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.titanium.FilterPack.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Filter filters = 1;
 * @return {!Array<!proto.titanium.Filter>}
 */
proto.titanium.FilterPack.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.titanium.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.Filter, 1));
};


/**
 * @param {!Array<!proto.titanium.Filter>} value
 * @return {!proto.titanium.FilterPack} returns this
*/
proto.titanium.FilterPack.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.Filter}
 */
proto.titanium.FilterPack.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.FilterPack} returns this
 */
proto.titanium.FilterPack.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * optional string logical_operation = 2;
 * @return {string}
 */
proto.titanium.FilterPack.prototype.getLogicalOperation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.FilterPack} returns this
 */
proto.titanium.FilterPack.prototype.setLogicalOperation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated FilterPack filter_packs = 3;
 * @return {!Array<!proto.titanium.FilterPack>}
 */
proto.titanium.FilterPack.prototype.getFilterPacksList = function() {
  return /** @type{!Array<!proto.titanium.FilterPack>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.FilterPack, 3));
};


/**
 * @param {!Array<!proto.titanium.FilterPack>} value
 * @return {!proto.titanium.FilterPack} returns this
*/
proto.titanium.FilterPack.prototype.setFilterPacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.titanium.FilterPack=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.FilterPack}
 */
proto.titanium.FilterPack.prototype.addFilterPacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.titanium.FilterPack, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.FilterPack} returns this
 */
proto.titanium.FilterPack.prototype.clearFilterPacksList = function() {
  return this.setFilterPacksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ConsensusRunInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ConsensusRunInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ConsensusRunInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ConsensusRunInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusRunInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusRunId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    runBy: jspb.Message.getFieldWithDefault(msg, 2, ""),
    numberOfParticipants: jspb.Message.getFieldWithDefault(msg, 3, 0),
    consensusresultsetinfoList: jspb.Message.toObjectList(msg.getConsensusresultsetinfoList(),
    proto.titanium.ConsensusResultSetInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ConsensusRunInfo}
 */
proto.titanium.ConsensusRunInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ConsensusRunInfo;
  return proto.titanium.ConsensusRunInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ConsensusRunInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ConsensusRunInfo}
 */
proto.titanium.ConsensusRunInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusRunId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunBy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberOfParticipants(value);
      break;
    case 4:
      var value = new proto.titanium.ConsensusResultSetInfo;
      reader.readMessage(value,proto.titanium.ConsensusResultSetInfo.deserializeBinaryFromReader);
      msg.addConsensusresultsetinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ConsensusRunInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ConsensusRunInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ConsensusRunInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusRunInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRunBy();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNumberOfParticipants();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getConsensusresultsetinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.titanium.ConsensusResultSetInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string consensus_run_id = 1;
 * @return {string}
 */
proto.titanium.ConsensusRunInfo.prototype.getConsensusRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusRunInfo} returns this
 */
proto.titanium.ConsensusRunInfo.prototype.setConsensusRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string run_by = 2;
 * @return {string}
 */
proto.titanium.ConsensusRunInfo.prototype.getRunBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusRunInfo} returns this
 */
proto.titanium.ConsensusRunInfo.prototype.setRunBy = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 number_of_participants = 3;
 * @return {number}
 */
proto.titanium.ConsensusRunInfo.prototype.getNumberOfParticipants = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ConsensusRunInfo} returns this
 */
proto.titanium.ConsensusRunInfo.prototype.setNumberOfParticipants = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ConsensusResultSetInfo consensusResultSetInfo = 4;
 * @return {!Array<!proto.titanium.ConsensusResultSetInfo>}
 */
proto.titanium.ConsensusRunInfo.prototype.getConsensusresultsetinfoList = function() {
  return /** @type{!Array<!proto.titanium.ConsensusResultSetInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ConsensusResultSetInfo, 4));
};


/**
 * @param {!Array<!proto.titanium.ConsensusResultSetInfo>} value
 * @return {!proto.titanium.ConsensusRunInfo} returns this
*/
proto.titanium.ConsensusRunInfo.prototype.setConsensusresultsetinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.titanium.ConsensusResultSetInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ConsensusResultSetInfo}
 */
proto.titanium.ConsensusRunInfo.prototype.addConsensusresultsetinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.titanium.ConsensusResultSetInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ConsensusRunInfo} returns this
 */
proto.titanium.ConsensusRunInfo.prototype.clearConsensusresultsetinfoList = function() {
  return this.setConsensusresultsetinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ConsensusResultSetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ConsensusResultSetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ConsensusResultSetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusResultSetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusResultSetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consensusRunTimestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cohortName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dataContent: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ConsensusResultSetInfo}
 */
proto.titanium.ConsensusResultSetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ConsensusResultSetInfo;
  return proto.titanium.ConsensusResultSetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ConsensusResultSetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ConsensusResultSetInfo}
 */
proto.titanium.ConsensusResultSetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusResultSetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusRunTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCohortName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ConsensusResultSetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ConsensusResultSetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ConsensusResultSetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ConsensusResultSetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusResultSetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsensusRunTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCohortName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDataContent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string consensus_result_set_id = 1;
 * @return {string}
 */
proto.titanium.ConsensusResultSetInfo.prototype.getConsensusResultSetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusResultSetInfo} returns this
 */
proto.titanium.ConsensusResultSetInfo.prototype.setConsensusResultSetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consensus_run_timestamp = 2;
 * @return {string}
 */
proto.titanium.ConsensusResultSetInfo.prototype.getConsensusRunTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusResultSetInfo} returns this
 */
proto.titanium.ConsensusResultSetInfo.prototype.setConsensusRunTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.titanium.ConsensusResultSetInfo.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusResultSetInfo} returns this
 */
proto.titanium.ConsensusResultSetInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.titanium.ConsensusResultSetInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusResultSetInfo} returns this
 */
proto.titanium.ConsensusResultSetInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.titanium.ConsensusResultSetInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusResultSetInfo} returns this
 */
proto.titanium.ConsensusResultSetInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string cohort_name = 6;
 * @return {string}
 */
proto.titanium.ConsensusResultSetInfo.prototype.getCohortName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusResultSetInfo} returns this
 */
proto.titanium.ConsensusResultSetInfo.prototype.setCohortName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string data_content = 7;
 * @return {string}
 */
proto.titanium.ConsensusResultSetInfo.prototype.getDataContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ConsensusResultSetInfo} returns this
 */
proto.titanium.ConsensusResultSetInfo.prototype.setDataContent = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Page.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Page.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Page} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Page.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalNumberOfElements: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Page}
 */
proto.titanium.Page.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Page;
  return proto.titanium.Page.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Page} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Page}
 */
proto.titanium.Page.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalNumberOfElements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Page.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Page.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Page} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Page.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalNumberOfElements();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int32 size = 1;
 * @return {number}
 */
proto.titanium.Page.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.Page} returns this
 */
proto.titanium.Page.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page_number = 2;
 * @return {number}
 */
proto.titanium.Page.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.Page} returns this
 */
proto.titanium.Page.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 total_number_of_elements = 3;
 * @return {number}
 */
proto.titanium.Page.prototype.getTotalNumberOfElements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.Page} returns this
 */
proto.titanium.Page.prototype.setTotalNumberOfElements = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.EntityDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.EntityDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.EntityDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.EntityDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    definition: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.EntityDefinition}
 */
proto.titanium.EntityDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.EntityDefinition;
  return proto.titanium.EntityDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.EntityDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.EntityDefinition}
 */
proto.titanium.EntityDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 3:
      var value = /** @type {!proto.titanium.EntityType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.EntityDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.EntityDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.EntityDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.EntityDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDefinition();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.EntityDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.EntityDefinition} returns this
 */
proto.titanium.EntityDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scope = 2;
 * @return {string}
 */
proto.titanium.EntityDefinition.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.EntityDefinition} returns this
 */
proto.titanium.EntityDefinition.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EntityType type = 3;
 * @return {!proto.titanium.EntityType}
 */
proto.titanium.EntityDefinition.prototype.getType = function() {
  return /** @type {!proto.titanium.EntityType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.titanium.EntityType} value
 * @return {!proto.titanium.EntityDefinition} returns this
 */
proto.titanium.EntityDefinition.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string definition = 4;
 * @return {string}
 */
proto.titanium.EntityDefinition.prototype.getDefinition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.EntityDefinition} returns this
 */
proto.titanium.EntityDefinition.prototype.setDefinition = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.EntityIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.EntityIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.EntityIdentifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.EntityIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && proto.titanium.Identifier.toObject(includeInstance, f),
    scope: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.EntityIdentifier}
 */
proto.titanium.EntityIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.EntityIdentifier;
  return proto.titanium.EntityIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.EntityIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.EntityIdentifier}
 */
proto.titanium.EntityIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.Identifier;
      reader.readMessage(value,proto.titanium.Identifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 3:
      var value = /** @type {!proto.titanium.EntityType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.EntityIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.EntityIdentifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.EntityIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.EntityIdentifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional Identifier identifier = 1;
 * @return {?proto.titanium.Identifier}
 */
proto.titanium.EntityIdentifier.prototype.getIdentifier = function() {
  return /** @type{?proto.titanium.Identifier} */ (
    jspb.Message.getWrapperField(this, proto.titanium.Identifier, 1));
};


/**
 * @param {?proto.titanium.Identifier|undefined} value
 * @return {!proto.titanium.EntityIdentifier} returns this
*/
proto.titanium.EntityIdentifier.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.EntityIdentifier} returns this
 */
proto.titanium.EntityIdentifier.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.EntityIdentifier.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string scope = 2;
 * @return {string}
 */
proto.titanium.EntityIdentifier.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.EntityIdentifier} returns this
 */
proto.titanium.EntityIdentifier.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EntityType type = 3;
 * @return {!proto.titanium.EntityType}
 */
proto.titanium.EntityIdentifier.prototype.getType = function() {
  return /** @type {!proto.titanium.EntityType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.titanium.EntityType} value
 * @return {!proto.titanium.EntityIdentifier} returns this
 */
proto.titanium.EntityIdentifier.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ListOfKeys.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ListOfKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ListOfKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ListOfKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListOfKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.titanium.KeyAndValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ListOfKeys}
 */
proto.titanium.ListOfKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ListOfKeys;
  return proto.titanium.ListOfKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ListOfKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ListOfKeys}
 */
proto.titanium.ListOfKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.KeyAndValue;
      reader.readMessage(value,proto.titanium.KeyAndValue.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ListOfKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ListOfKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ListOfKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListOfKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.KeyAndValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KeyAndValue list = 1;
 * @return {!Array<!proto.titanium.KeyAndValue>}
 */
proto.titanium.ListOfKeys.prototype.getListList = function() {
  return /** @type{!Array<!proto.titanium.KeyAndValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.KeyAndValue, 1));
};


/**
 * @param {!Array<!proto.titanium.KeyAndValue>} value
 * @return {!proto.titanium.ListOfKeys} returns this
*/
proto.titanium.ListOfKeys.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.KeyAndValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.KeyAndValue}
 */
proto.titanium.ListOfKeys.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.KeyAndValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ListOfKeys} returns this
 */
proto.titanium.ListOfKeys.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.KeyAndValue.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.KeyAndValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.KeyAndValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.KeyAndValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.KeyAndValue}
 */
proto.titanium.KeyAndValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.KeyAndValue;
  return proto.titanium.KeyAndValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.KeyAndValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.KeyAndValue}
 */
proto.titanium.KeyAndValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.KeyAndValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.KeyAndValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.KeyAndValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.KeyAndValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.titanium.KeyAndValue.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.KeyAndValue} returns this
 */
proto.titanium.KeyAndValue.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Value value = 2;
 * @return {?proto.google.protobuf.Value}
 */
proto.titanium.KeyAndValue.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 2));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.titanium.KeyAndValue} returns this
*/
proto.titanium.KeyAndValue.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.KeyAndValue} returns this
 */
proto.titanium.KeyAndValue.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.KeyAndValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: (f = msg.getMin()) && proto.titanium.RangePoint.toObject(includeInstance, f),
    max: (f = msg.getMax()) && proto.titanium.RangePoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Range}
 */
proto.titanium.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Range;
  return proto.titanium.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Range}
 */
proto.titanium.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.RangePoint;
      reader.readMessage(value,proto.titanium.RangePoint.deserializeBinaryFromReader);
      msg.setMin(value);
      break;
    case 2:
      var value = new proto.titanium.RangePoint;
      reader.readMessage(value,proto.titanium.RangePoint.deserializeBinaryFromReader);
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.RangePoint.serializeBinaryToWriter
    );
  }
  f = message.getMax();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.RangePoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional RangePoint min = 1;
 * @return {?proto.titanium.RangePoint}
 */
proto.titanium.Range.prototype.getMin = function() {
  return /** @type{?proto.titanium.RangePoint} */ (
    jspb.Message.getWrapperField(this, proto.titanium.RangePoint, 1));
};


/**
 * @param {?proto.titanium.RangePoint|undefined} value
 * @return {!proto.titanium.Range} returns this
*/
proto.titanium.Range.prototype.setMin = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.Range} returns this
 */
proto.titanium.Range.prototype.clearMin = function() {
  return this.setMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.Range.prototype.hasMin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RangePoint max = 2;
 * @return {?proto.titanium.RangePoint}
 */
proto.titanium.Range.prototype.getMax = function() {
  return /** @type{?proto.titanium.RangePoint} */ (
    jspb.Message.getWrapperField(this, proto.titanium.RangePoint, 2));
};


/**
 * @param {?proto.titanium.RangePoint|undefined} value
 * @return {!proto.titanium.Range} returns this
*/
proto.titanium.Range.prototype.setMax = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.Range} returns this
 */
proto.titanium.Range.prototype.clearMax = function() {
  return this.setMax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.Range.prototype.hasMax = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.titanium.Order = {
  ASC: 0,
  DESC: 1
};

/**
 * @enum {number}
 */
proto.titanium.Decision = {
  DECISION_UNSPECIFIED: 0,
  APPROVE: 1,
  DENY: 2
};

/**
 * @enum {number}
 */
proto.titanium.EntityType = {
  ADVANCED_TRANSFORM_RULE: 0,
  VALIDATIONRULESET: 1,
  NORMALIZATIONRULESET: 2,
  MAPPINGRULESET: 3,
  CUSTOMFUNCTION: 4
};

goog.object.extend(exports, proto.titanium);
