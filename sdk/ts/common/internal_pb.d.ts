/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: common/internal.proto

import * as jspb from "google-protobuf";

export class UploadNotificationRequest extends jspb.Message {
  clearInternalheadersList(): void;
  getInternalheadersList(): Array<string>;
  setInternalheadersList(value: Array<string>): void;
  addInternalheaders(value: string, index?: number): string;

  getAssetid(): string;
  setAssetid(value: string): void;

  getDate(): string;
  setDate(value: string): void;

  getOperatorclient(): string;
  setOperatorclient(value: string): void;

  getFilename(): string;
  setFilename(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UploadNotificationRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UploadNotificationRequest): UploadNotificationRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: UploadNotificationRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UploadNotificationRequest;
  static deserializeBinaryFromReader(message: UploadNotificationRequest, reader: jspb.BinaryReader): UploadNotificationRequest;
}

export namespace UploadNotificationRequest {
  export type AsObject = {
    internalheadersList: Array<string>,
    assetid: string,
    date: string,
    operatorclient: string,
    filename: string,
  }
}

export class UploadNotificationResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UploadNotificationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: UploadNotificationResponse): UploadNotificationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: UploadNotificationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UploadNotificationResponse;
  static deserializeBinaryFromReader(message: UploadNotificationResponse, reader: jspb.BinaryReader): UploadNotificationResponse;
}

export namespace UploadNotificationResponse {
  export type AsObject = {
  }
}

