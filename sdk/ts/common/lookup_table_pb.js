/* eslint-disable */
/*Generated by GenDocu.com*/
// source: common/lookup_table.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var common_gateway_base_pb = require('../common/gateway_base_pb.js');
goog.object.extend(proto, common_gateway_base_pb);
goog.exportSymbol('proto.titanium.AddLookupTableRequest', null, global);
goog.exportSymbol('proto.titanium.GetLookupTableResponse', null, global);
goog.exportSymbol('proto.titanium.GetLookupTableResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ListLookupTableResponse', null, global);
goog.exportSymbol('proto.titanium.ListLookupTableResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.LookupTableDefinition', null, global);
goog.exportSymbol('proto.titanium.LookupTableList', null, global);
goog.exportSymbol('proto.titanium.LookupTableListItem', null, global);
goog.exportSymbol('proto.titanium.LutEntry', null, global);
goog.exportSymbol('proto.titanium.LutField', null, global);
goog.exportSymbol('proto.titanium.LutType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.AddLookupTableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.AddLookupTableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.AddLookupTableRequest.displayName = 'proto.titanium.AddLookupTableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetLookupTableResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.GetLookupTableResponse.oneofGroups_);
};
goog.inherits(proto.titanium.GetLookupTableResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetLookupTableResponse.displayName = 'proto.titanium.GetLookupTableResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.LookupTableListItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.LookupTableListItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.LookupTableListItem.displayName = 'proto.titanium.LookupTableListItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.LookupTableList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.LookupTableList.repeatedFields_, null);
};
goog.inherits(proto.titanium.LookupTableList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.LookupTableList.displayName = 'proto.titanium.LookupTableList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ListLookupTableResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ListLookupTableResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ListLookupTableResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ListLookupTableResponse.displayName = 'proto.titanium.ListLookupTableResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.LookupTableDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.LookupTableDefinition.repeatedFields_, null);
};
goog.inherits(proto.titanium.LookupTableDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.LookupTableDefinition.displayName = 'proto.titanium.LookupTableDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.LutField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.LutField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.LutField.displayName = 'proto.titanium.LutField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.LutEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.LutEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.LutEntry.displayName = 'proto.titanium.LutEntry';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.AddLookupTableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.AddLookupTableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.AddLookupTableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.AddLookupTableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scope: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lookuptable: (f = msg.getLookuptable()) && proto.titanium.LookupTableDefinition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.AddLookupTableRequest}
 */
proto.titanium.AddLookupTableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.AddLookupTableRequest;
  return proto.titanium.AddLookupTableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.AddLookupTableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.AddLookupTableRequest}
 */
proto.titanium.AddLookupTableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 2:
      var value = new proto.titanium.LookupTableDefinition;
      reader.readMessage(value,proto.titanium.LookupTableDefinition.deserializeBinaryFromReader);
      msg.setLookuptable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.AddLookupTableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.AddLookupTableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.AddLookupTableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.AddLookupTableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLookuptable();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.LookupTableDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string scope = 1;
 * @return {string}
 */
proto.titanium.AddLookupTableRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.AddLookupTableRequest} returns this
 */
proto.titanium.AddLookupTableRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LookupTableDefinition lookuptable = 2;
 * @return {?proto.titanium.LookupTableDefinition}
 */
proto.titanium.AddLookupTableRequest.prototype.getLookuptable = function() {
  return /** @type{?proto.titanium.LookupTableDefinition} */ (
    jspb.Message.getWrapperField(this, proto.titanium.LookupTableDefinition, 2));
};


/**
 * @param {?proto.titanium.LookupTableDefinition|undefined} value
 * @return {!proto.titanium.AddLookupTableRequest} returns this
*/
proto.titanium.AddLookupTableRequest.prototype.setLookuptable = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.AddLookupTableRequest} returns this
 */
proto.titanium.AddLookupTableRequest.prototype.clearLookuptable = function() {
  return this.setLookuptable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.AddLookupTableRequest.prototype.hasLookuptable = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.GetLookupTableResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.GetLookupTableResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.GetLookupTableResponse.ResponseCase}
 */
proto.titanium.GetLookupTableResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.GetLookupTableResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.GetLookupTableResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetLookupTableResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetLookupTableResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetLookupTableResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetLookupTableResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.LookupTableDefinition.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetLookupTableResponse}
 */
proto.titanium.GetLookupTableResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetLookupTableResponse;
  return proto.titanium.GetLookupTableResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetLookupTableResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetLookupTableResponse}
 */
proto.titanium.GetLookupTableResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.LookupTableDefinition;
      reader.readMessage(value,proto.titanium.LookupTableDefinition.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetLookupTableResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetLookupTableResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetLookupTableResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetLookupTableResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.LookupTableDefinition.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional LookupTableDefinition data = 1;
 * @return {?proto.titanium.LookupTableDefinition}
 */
proto.titanium.GetLookupTableResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.LookupTableDefinition} */ (
    jspb.Message.getWrapperField(this, proto.titanium.LookupTableDefinition, 1));
};


/**
 * @param {?proto.titanium.LookupTableDefinition|undefined} value
 * @return {!proto.titanium.GetLookupTableResponse} returns this
*/
proto.titanium.GetLookupTableResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.GetLookupTableResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetLookupTableResponse} returns this
 */
proto.titanium.GetLookupTableResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetLookupTableResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.GetLookupTableResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.GetLookupTableResponse} returns this
*/
proto.titanium.GetLookupTableResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.GetLookupTableResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetLookupTableResponse} returns this
 */
proto.titanium.GetLookupTableResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetLookupTableResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.LookupTableListItem.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.LookupTableListItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.LookupTableListItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LookupTableListItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && common_gateway_base_pb.Identifier.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    valueField: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.LookupTableListItem}
 */
proto.titanium.LookupTableListItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.LookupTableListItem;
  return proto.titanium.LookupTableListItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.LookupTableListItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.LookupTableListItem}
 */
proto.titanium.LookupTableListItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_gateway_base_pb.Identifier;
      reader.readMessage(value,common_gateway_base_pb.Identifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {!proto.titanium.LutType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.LookupTableListItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.LookupTableListItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.LookupTableListItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LookupTableListItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_gateway_base_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValueField();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Identifier identifier = 1;
 * @return {?proto.titanium.Identifier}
 */
proto.titanium.LookupTableListItem.prototype.getIdentifier = function() {
  return /** @type{?proto.titanium.Identifier} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Identifier, 1));
};


/**
 * @param {?proto.titanium.Identifier|undefined} value
 * @return {!proto.titanium.LookupTableListItem} returns this
*/
proto.titanium.LookupTableListItem.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.LookupTableListItem} returns this
 */
proto.titanium.LookupTableListItem.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.LookupTableListItem.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LutType type = 2;
 * @return {!proto.titanium.LutType}
 */
proto.titanium.LookupTableListItem.prototype.getType = function() {
  return /** @type {!proto.titanium.LutType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.titanium.LutType} value
 * @return {!proto.titanium.LookupTableListItem} returns this
 */
proto.titanium.LookupTableListItem.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string value_field = 3;
 * @return {string}
 */
proto.titanium.LookupTableListItem.prototype.getValueField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.LookupTableListItem} returns this
 */
proto.titanium.LookupTableListItem.prototype.setValueField = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.LookupTableList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.LookupTableList.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.LookupTableList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.LookupTableList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LookupTableList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.titanium.LookupTableListItem.toObject, includeInstance),
    totalrecords: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.LookupTableList}
 */
proto.titanium.LookupTableList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.LookupTableList;
  return proto.titanium.LookupTableList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.LookupTableList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.LookupTableList}
 */
proto.titanium.LookupTableList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.LookupTableListItem;
      reader.readMessage(value,proto.titanium.LookupTableListItem.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalrecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.LookupTableList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.LookupTableList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.LookupTableList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LookupTableList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.LookupTableListItem.serializeBinaryToWriter
    );
  }
  f = message.getTotalrecords();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated LookupTableListItem results = 1;
 * @return {!Array<!proto.titanium.LookupTableListItem>}
 */
proto.titanium.LookupTableList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.titanium.LookupTableListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.LookupTableListItem, 1));
};


/**
 * @param {!Array<!proto.titanium.LookupTableListItem>} value
 * @return {!proto.titanium.LookupTableList} returns this
*/
proto.titanium.LookupTableList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.LookupTableListItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.LookupTableListItem}
 */
proto.titanium.LookupTableList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.LookupTableListItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.LookupTableList} returns this
 */
proto.titanium.LookupTableList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 totalRecords = 2;
 * @return {number}
 */
proto.titanium.LookupTableList.prototype.getTotalrecords = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.LookupTableList} returns this
 */
proto.titanium.LookupTableList.prototype.setTotalrecords = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ListLookupTableResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ListLookupTableResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ListLookupTableResponse.ResponseCase}
 */
proto.titanium.ListLookupTableResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ListLookupTableResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ListLookupTableResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ListLookupTableResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ListLookupTableResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ListLookupTableResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListLookupTableResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.LookupTableList.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ListLookupTableResponse}
 */
proto.titanium.ListLookupTableResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ListLookupTableResponse;
  return proto.titanium.ListLookupTableResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ListLookupTableResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ListLookupTableResponse}
 */
proto.titanium.ListLookupTableResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.LookupTableList;
      reader.readMessage(value,proto.titanium.LookupTableList.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ListLookupTableResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ListLookupTableResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ListLookupTableResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ListLookupTableResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.LookupTableList.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional LookupTableList data = 1;
 * @return {?proto.titanium.LookupTableList}
 */
proto.titanium.ListLookupTableResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.LookupTableList} */ (
    jspb.Message.getWrapperField(this, proto.titanium.LookupTableList, 1));
};


/**
 * @param {?proto.titanium.LookupTableList|undefined} value
 * @return {!proto.titanium.ListLookupTableResponse} returns this
*/
proto.titanium.ListLookupTableResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ListLookupTableResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListLookupTableResponse} returns this
 */
proto.titanium.ListLookupTableResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListLookupTableResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ListLookupTableResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ListLookupTableResponse} returns this
*/
proto.titanium.ListLookupTableResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ListLookupTableResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ListLookupTableResponse} returns this
 */
proto.titanium.ListLookupTableResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ListLookupTableResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.LookupTableDefinition.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.LookupTableDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.LookupTableDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.LookupTableDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LookupTableDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.titanium.LutField.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.titanium.LutEntry.toObject, includeInstance),
    totalrecords: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.LookupTableDefinition}
 */
proto.titanium.LookupTableDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.LookupTableDefinition;
  return proto.titanium.LookupTableDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.LookupTableDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.LookupTableDefinition}
 */
proto.titanium.LookupTableDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.titanium.LutType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.titanium.LutField;
      reader.readMessage(value,proto.titanium.LutField.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 4:
      var value = new proto.titanium.LutEntry;
      reader.readMessage(value,proto.titanium.LutEntry.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalrecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.LookupTableDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.LookupTableDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.LookupTableDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LookupTableDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.titanium.LutField.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.titanium.LutEntry.serializeBinaryToWriter
    );
  }
  f = message.getTotalrecords();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.LookupTableDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.LookupTableDefinition} returns this
 */
proto.titanium.LookupTableDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LutType type = 2;
 * @return {!proto.titanium.LutType}
 */
proto.titanium.LookupTableDefinition.prototype.getType = function() {
  return /** @type {!proto.titanium.LutType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.titanium.LutType} value
 * @return {!proto.titanium.LookupTableDefinition} returns this
 */
proto.titanium.LookupTableDefinition.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated LutField fields = 3;
 * @return {!Array<!proto.titanium.LutField>}
 */
proto.titanium.LookupTableDefinition.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.titanium.LutField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.LutField, 3));
};


/**
 * @param {!Array<!proto.titanium.LutField>} value
 * @return {!proto.titanium.LookupTableDefinition} returns this
*/
proto.titanium.LookupTableDefinition.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.titanium.LutField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.LutField}
 */
proto.titanium.LookupTableDefinition.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.titanium.LutField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.LookupTableDefinition} returns this
 */
proto.titanium.LookupTableDefinition.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * repeated LutEntry rows = 4;
 * @return {!Array<!proto.titanium.LutEntry>}
 */
proto.titanium.LookupTableDefinition.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.titanium.LutEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.LutEntry, 4));
};


/**
 * @param {!Array<!proto.titanium.LutEntry>} value
 * @return {!proto.titanium.LookupTableDefinition} returns this
*/
proto.titanium.LookupTableDefinition.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.titanium.LutEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.LutEntry}
 */
proto.titanium.LookupTableDefinition.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.titanium.LutEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.LookupTableDefinition} returns this
 */
proto.titanium.LookupTableDefinition.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional int32 totalRecords = 5;
 * @return {number}
 */
proto.titanium.LookupTableDefinition.prototype.getTotalrecords = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.LookupTableDefinition} returns this
 */
proto.titanium.LookupTableDefinition.prototype.setTotalrecords = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.LutField.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.LutField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.LutField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LutField.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    key: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.LutField}
 */
proto.titanium.LutField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.LutField;
  return proto.titanium.LutField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.LutField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.LutField}
 */
proto.titanium.LutField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.titanium.LutType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.LutField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.LutField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.LutField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LutField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getKey();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.LutField.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.LutField} returns this
 */
proto.titanium.LutField.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LutType type = 2;
 * @return {!proto.titanium.LutType}
 */
proto.titanium.LutField.prototype.getType = function() {
  return /** @type {!proto.titanium.LutType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.titanium.LutType} value
 * @return {!proto.titanium.LutField} returns this
 */
proto.titanium.LutField.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool key = 3;
 * @return {boolean}
 */
proto.titanium.LutField.prototype.getKey = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.titanium.LutField} returns this
 */
proto.titanium.LutField.prototype.setKey = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.LutEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.LutEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.LutEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LutEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    values: (f = msg.getValues()) && google_protobuf_struct_pb.ListValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.LutEntry}
 */
proto.titanium.LutEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.LutEntry;
  return proto.titanium.LutEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.LutEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.LutEntry}
 */
proto.titanium.LutEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.ListValue;
      reader.readMessage(value,google_protobuf_struct_pb.ListValue.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.LutEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.LutEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.LutEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.LutEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.ListValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.ListValue values = 1;
 * @return {?proto.google.protobuf.ListValue}
 */
proto.titanium.LutEntry.prototype.getValues = function() {
  return /** @type{?proto.google.protobuf.ListValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.ListValue, 1));
};


/**
 * @param {?proto.google.protobuf.ListValue|undefined} value
 * @return {!proto.titanium.LutEntry} returns this
*/
proto.titanium.LutEntry.prototype.setValues = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.LutEntry} returns this
 */
proto.titanium.LutEntry.prototype.clearValues = function() {
  return this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.LutEntry.prototype.hasValues = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.titanium.LutType = {
  BOOLEAN: 0,
  STRING: 1,
  NUMERIC: 2,
  TIMESTAMP: 3
};

goog.object.extend(exports, proto.titanium);
