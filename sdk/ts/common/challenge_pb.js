/* eslint-disable */
/*Generated by GenDocu.com*/
// source: common/challenge.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var common_gateway_base_pb = require('../common/gateway_base_pb.js');
goog.object.extend(proto, common_gateway_base_pb);
goog.exportSymbol('proto.titanium.Attachment', null, global);
goog.exportSymbol('proto.titanium.ChallengeActiveRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeActiveResponse', null, global);
goog.exportSymbol('proto.titanium.ChallengeActiveResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ChallengeActiveResponseData', null, global);
goog.exportSymbol('proto.titanium.ChallengeConsensusMetadata', null, global);
goog.exportSymbol('proto.titanium.ChallengeCreateRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeCreateResponse', null, global);
goog.exportSymbol('proto.titanium.ChallengeCreateResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ChallengeCreateResponseData', null, global);
goog.exportSymbol('proto.titanium.ChallengeDecisionRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormGeneralRow', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormGeneralRowMax', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormGeneralRowMaxLength', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormGeneralRowMin', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormGeneralRowMinLength', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormGeneralRowPrecision', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormMetaRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormMetaResponse', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormMetaResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormMetaResponseData', null, global);
goog.exportSymbol('proto.titanium.ChallengeFormOneOfFields', null, global);
goog.exportSymbol('proto.titanium.ChallengeFreezeAction', null, global);
goog.exportSymbol('proto.titanium.ChallengeFreezeActionRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeFreezeStatusRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeHistoryRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeHistoryResponse', null, global);
goog.exportSymbol('proto.titanium.ChallengeHistoryResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ChallengeHistoryResponseData', null, global);
goog.exportSymbol('proto.titanium.ChallengeListMetadata', null, global);
goog.exportSymbol('proto.titanium.ChallengeListRequest', null, global);
goog.exportSymbol('proto.titanium.ChallengeListResponse', null, global);
goog.exportSymbol('proto.titanium.ChallengeListResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ChallengeListResponseData', null, global);
goog.exportSymbol('proto.titanium.EvidenceType', null, global);
goog.exportSymbol('proto.titanium.GetAttachmentUploadUrlRequest', null, global);
goog.exportSymbol('proto.titanium.GetAttachmentUploadUrlResponse', null, global);
goog.exportSymbol('proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl', null, global);
goog.exportSymbol('proto.titanium.GetAttachmentUploadUrlResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.GetChallengeDetailsRequest', null, global);
goog.exportSymbol('proto.titanium.GetChallengeDetailsResponse', null, global);
goog.exportSymbol('proto.titanium.GetChallengeDetailsResponse.CommonChallengeData', null, global);
goog.exportSymbol('proto.titanium.GetChallengeDetailsResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.GetChallengeDetailsResponse.Result', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormMetaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFormMetaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormMetaRequest.displayName = 'proto.titanium.ChallengeFormMetaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormMetaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ChallengeFormMetaResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ChallengeFormMetaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormMetaResponse.displayName = 'proto.titanium.ChallengeFormMetaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormMetaResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeFormMetaResponseData.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeFormMetaResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormMetaResponseData.displayName = 'proto.titanium.ChallengeFormMetaResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormOneOfFields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeFormOneOfFields.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeFormOneOfFields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormOneOfFields.displayName = 'proto.titanium.ChallengeFormOneOfFields';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormGeneralRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFormGeneralRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormGeneralRow.displayName = 'proto.titanium.ChallengeFormGeneralRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormGeneralRowPrecision = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFormGeneralRowPrecision, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormGeneralRowPrecision.displayName = 'proto.titanium.ChallengeFormGeneralRowPrecision';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormGeneralRowMax = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFormGeneralRowMax, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormGeneralRowMax.displayName = 'proto.titanium.ChallengeFormGeneralRowMax';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormGeneralRowMin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFormGeneralRowMin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormGeneralRowMin.displayName = 'proto.titanium.ChallengeFormGeneralRowMin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormGeneralRowMaxLength = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFormGeneralRowMaxLength, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormGeneralRowMaxLength.displayName = 'proto.titanium.ChallengeFormGeneralRowMaxLength';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFormGeneralRowMinLength = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFormGeneralRowMinLength, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFormGeneralRowMinLength.displayName = 'proto.titanium.ChallengeFormGeneralRowMinLength';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeCreateRequest.displayName = 'proto.titanium.ChallengeCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ChallengeCreateResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ChallengeCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeCreateResponse.displayName = 'proto.titanium.ChallengeCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeCreateResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeCreateResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeCreateResponseData.displayName = 'proto.titanium.ChallengeCreateResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFreezeStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFreezeStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFreezeStatusRequest.displayName = 'proto.titanium.ChallengeFreezeStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeFreezeActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeFreezeActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeFreezeActionRequest.displayName = 'proto.titanium.ChallengeFreezeActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeActiveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeActiveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeActiveRequest.displayName = 'proto.titanium.ChallengeActiveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeActiveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ChallengeActiveResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ChallengeActiveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeActiveResponse.displayName = 'proto.titanium.ChallengeActiveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeActiveResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeActiveResponseData.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeActiveResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeActiveResponseData.displayName = 'proto.titanium.ChallengeActiveResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeConsensusMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeConsensusMetadata.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeConsensusMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeConsensusMetadata.displayName = 'proto.titanium.ChallengeConsensusMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ChallengeHistoryResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ChallengeHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeHistoryResponse.displayName = 'proto.titanium.ChallengeHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeHistoryResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeHistoryResponseData.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeHistoryResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeHistoryResponseData.displayName = 'proto.titanium.ChallengeHistoryResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeDecisionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeDecisionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeDecisionRequest.displayName = 'proto.titanium.ChallengeDecisionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeHistoryRequest.displayName = 'proto.titanium.ChallengeHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChallengeListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeListRequest.displayName = 'proto.titanium.ChallengeListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ChallengeListResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ChallengeListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeListResponse.displayName = 'proto.titanium.ChallengeListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeListResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeListResponseData.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeListResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeListResponseData.displayName = 'proto.titanium.ChallengeListResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChallengeListMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChallengeListMetadata.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChallengeListMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChallengeListMetadata.displayName = 'proto.titanium.ChallengeListMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetAttachmentUploadUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.GetAttachmentUploadUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetAttachmentUploadUrlRequest.displayName = 'proto.titanium.GetAttachmentUploadUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetAttachmentUploadUrlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.GetAttachmentUploadUrlResponse.oneofGroups_);
};
goog.inherits(proto.titanium.GetAttachmentUploadUrlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetAttachmentUploadUrlResponse.displayName = 'proto.titanium.GetAttachmentUploadUrlResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.displayName = 'proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Attachment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.Attachment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Attachment.displayName = 'proto.titanium.Attachment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetChallengeDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.GetChallengeDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetChallengeDetailsRequest.displayName = 'proto.titanium.GetChallengeDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetChallengeDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.GetChallengeDetailsResponse.oneofGroups_);
};
goog.inherits(proto.titanium.GetChallengeDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetChallengeDetailsResponse.displayName = 'proto.titanium.GetChallengeDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetChallengeDetailsResponse.Result = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.GetChallengeDetailsResponse.Result.repeatedFields_, null);
};
goog.inherits(proto.titanium.GetChallengeDetailsResponse.Result, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetChallengeDetailsResponse.Result.displayName = 'proto.titanium.GetChallengeDetailsResponse.Result';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.GetChallengeDetailsResponse.CommonChallengeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.displayName = 'proto.titanium.GetChallengeDetailsResponse.CommonChallengeData';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormMetaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormMetaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormMetaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormMetaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    evidenceType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    submissionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    traceName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormMetaRequest}
 */
proto.titanium.ChallengeFormMetaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormMetaRequest;
  return proto.titanium.ChallengeFormMetaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormMetaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormMetaRequest}
 */
proto.titanium.ChallengeFormMetaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {!proto.titanium.EvidenceType} */ (reader.readEnum());
      msg.setEvidenceType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmissionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormMetaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormMetaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormMetaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormMetaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvidenceType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSubmissionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeFormMetaRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFormMetaRequest} returns this
 */
proto.titanium.ChallengeFormMetaRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EvidenceType evidence_type = 2;
 * @return {!proto.titanium.EvidenceType}
 */
proto.titanium.ChallengeFormMetaRequest.prototype.getEvidenceType = function() {
  return /** @type {!proto.titanium.EvidenceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.titanium.EvidenceType} value
 * @return {!proto.titanium.ChallengeFormMetaRequest} returns this
 */
proto.titanium.ChallengeFormMetaRequest.prototype.setEvidenceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string submission_id = 3;
 * @return {string}
 */
proto.titanium.ChallengeFormMetaRequest.prototype.getSubmissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFormMetaRequest} returns this
 */
proto.titanium.ChallengeFormMetaRequest.prototype.setSubmissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string trace_name = 4;
 * @return {string}
 */
proto.titanium.ChallengeFormMetaRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFormMetaRequest} returns this
 */
proto.titanium.ChallengeFormMetaRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ChallengeFormMetaResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ChallengeFormMetaResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ChallengeFormMetaResponse.ResponseCase}
 */
proto.titanium.ChallengeFormMetaResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ChallengeFormMetaResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ChallengeFormMetaResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormMetaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormMetaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormMetaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormMetaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ChallengeFormMetaResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormMetaResponse}
 */
proto.titanium.ChallengeFormMetaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormMetaResponse;
  return proto.titanium.ChallengeFormMetaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormMetaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormMetaResponse}
 */
proto.titanium.ChallengeFormMetaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChallengeFormMetaResponseData;
      reader.readMessage(value,proto.titanium.ChallengeFormMetaResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormMetaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormMetaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormMetaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormMetaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ChallengeFormMetaResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChallengeFormMetaResponseData data = 1;
 * @return {?proto.titanium.ChallengeFormMetaResponseData}
 */
proto.titanium.ChallengeFormMetaResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ChallengeFormMetaResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeFormMetaResponseData, 1));
};


/**
 * @param {?proto.titanium.ChallengeFormMetaResponseData|undefined} value
 * @return {!proto.titanium.ChallengeFormMetaResponse} returns this
*/
proto.titanium.ChallengeFormMetaResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ChallengeFormMetaResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormMetaResponse} returns this
 */
proto.titanium.ChallengeFormMetaResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormMetaResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ChallengeFormMetaResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ChallengeFormMetaResponse} returns this
*/
proto.titanium.ChallengeFormMetaResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ChallengeFormMetaResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormMetaResponse} returns this
 */
proto.titanium.ChallengeFormMetaResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormMetaResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeFormMetaResponseData.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormMetaResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormMetaResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormMetaResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.titanium.ChallengeFormGeneralRow.toObject, includeInstance),
    oneOfFieldsList: jspb.Message.toObjectList(msg.getOneOfFieldsList(),
    proto.titanium.ChallengeFormOneOfFields.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormMetaResponseData}
 */
proto.titanium.ChallengeFormMetaResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormMetaResponseData;
  return proto.titanium.ChallengeFormMetaResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormMetaResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormMetaResponseData}
 */
proto.titanium.ChallengeFormMetaResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChallengeFormGeneralRow;
      reader.readMessage(value,proto.titanium.ChallengeFormGeneralRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 2:
      var value = new proto.titanium.ChallengeFormOneOfFields;
      reader.readMessage(value,proto.titanium.ChallengeFormOneOfFields.deserializeBinaryFromReader);
      msg.addOneOfFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormMetaResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormMetaResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormMetaResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.ChallengeFormGeneralRow.serializeBinaryToWriter
    );
  }
  f = message.getOneOfFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.ChallengeFormOneOfFields.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChallengeFormGeneralRow rows = 1;
 * @return {!Array<!proto.titanium.ChallengeFormGeneralRow>}
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.titanium.ChallengeFormGeneralRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ChallengeFormGeneralRow, 1));
};


/**
 * @param {!Array<!proto.titanium.ChallengeFormGeneralRow>} value
 * @return {!proto.titanium.ChallengeFormMetaResponseData} returns this
*/
proto.titanium.ChallengeFormMetaResponseData.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.ChallengeFormGeneralRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChallengeFormGeneralRow}
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.ChallengeFormGeneralRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeFormMetaResponseData} returns this
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * repeated ChallengeFormOneOfFields one_of_fields = 2;
 * @return {!Array<!proto.titanium.ChallengeFormOneOfFields>}
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.getOneOfFieldsList = function() {
  return /** @type{!Array<!proto.titanium.ChallengeFormOneOfFields>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ChallengeFormOneOfFields, 2));
};


/**
 * @param {!Array<!proto.titanium.ChallengeFormOneOfFields>} value
 * @return {!proto.titanium.ChallengeFormMetaResponseData} returns this
*/
proto.titanium.ChallengeFormMetaResponseData.prototype.setOneOfFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.ChallengeFormOneOfFields=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChallengeFormOneOfFields}
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.addOneOfFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.ChallengeFormOneOfFields, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeFormMetaResponseData} returns this
 */
proto.titanium.ChallengeFormMetaResponseData.prototype.clearOneOfFieldsList = function() {
  return this.setOneOfFieldsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeFormOneOfFields.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormOneOfFields.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormOneOfFields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormOneOfFields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormOneOfFields.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormOneOfFields}
 */
proto.titanium.ChallengeFormOneOfFields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormOneOfFields;
  return proto.titanium.ChallengeFormOneOfFields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormOneOfFields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormOneOfFields}
 */
proto.titanium.ChallengeFormOneOfFields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormOneOfFields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormOneOfFields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormOneOfFields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormOneOfFields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.titanium.ChallengeFormOneOfFields.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.ChallengeFormOneOfFields} returns this
 */
proto.titanium.ChallengeFormOneOfFields.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChallengeFormOneOfFields} returns this
 */
proto.titanium.ChallengeFormOneOfFields.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeFormOneOfFields} returns this
 */
proto.titanium.ChallengeFormOneOfFields.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormGeneralRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormGeneralRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tooltip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    precision: (f = msg.getPrecision()) && proto.titanium.ChallengeFormGeneralRowPrecision.toObject(includeInstance, f),
    max: (f = msg.getMax()) && proto.titanium.ChallengeFormGeneralRowMax.toObject(includeInstance, f),
    min: (f = msg.getMin()) && proto.titanium.ChallengeFormGeneralRowMin.toObject(includeInstance, f),
    regex: jspb.Message.getFieldWithDefault(msg, 7, ""),
    maxLength: (f = msg.getMaxLength()) && proto.titanium.ChallengeFormGeneralRowMaxLength.toObject(includeInstance, f),
    minLength: (f = msg.getMinLength()) && proto.titanium.ChallengeFormGeneralRowMinLength.toObject(includeInstance, f),
    value: (f = msg.getValue()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormGeneralRow}
 */
proto.titanium.ChallengeFormGeneralRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormGeneralRow;
  return proto.titanium.ChallengeFormGeneralRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormGeneralRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormGeneralRow}
 */
proto.titanium.ChallengeFormGeneralRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTooltip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = new proto.titanium.ChallengeFormGeneralRowPrecision;
      reader.readMessage(value,proto.titanium.ChallengeFormGeneralRowPrecision.deserializeBinaryFromReader);
      msg.setPrecision(value);
      break;
    case 5:
      var value = new proto.titanium.ChallengeFormGeneralRowMax;
      reader.readMessage(value,proto.titanium.ChallengeFormGeneralRowMax.deserializeBinaryFromReader);
      msg.setMax(value);
      break;
    case 6:
      var value = new proto.titanium.ChallengeFormGeneralRowMin;
      reader.readMessage(value,proto.titanium.ChallengeFormGeneralRowMin.deserializeBinaryFromReader);
      msg.setMin(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegex(value);
      break;
    case 8:
      var value = new proto.titanium.ChallengeFormGeneralRowMaxLength;
      reader.readMessage(value,proto.titanium.ChallengeFormGeneralRowMaxLength.deserializeBinaryFromReader);
      msg.setMaxLength(value);
      break;
    case 9:
      var value = new proto.titanium.ChallengeFormGeneralRowMinLength;
      reader.readMessage(value,proto.titanium.ChallengeFormGeneralRowMinLength.deserializeBinaryFromReader);
      msg.setMinLength(value);
      break;
    case 10:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormGeneralRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormGeneralRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTooltip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrecision();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.titanium.ChallengeFormGeneralRowPrecision.serializeBinaryToWriter
    );
  }
  f = message.getMax();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.titanium.ChallengeFormGeneralRowMax.serializeBinaryToWriter
    );
  }
  f = message.getMin();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.titanium.ChallengeFormGeneralRowMin.serializeBinaryToWriter
    );
  }
  f = message.getRegex();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMaxLength();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.titanium.ChallengeFormGeneralRowMaxLength.serializeBinaryToWriter
    );
  }
  f = message.getMinLength();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.titanium.ChallengeFormGeneralRowMinLength.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tooltip = 2;
 * @return {string}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getTooltip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.setTooltip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ChallengeFormGeneralRowPrecision precision = 4;
 * @return {?proto.titanium.ChallengeFormGeneralRowPrecision}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getPrecision = function() {
  return /** @type{?proto.titanium.ChallengeFormGeneralRowPrecision} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeFormGeneralRowPrecision, 4));
};


/**
 * @param {?proto.titanium.ChallengeFormGeneralRowPrecision|undefined} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
*/
proto.titanium.ChallengeFormGeneralRow.prototype.setPrecision = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.clearPrecision = function() {
  return this.setPrecision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.hasPrecision = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChallengeFormGeneralRowMax max = 5;
 * @return {?proto.titanium.ChallengeFormGeneralRowMax}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getMax = function() {
  return /** @type{?proto.titanium.ChallengeFormGeneralRowMax} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeFormGeneralRowMax, 5));
};


/**
 * @param {?proto.titanium.ChallengeFormGeneralRowMax|undefined} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
*/
proto.titanium.ChallengeFormGeneralRow.prototype.setMax = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.clearMax = function() {
  return this.setMax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.hasMax = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ChallengeFormGeneralRowMin min = 6;
 * @return {?proto.titanium.ChallengeFormGeneralRowMin}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getMin = function() {
  return /** @type{?proto.titanium.ChallengeFormGeneralRowMin} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeFormGeneralRowMin, 6));
};


/**
 * @param {?proto.titanium.ChallengeFormGeneralRowMin|undefined} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
*/
proto.titanium.ChallengeFormGeneralRow.prototype.setMin = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.clearMin = function() {
  return this.setMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.hasMin = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string regex = 7;
 * @return {string}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getRegex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.setRegex = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ChallengeFormGeneralRowMaxLength max_length = 8;
 * @return {?proto.titanium.ChallengeFormGeneralRowMaxLength}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getMaxLength = function() {
  return /** @type{?proto.titanium.ChallengeFormGeneralRowMaxLength} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeFormGeneralRowMaxLength, 8));
};


/**
 * @param {?proto.titanium.ChallengeFormGeneralRowMaxLength|undefined} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
*/
proto.titanium.ChallengeFormGeneralRow.prototype.setMaxLength = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.clearMaxLength = function() {
  return this.setMaxLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.hasMaxLength = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ChallengeFormGeneralRowMinLength min_length = 9;
 * @return {?proto.titanium.ChallengeFormGeneralRowMinLength}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getMinLength = function() {
  return /** @type{?proto.titanium.ChallengeFormGeneralRowMinLength} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeFormGeneralRowMinLength, 9));
};


/**
 * @param {?proto.titanium.ChallengeFormGeneralRowMinLength|undefined} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
*/
proto.titanium.ChallengeFormGeneralRow.prototype.setMinLength = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.clearMinLength = function() {
  return this.setMinLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.hasMinLength = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Value value = 10;
 * @return {?proto.google.protobuf.Value}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 10));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
*/
proto.titanium.ChallengeFormGeneralRow.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeFormGeneralRow} returns this
 */
proto.titanium.ChallengeFormGeneralRow.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeFormGeneralRow.prototype.hasValue = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormGeneralRowPrecision.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormGeneralRowPrecision.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormGeneralRowPrecision} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowPrecision.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormGeneralRowPrecision}
 */
proto.titanium.ChallengeFormGeneralRowPrecision.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormGeneralRowPrecision;
  return proto.titanium.ChallengeFormGeneralRowPrecision.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormGeneralRowPrecision} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormGeneralRowPrecision}
 */
proto.titanium.ChallengeFormGeneralRowPrecision.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormGeneralRowPrecision.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormGeneralRowPrecision.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormGeneralRowPrecision} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowPrecision.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.titanium.ChallengeFormGeneralRowPrecision.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeFormGeneralRowPrecision} returns this
 */
proto.titanium.ChallengeFormGeneralRowPrecision.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormGeneralRowMax.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormGeneralRowMax.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormGeneralRowMax} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMax.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormGeneralRowMax}
 */
proto.titanium.ChallengeFormGeneralRowMax.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormGeneralRowMax;
  return proto.titanium.ChallengeFormGeneralRowMax.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormGeneralRowMax} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormGeneralRowMax}
 */
proto.titanium.ChallengeFormGeneralRowMax.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormGeneralRowMax.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormGeneralRowMax.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormGeneralRowMax} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMax.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double value = 1;
 * @return {number}
 */
proto.titanium.ChallengeFormGeneralRowMax.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeFormGeneralRowMax} returns this
 */
proto.titanium.ChallengeFormGeneralRowMax.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormGeneralRowMin.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormGeneralRowMin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormGeneralRowMin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMin.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormGeneralRowMin}
 */
proto.titanium.ChallengeFormGeneralRowMin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormGeneralRowMin;
  return proto.titanium.ChallengeFormGeneralRowMin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormGeneralRowMin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormGeneralRowMin}
 */
proto.titanium.ChallengeFormGeneralRowMin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormGeneralRowMin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormGeneralRowMin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormGeneralRowMin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double value = 1;
 * @return {number}
 */
proto.titanium.ChallengeFormGeneralRowMin.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeFormGeneralRowMin} returns this
 */
proto.titanium.ChallengeFormGeneralRowMin.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormGeneralRowMaxLength.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormGeneralRowMaxLength} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormGeneralRowMaxLength}
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormGeneralRowMaxLength;
  return proto.titanium.ChallengeFormGeneralRowMaxLength.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormGeneralRowMaxLength} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormGeneralRowMaxLength}
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormGeneralRowMaxLength.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormGeneralRowMaxLength} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeFormGeneralRowMaxLength} returns this
 */
proto.titanium.ChallengeFormGeneralRowMaxLength.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFormGeneralRowMinLength.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFormGeneralRowMinLength.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFormGeneralRowMinLength} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMinLength.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFormGeneralRowMinLength}
 */
proto.titanium.ChallengeFormGeneralRowMinLength.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFormGeneralRowMinLength;
  return proto.titanium.ChallengeFormGeneralRowMinLength.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFormGeneralRowMinLength} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFormGeneralRowMinLength}
 */
proto.titanium.ChallengeFormGeneralRowMinLength.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFormGeneralRowMinLength.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFormGeneralRowMinLength.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFormGeneralRowMinLength} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFormGeneralRowMinLength.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.titanium.ChallengeFormGeneralRowMinLength.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeFormGeneralRowMinLength} returns this
 */
proto.titanium.ChallengeFormGeneralRowMinLength.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeCreateRequest.repeatedFields_ = [8,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    evidenceType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    submittedDate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    submittedId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    submittedUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    date: jspb.Message.getFieldWithDefault(msg, 6, ""),
    time: jspb.Message.getFieldWithDefault(msg, 7, ""),
    generalFieldsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    note: jspb.Message.getFieldWithDefault(msg, 9, ""),
    attachmentsList: jspb.Message.toObjectList(msg.getAttachmentsList(),
    proto.titanium.Attachment.toObject, includeInstance),
    traceName: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeCreateRequest}
 */
proto.titanium.ChallengeCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeCreateRequest;
  return proto.titanium.ChallengeCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeCreateRequest}
 */
proto.titanium.ChallengeCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {!proto.titanium.EvidenceType} */ (reader.readEnum());
      msg.setEvidenceType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addGeneralFields(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 10:
      var value = new proto.titanium.Attachment;
      reader.readMessage(value,proto.titanium.Attachment.deserializeBinaryFromReader);
      msg.addAttachments(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvidenceType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSubmittedDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubmittedId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSubmittedUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGeneralFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.titanium.Attachment.serializeBinaryToWriter
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EvidenceType evidence_type = 2;
 * @return {!proto.titanium.EvidenceType}
 */
proto.titanium.ChallengeCreateRequest.prototype.getEvidenceType = function() {
  return /** @type {!proto.titanium.EvidenceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.titanium.EvidenceType} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setEvidenceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string submitted_date = 3;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getSubmittedDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setSubmittedDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string submitted_id = 4;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getSubmittedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setSubmittedId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string submitted_url = 5;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getSubmittedUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setSubmittedUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string date = 6;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string time = 7;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string general_fields = 8;
 * @return {!Array<string>}
 */
proto.titanium.ChallengeCreateRequest.prototype.getGeneralFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setGeneralFieldsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.addGeneralFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.clearGeneralFieldsList = function() {
  return this.setGeneralFieldsList([]);
};


/**
 * optional string note = 9;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated Attachment attachments = 10;
 * @return {!Array<!proto.titanium.Attachment>}
 */
proto.titanium.ChallengeCreateRequest.prototype.getAttachmentsList = function() {
  return /** @type{!Array<!proto.titanium.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.Attachment, 10));
};


/**
 * @param {!Array<!proto.titanium.Attachment>} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
*/
proto.titanium.ChallengeCreateRequest.prototype.setAttachmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.titanium.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.Attachment}
 */
proto.titanium.ChallengeCreateRequest.prototype.addAttachments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.titanium.Attachment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.clearAttachmentsList = function() {
  return this.setAttachmentsList([]);
};


/**
 * optional string trace_name = 11;
 * @return {string}
 */
proto.titanium.ChallengeCreateRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateRequest} returns this
 */
proto.titanium.ChallengeCreateRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ChallengeCreateResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ChallengeCreateResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ChallengeCreateResponse.ResponseCase}
 */
proto.titanium.ChallengeCreateResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ChallengeCreateResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ChallengeCreateResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ChallengeCreateResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeCreateResponse}
 */
proto.titanium.ChallengeCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeCreateResponse;
  return proto.titanium.ChallengeCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeCreateResponse}
 */
proto.titanium.ChallengeCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChallengeCreateResponseData;
      reader.readMessage(value,proto.titanium.ChallengeCreateResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ChallengeCreateResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChallengeCreateResponseData data = 1;
 * @return {?proto.titanium.ChallengeCreateResponseData}
 */
proto.titanium.ChallengeCreateResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ChallengeCreateResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeCreateResponseData, 1));
};


/**
 * @param {?proto.titanium.ChallengeCreateResponseData|undefined} value
 * @return {!proto.titanium.ChallengeCreateResponse} returns this
*/
proto.titanium.ChallengeCreateResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ChallengeCreateResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeCreateResponse} returns this
 */
proto.titanium.ChallengeCreateResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeCreateResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ChallengeCreateResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ChallengeCreateResponse} returns this
*/
proto.titanium.ChallengeCreateResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ChallengeCreateResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeCreateResponse} returns this
 */
proto.titanium.ChallengeCreateResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeCreateResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeCreateResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeCreateResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeCreateResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeCreateResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeCreateResponseData}
 */
proto.titanium.ChallengeCreateResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeCreateResponseData;
  return proto.titanium.ChallengeCreateResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeCreateResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeCreateResponseData}
 */
proto.titanium.ChallengeCreateResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeCreateResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeCreateResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeCreateResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeCreateResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ticket_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeCreateResponseData.prototype.getTicketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeCreateResponseData} returns this
 */
proto.titanium.ChallengeCreateResponseData.prototype.setTicketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFreezeStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFreezeStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFreezeStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFreezeStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusRunId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFreezeStatusRequest}
 */
proto.titanium.ChallengeFreezeStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFreezeStatusRequest;
  return proto.titanium.ChallengeFreezeStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFreezeStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFreezeStatusRequest}
 */
proto.titanium.ChallengeFreezeStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusRunId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFreezeStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFreezeStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFreezeStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFreezeStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string consensus_run_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeFreezeStatusRequest.prototype.getConsensusRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFreezeStatusRequest} returns this
 */
proto.titanium.ChallengeFreezeStatusRequest.prototype.setConsensusRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeFreezeActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeFreezeActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeFreezeActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFreezeActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consensusRunId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeFreezeActionRequest}
 */
proto.titanium.ChallengeFreezeActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeFreezeActionRequest;
  return proto.titanium.ChallengeFreezeActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeFreezeActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeFreezeActionRequest}
 */
proto.titanium.ChallengeFreezeActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusRunId(value);
      break;
    case 2:
      var value = /** @type {!proto.titanium.ChallengeFreezeAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeFreezeActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeFreezeActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeFreezeActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeFreezeActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsensusRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string consensus_run_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeFreezeActionRequest.prototype.getConsensusRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeFreezeActionRequest} returns this
 */
proto.titanium.ChallengeFreezeActionRequest.prototype.setConsensusRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ChallengeFreezeAction action = 2;
 * @return {!proto.titanium.ChallengeFreezeAction}
 */
proto.titanium.ChallengeFreezeActionRequest.prototype.getAction = function() {
  return /** @type {!proto.titanium.ChallengeFreezeAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.titanium.ChallengeFreezeAction} value
 * @return {!proto.titanium.ChallengeFreezeActionRequest} returns this
 */
proto.titanium.ChallengeFreezeActionRequest.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeActiveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeActiveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeActiveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeActiveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderby: (f = msg.getOrderby()) && common_gateway_base_pb.OrderBy.toObject(includeInstance, f),
    limit: (f = msg.getLimit()) && common_gateway_base_pb.Limit.toObject(includeInstance, f),
    offset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    traceName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeActiveRequest}
 */
proto.titanium.ChallengeActiveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeActiveRequest;
  return proto.titanium.ChallengeActiveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeActiveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeActiveRequest}
 */
proto.titanium.ChallengeActiveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 3:
      var value = new common_gateway_base_pb.OrderBy;
      reader.readMessage(value,common_gateway_base_pb.OrderBy.deserializeBinaryFromReader);
      msg.setOrderby(value);
      break;
    case 4:
      var value = new common_gateway_base_pb.Limit;
      reader.readMessage(value,common_gateway_base_pb.Limit.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeActiveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeActiveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeActiveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeActiveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderby();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_gateway_base_pb.OrderBy.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_gateway_base_pb.Limit.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeActiveRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
 */
proto.titanium.ChallengeActiveRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string filter = 2;
 * @return {string}
 */
proto.titanium.ChallengeActiveRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
 */
proto.titanium.ChallengeActiveRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OrderBy orderBy = 3;
 * @return {?proto.titanium.OrderBy}
 */
proto.titanium.ChallengeActiveRequest.prototype.getOrderby = function() {
  return /** @type{?proto.titanium.OrderBy} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.OrderBy, 3));
};


/**
 * @param {?proto.titanium.OrderBy|undefined} value
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
*/
proto.titanium.ChallengeActiveRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
 */
proto.titanium.ChallengeActiveRequest.prototype.clearOrderby = function() {
  return this.setOrderby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeActiveRequest.prototype.hasOrderby = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Limit limit = 4;
 * @return {?proto.titanium.Limit}
 */
proto.titanium.ChallengeActiveRequest.prototype.getLimit = function() {
  return /** @type{?proto.titanium.Limit} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Limit, 4));
};


/**
 * @param {?proto.titanium.Limit|undefined} value
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
*/
proto.titanium.ChallengeActiveRequest.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
 */
proto.titanium.ChallengeActiveRequest.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeActiveRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 offset = 5;
 * @return {number}
 */
proto.titanium.ChallengeActiveRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
 */
proto.titanium.ChallengeActiveRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string trace_name = 6;
 * @return {string}
 */
proto.titanium.ChallengeActiveRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeActiveRequest} returns this
 */
proto.titanium.ChallengeActiveRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ChallengeActiveResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ChallengeActiveResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ChallengeActiveResponse.ResponseCase}
 */
proto.titanium.ChallengeActiveResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ChallengeActiveResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ChallengeActiveResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeActiveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeActiveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeActiveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeActiveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ChallengeActiveResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeActiveResponse}
 */
proto.titanium.ChallengeActiveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeActiveResponse;
  return proto.titanium.ChallengeActiveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeActiveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeActiveResponse}
 */
proto.titanium.ChallengeActiveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChallengeActiveResponseData;
      reader.readMessage(value,proto.titanium.ChallengeActiveResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeActiveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeActiveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeActiveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeActiveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ChallengeActiveResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChallengeActiveResponseData data = 1;
 * @return {?proto.titanium.ChallengeActiveResponseData}
 */
proto.titanium.ChallengeActiveResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ChallengeActiveResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeActiveResponseData, 1));
};


/**
 * @param {?proto.titanium.ChallengeActiveResponseData|undefined} value
 * @return {!proto.titanium.ChallengeActiveResponse} returns this
*/
proto.titanium.ChallengeActiveResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ChallengeActiveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeActiveResponse} returns this
 */
proto.titanium.ChallengeActiveResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeActiveResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ChallengeActiveResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ChallengeActiveResponse} returns this
*/
proto.titanium.ChallengeActiveResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ChallengeActiveResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeActiveResponse} returns this
 */
proto.titanium.ChallengeActiveResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeActiveResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeActiveResponseData.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeActiveResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeActiveResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeActiveResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeActiveResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    common_gateway_base_pb.ColumnInfo.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.titanium.ChallengeConsensusMetadata.toObject, includeInstance),
    totalRows: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeActiveResponseData}
 */
proto.titanium.ChallengeActiveResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeActiveResponseData;
  return proto.titanium.ChallengeActiveResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeActiveResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeActiveResponseData}
 */
proto.titanium.ChallengeActiveResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_gateway_base_pb.ColumnInfo;
      reader.readMessage(value,common_gateway_base_pb.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.titanium.ChallengeConsensusMetadata;
      reader.readMessage(value,proto.titanium.ChallengeConsensusMetadata.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeActiveResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeActiveResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeActiveResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeActiveResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_gateway_base_pb.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.ChallengeConsensusMetadata.serializeBinaryToWriter
    );
  }
  f = message.getTotalRows();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.titanium.ColumnInfo>}
 */
proto.titanium.ChallengeActiveResponseData.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.titanium.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.titanium.ColumnInfo>} value
 * @return {!proto.titanium.ChallengeActiveResponseData} returns this
*/
proto.titanium.ChallengeActiveResponseData.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.ChallengeActiveResponseData.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeActiveResponseData} returns this
 */
proto.titanium.ChallengeActiveResponseData.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated ChallengeConsensusMetadata rows = 2;
 * @return {!Array<!proto.titanium.ChallengeConsensusMetadata>}
 */
proto.titanium.ChallengeActiveResponseData.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.titanium.ChallengeConsensusMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ChallengeConsensusMetadata, 2));
};


/**
 * @param {!Array<!proto.titanium.ChallengeConsensusMetadata>} value
 * @return {!proto.titanium.ChallengeActiveResponseData} returns this
*/
proto.titanium.ChallengeActiveResponseData.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.ChallengeConsensusMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChallengeConsensusMetadata}
 */
proto.titanium.ChallengeActiveResponseData.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.ChallengeConsensusMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeActiveResponseData} returns this
 */
proto.titanium.ChallengeActiveResponseData.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional int32 total_rows = 3;
 * @return {number}
 */
proto.titanium.ChallengeActiveResponseData.prototype.getTotalRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeActiveResponseData} returns this
 */
proto.titanium.ChallengeActiveResponseData.prototype.setTotalRows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeConsensusMetadata.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeConsensusMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeConsensusMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeConsensusMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeConsensusMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    challengesList: jspb.Message.toObjectList(msg.getChallengesList(),
    common_gateway_base_pb.ValuesRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeConsensusMetadata}
 */
proto.titanium.ChallengeConsensusMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeConsensusMetadata;
  return proto.titanium.ChallengeConsensusMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeConsensusMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeConsensusMetadata}
 */
proto.titanium.ChallengeConsensusMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new common_gateway_base_pb.ValuesRow;
      reader.readMessage(value,common_gateway_base_pb.ValuesRow.deserializeBinaryFromReader);
      msg.addChallenges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeConsensusMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeConsensusMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeConsensusMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeConsensusMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChallengesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_gateway_base_pb.ValuesRow.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValuesRow challenges = 3;
 * @return {!Array<!proto.titanium.ValuesRow>}
 */
proto.titanium.ChallengeConsensusMetadata.prototype.getChallengesList = function() {
  return /** @type{!Array<!proto.titanium.ValuesRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.ValuesRow, 3));
};


/**
 * @param {!Array<!proto.titanium.ValuesRow>} value
 * @return {!proto.titanium.ChallengeConsensusMetadata} returns this
*/
proto.titanium.ChallengeConsensusMetadata.prototype.setChallengesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.titanium.ValuesRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ValuesRow}
 */
proto.titanium.ChallengeConsensusMetadata.prototype.addChallenges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.titanium.ValuesRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeConsensusMetadata} returns this
 */
proto.titanium.ChallengeConsensusMetadata.prototype.clearChallengesList = function() {
  return this.setChallengesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ChallengeHistoryResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ChallengeHistoryResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ChallengeHistoryResponse.ResponseCase}
 */
proto.titanium.ChallengeHistoryResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ChallengeHistoryResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ChallengeHistoryResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ChallengeHistoryResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeHistoryResponse}
 */
proto.titanium.ChallengeHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeHistoryResponse;
  return proto.titanium.ChallengeHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeHistoryResponse}
 */
proto.titanium.ChallengeHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChallengeHistoryResponseData;
      reader.readMessage(value,proto.titanium.ChallengeHistoryResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ChallengeHistoryResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChallengeHistoryResponseData data = 1;
 * @return {?proto.titanium.ChallengeHistoryResponseData}
 */
proto.titanium.ChallengeHistoryResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ChallengeHistoryResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeHistoryResponseData, 1));
};


/**
 * @param {?proto.titanium.ChallengeHistoryResponseData|undefined} value
 * @return {!proto.titanium.ChallengeHistoryResponse} returns this
*/
proto.titanium.ChallengeHistoryResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ChallengeHistoryResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeHistoryResponse} returns this
 */
proto.titanium.ChallengeHistoryResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeHistoryResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ChallengeHistoryResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ChallengeHistoryResponse} returns this
*/
proto.titanium.ChallengeHistoryResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ChallengeHistoryResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeHistoryResponse} returns this
 */
proto.titanium.ChallengeHistoryResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeHistoryResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeHistoryResponseData.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeHistoryResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeHistoryResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeHistoryResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeHistoryResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    common_gateway_base_pb.ColumnInfo.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    common_gateway_base_pb.ValuesRow.toObject, includeInstance),
    totalRows: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeHistoryResponseData}
 */
proto.titanium.ChallengeHistoryResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeHistoryResponseData;
  return proto.titanium.ChallengeHistoryResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeHistoryResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeHistoryResponseData}
 */
proto.titanium.ChallengeHistoryResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_gateway_base_pb.ColumnInfo;
      reader.readMessage(value,common_gateway_base_pb.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.ValuesRow;
      reader.readMessage(value,common_gateway_base_pb.ValuesRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeHistoryResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeHistoryResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeHistoryResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeHistoryResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_gateway_base_pb.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_gateway_base_pb.ValuesRow.serializeBinaryToWriter
    );
  }
  f = message.getTotalRows();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.titanium.ColumnInfo>}
 */
proto.titanium.ChallengeHistoryResponseData.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.titanium.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.titanium.ColumnInfo>} value
 * @return {!proto.titanium.ChallengeHistoryResponseData} returns this
*/
proto.titanium.ChallengeHistoryResponseData.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.ChallengeHistoryResponseData.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeHistoryResponseData} returns this
 */
proto.titanium.ChallengeHistoryResponseData.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated ValuesRow rows = 2;
 * @return {!Array<!proto.titanium.ValuesRow>}
 */
proto.titanium.ChallengeHistoryResponseData.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.titanium.ValuesRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.ValuesRow, 2));
};


/**
 * @param {!Array<!proto.titanium.ValuesRow>} value
 * @return {!proto.titanium.ChallengeHistoryResponseData} returns this
*/
proto.titanium.ChallengeHistoryResponseData.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.ValuesRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ValuesRow}
 */
proto.titanium.ChallengeHistoryResponseData.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.ValuesRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeHistoryResponseData} returns this
 */
proto.titanium.ChallengeHistoryResponseData.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional int32 total_rows = 3;
 * @return {number}
 */
proto.titanium.ChallengeHistoryResponseData.prototype.getTotalRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeHistoryResponseData} returns this
 */
proto.titanium.ChallengeHistoryResponseData.prototype.setTotalRows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeDecisionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeDecisionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeDecisionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeDecisionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    challengeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    decision: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeDecisionRequest}
 */
proto.titanium.ChallengeDecisionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeDecisionRequest;
  return proto.titanium.ChallengeDecisionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeDecisionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeDecisionRequest}
 */
proto.titanium.ChallengeDecisionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChallengeId(value);
      break;
    case 3:
      var value = /** @type {!proto.titanium.Decision} */ (reader.readEnum());
      msg.setDecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeDecisionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeDecisionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeDecisionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeDecisionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChallengeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDecision();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeDecisionRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeDecisionRequest} returns this
 */
proto.titanium.ChallengeDecisionRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string challenge_id = 2;
 * @return {string}
 */
proto.titanium.ChallengeDecisionRequest.prototype.getChallengeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeDecisionRequest} returns this
 */
proto.titanium.ChallengeDecisionRequest.prototype.setChallengeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Decision decision = 3;
 * @return {!proto.titanium.Decision}
 */
proto.titanium.ChallengeDecisionRequest.prototype.getDecision = function() {
  return /** @type {!proto.titanium.Decision} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.titanium.Decision} value
 * @return {!proto.titanium.ChallengeDecisionRequest} returns this
 */
proto.titanium.ChallengeDecisionRequest.prototype.setDecision = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderby: (f = msg.getOrderby()) && common_gateway_base_pb.OrderBy.toObject(includeInstance, f),
    limit: (f = msg.getLimit()) && common_gateway_base_pb.Limit.toObject(includeInstance, f),
    offset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    traceName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeHistoryRequest}
 */
proto.titanium.ChallengeHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeHistoryRequest;
  return proto.titanium.ChallengeHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeHistoryRequest}
 */
proto.titanium.ChallengeHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 3:
      var value = new common_gateway_base_pb.OrderBy;
      reader.readMessage(value,common_gateway_base_pb.OrderBy.deserializeBinaryFromReader);
      msg.setOrderby(value);
      break;
    case 4:
      var value = new common_gateway_base_pb.Limit;
      reader.readMessage(value,common_gateway_base_pb.Limit.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderby();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_gateway_base_pb.OrderBy.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_gateway_base_pb.Limit.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeHistoryRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
 */
proto.titanium.ChallengeHistoryRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string filter = 2;
 * @return {string}
 */
proto.titanium.ChallengeHistoryRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
 */
proto.titanium.ChallengeHistoryRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OrderBy orderBy = 3;
 * @return {?proto.titanium.OrderBy}
 */
proto.titanium.ChallengeHistoryRequest.prototype.getOrderby = function() {
  return /** @type{?proto.titanium.OrderBy} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.OrderBy, 3));
};


/**
 * @param {?proto.titanium.OrderBy|undefined} value
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
*/
proto.titanium.ChallengeHistoryRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
 */
proto.titanium.ChallengeHistoryRequest.prototype.clearOrderby = function() {
  return this.setOrderby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeHistoryRequest.prototype.hasOrderby = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Limit limit = 4;
 * @return {?proto.titanium.Limit}
 */
proto.titanium.ChallengeHistoryRequest.prototype.getLimit = function() {
  return /** @type{?proto.titanium.Limit} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Limit, 4));
};


/**
 * @param {?proto.titanium.Limit|undefined} value
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
*/
proto.titanium.ChallengeHistoryRequest.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
 */
proto.titanium.ChallengeHistoryRequest.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeHistoryRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 offset = 5;
 * @return {number}
 */
proto.titanium.ChallengeHistoryRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
 */
proto.titanium.ChallengeHistoryRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string trace_name = 6;
 * @return {string}
 */
proto.titanium.ChallengeHistoryRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeHistoryRequest} returns this
 */
proto.titanium.ChallengeHistoryRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consensusRunTimestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    snapTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    date: jspb.Message.getFieldWithDefault(msg, 4, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    orderby: (f = msg.getOrderby()) && common_gateway_base_pb.OrderBy.toObject(includeInstance, f),
    limit: (f = msg.getLimit()) && common_gateway_base_pb.Limit.toObject(includeInstance, f),
    offset: jspb.Message.getFieldWithDefault(msg, 8, 0),
    traceName: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeListRequest}
 */
proto.titanium.ChallengeListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeListRequest;
  return proto.titanium.ChallengeListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeListRequest}
 */
proto.titanium.ChallengeListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusRunTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 6:
      var value = new common_gateway_base_pb.OrderBy;
      reader.readMessage(value,common_gateway_base_pb.OrderBy.deserializeBinaryFromReader);
      msg.setOrderby(value);
      break;
    case 7:
      var value = new common_gateway_base_pb.Limit;
      reader.readMessage(value,common_gateway_base_pb.Limit.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsensusRunTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSnapTime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOrderby();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_gateway_base_pb.OrderBy.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_gateway_base_pb.Limit.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChallengeListRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consensus_run_timestamp = 2;
 * @return {string}
 */
proto.titanium.ChallengeListRequest.prototype.getConsensusRunTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.setConsensusRunTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string snap_time = 3;
 * @return {string}
 */
proto.titanium.ChallengeListRequest.prototype.getSnapTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.setSnapTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string date = 4;
 * @return {string}
 */
proto.titanium.ChallengeListRequest.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string filter = 5;
 * @return {string}
 */
proto.titanium.ChallengeListRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional OrderBy orderBy = 6;
 * @return {?proto.titanium.OrderBy}
 */
proto.titanium.ChallengeListRequest.prototype.getOrderby = function() {
  return /** @type{?proto.titanium.OrderBy} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.OrderBy, 6));
};


/**
 * @param {?proto.titanium.OrderBy|undefined} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
*/
proto.titanium.ChallengeListRequest.prototype.setOrderby = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.clearOrderby = function() {
  return this.setOrderby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeListRequest.prototype.hasOrderby = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Limit limit = 7;
 * @return {?proto.titanium.Limit}
 */
proto.titanium.ChallengeListRequest.prototype.getLimit = function() {
  return /** @type{?proto.titanium.Limit} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Limit, 7));
};


/**
 * @param {?proto.titanium.Limit|undefined} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
*/
proto.titanium.ChallengeListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeListRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 offset = 8;
 * @return {number}
 */
proto.titanium.ChallengeListRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string trace_name = 9;
 * @return {string}
 */
proto.titanium.ChallengeListRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChallengeListRequest} returns this
 */
proto.titanium.ChallengeListRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ChallengeListResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ChallengeListResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ChallengeListResponse.ResponseCase}
 */
proto.titanium.ChallengeListResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ChallengeListResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ChallengeListResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ChallengeListResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeListResponse}
 */
proto.titanium.ChallengeListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeListResponse;
  return proto.titanium.ChallengeListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeListResponse}
 */
proto.titanium.ChallengeListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChallengeListResponseData;
      reader.readMessage(value,proto.titanium.ChallengeListResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ChallengeListResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChallengeListResponseData data = 1;
 * @return {?proto.titanium.ChallengeListResponseData}
 */
proto.titanium.ChallengeListResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ChallengeListResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChallengeListResponseData, 1));
};


/**
 * @param {?proto.titanium.ChallengeListResponseData|undefined} value
 * @return {!proto.titanium.ChallengeListResponse} returns this
*/
proto.titanium.ChallengeListResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ChallengeListResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeListResponse} returns this
 */
proto.titanium.ChallengeListResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeListResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ChallengeListResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ChallengeListResponse} returns this
*/
proto.titanium.ChallengeListResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ChallengeListResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChallengeListResponse} returns this
 */
proto.titanium.ChallengeListResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChallengeListResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeListResponseData.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeListResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeListResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeListResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    common_gateway_base_pb.ColumnInfo.toObject, includeInstance),
    challengesList: jspb.Message.toObjectList(msg.getChallengesList(),
    proto.titanium.ChallengeListMetadata.toObject, includeInstance),
    totalRows: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeListResponseData}
 */
proto.titanium.ChallengeListResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeListResponseData;
  return proto.titanium.ChallengeListResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeListResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeListResponseData}
 */
proto.titanium.ChallengeListResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_gateway_base_pb.ColumnInfo;
      reader.readMessage(value,common_gateway_base_pb.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.titanium.ChallengeListMetadata;
      reader.readMessage(value,proto.titanium.ChallengeListMetadata.deserializeBinaryFromReader);
      msg.addChallenges(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeListResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeListResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeListResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_gateway_base_pb.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getChallengesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.ChallengeListMetadata.serializeBinaryToWriter
    );
  }
  f = message.getTotalRows();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.titanium.ColumnInfo>}
 */
proto.titanium.ChallengeListResponseData.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.titanium.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.titanium.ColumnInfo>} value
 * @return {!proto.titanium.ChallengeListResponseData} returns this
*/
proto.titanium.ChallengeListResponseData.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ColumnInfo}
 */
proto.titanium.ChallengeListResponseData.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeListResponseData} returns this
 */
proto.titanium.ChallengeListResponseData.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated ChallengeListMetadata challenges = 2;
 * @return {!Array<!proto.titanium.ChallengeListMetadata>}
 */
proto.titanium.ChallengeListResponseData.prototype.getChallengesList = function() {
  return /** @type{!Array<!proto.titanium.ChallengeListMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ChallengeListMetadata, 2));
};


/**
 * @param {!Array<!proto.titanium.ChallengeListMetadata>} value
 * @return {!proto.titanium.ChallengeListResponseData} returns this
*/
proto.titanium.ChallengeListResponseData.prototype.setChallengesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.ChallengeListMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChallengeListMetadata}
 */
proto.titanium.ChallengeListResponseData.prototype.addChallenges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.ChallengeListMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeListResponseData} returns this
 */
proto.titanium.ChallengeListResponseData.prototype.clearChallengesList = function() {
  return this.setChallengesList([]);
};


/**
 * optional int32 total_rows = 3;
 * @return {number}
 */
proto.titanium.ChallengeListResponseData.prototype.getTotalRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChallengeListResponseData} returns this
 */
proto.titanium.ChallengeListResponseData.prototype.setTotalRows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChallengeListMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChallengeListMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChallengeListMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChallengeListMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    google_protobuf_struct_pb.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChallengeListMetadata}
 */
proto.titanium.ChallengeListMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChallengeListMetadata;
  return proto.titanium.ChallengeListMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChallengeListMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChallengeListMetadata}
 */
proto.titanium.ChallengeListMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChallengeListMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChallengeListMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChallengeListMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChallengeListMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Value values = 1;
 * @return {!Array<!proto.google.protobuf.Value>}
 */
proto.titanium.ChallengeListMetadata.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.google.protobuf.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Value>} value
 * @return {!proto.titanium.ChallengeListMetadata} returns this
*/
proto.titanium.ChallengeListMetadata.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Value}
 */
proto.titanium.ChallengeListMetadata.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChallengeListMetadata} returns this
 */
proto.titanium.ChallengeListMetadata.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetAttachmentUploadUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetAttachmentUploadUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetAttachmentUploadUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submittedId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetAttachmentUploadUrlRequest}
 */
proto.titanium.GetAttachmentUploadUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetAttachmentUploadUrlRequest;
  return proto.titanium.GetAttachmentUploadUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetAttachmentUploadUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetAttachmentUploadUrlRequest}
 */
proto.titanium.GetAttachmentUploadUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetAttachmentUploadUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetAttachmentUploadUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetAttachmentUploadUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmittedId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetAttachmentUploadUrlRequest} returns this
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitted_id = 2;
 * @return {string}
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.getSubmittedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetAttachmentUploadUrlRequest} returns this
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.setSubmittedId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string file_name = 3;
 * @return {string}
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetAttachmentUploadUrlRequest} returns this
 */
proto.titanium.GetAttachmentUploadUrlRequest.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.GetAttachmentUploadUrlResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.GetAttachmentUploadUrlResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.GetAttachmentUploadUrlResponse.ResponseCase}
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.GetAttachmentUploadUrlResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.GetAttachmentUploadUrlResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetAttachmentUploadUrlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetAttachmentUploadUrlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetAttachmentUploadUrlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse}
 */
proto.titanium.GetAttachmentUploadUrlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetAttachmentUploadUrlResponse;
  return proto.titanium.GetAttachmentUploadUrlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetAttachmentUploadUrlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse}
 */
proto.titanium.GetAttachmentUploadUrlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl;
      reader.readMessage(value,proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetAttachmentUploadUrlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetAttachmentUploadUrlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetAttachmentUploadUrlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.toObject = function(includeInstance, msg) {
  var f, obj = {
    uploadUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attachmentId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl}
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl;
  return proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl}
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttachmentId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUploadUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttachmentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string upload_url = 1;
 * @return {string}
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.getUploadUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl} returns this
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.setUploadUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string attachment_id = 2;
 * @return {string}
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.getAttachmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl} returns this
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.setAttachmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string file_name = 3;
 * @return {string}
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl} returns this
 */
proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional AttachmentUploadUrl data = 1;
 * @return {?proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl}
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl} */ (
    jspb.Message.getWrapperField(this, proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl, 1));
};


/**
 * @param {?proto.titanium.GetAttachmentUploadUrlResponse.AttachmentUploadUrl|undefined} value
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse} returns this
*/
proto.titanium.GetAttachmentUploadUrlResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.GetAttachmentUploadUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse} returns this
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse} returns this
*/
proto.titanium.GetAttachmentUploadUrlResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.GetAttachmentUploadUrlResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetAttachmentUploadUrlResponse} returns this
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetAttachmentUploadUrlResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Attachment.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Attachment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Attachment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Attachment.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attachmentId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Attachment}
 */
proto.titanium.Attachment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Attachment;
  return proto.titanium.Attachment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Attachment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Attachment}
 */
proto.titanium.Attachment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttachmentId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Attachment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Attachment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Attachment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Attachment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttachmentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.Attachment.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Attachment} returns this
 */
proto.titanium.Attachment.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string attachment_id = 2;
 * @return {string}
 */
proto.titanium.Attachment.prototype.getAttachmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Attachment} returns this
 */
proto.titanium.Attachment.prototype.setAttachmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.titanium.Attachment.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Attachment} returns this
 */
proto.titanium.Attachment.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetChallengeDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetChallengeDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetChallengeDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submittedDate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    submissionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    traceName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    consensusRunId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetChallengeDetailsRequest}
 */
proto.titanium.GetChallengeDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetChallengeDetailsRequest;
  return proto.titanium.GetChallengeDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetChallengeDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetChallengeDetailsRequest}
 */
proto.titanium.GetChallengeDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmissionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusRunId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetChallengeDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetChallengeDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetChallengeDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmittedDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubmissionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConsensusRunId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsRequest} returns this
 */
proto.titanium.GetChallengeDetailsRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitted_date = 2;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsRequest.prototype.getSubmittedDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsRequest} returns this
 */
proto.titanium.GetChallengeDetailsRequest.prototype.setSubmittedDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string submission_id = 3;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsRequest.prototype.getSubmissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsRequest} returns this
 */
proto.titanium.GetChallengeDetailsRequest.prototype.setSubmissionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string trace_name = 4;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsRequest} returns this
 */
proto.titanium.GetChallengeDetailsRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string consensus_run_id = 5;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsRequest.prototype.getConsensusRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsRequest} returns this
 */
proto.titanium.GetChallengeDetailsRequest.prototype.setConsensusRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.GetChallengeDetailsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.GetChallengeDetailsResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.GetChallengeDetailsResponse.ResponseCase}
 */
proto.titanium.GetChallengeDetailsResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.GetChallengeDetailsResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.GetChallengeDetailsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetChallengeDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetChallengeDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetChallengeDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.GetChallengeDetailsResponse.Result.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetChallengeDetailsResponse}
 */
proto.titanium.GetChallengeDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetChallengeDetailsResponse;
  return proto.titanium.GetChallengeDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetChallengeDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetChallengeDetailsResponse}
 */
proto.titanium.GetChallengeDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.GetChallengeDetailsResponse.Result;
      reader.readMessage(value,proto.titanium.GetChallengeDetailsResponse.Result.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetChallengeDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetChallengeDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetChallengeDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.GetChallengeDetailsResponse.Result.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.GetChallengeDetailsResponse.Result.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetChallengeDetailsResponse.Result.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetChallengeDetailsResponse.Result} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsResponse.Result.toObject = function(includeInstance, msg) {
  var f, obj = {
    challengeDataMap: (f = msg.getChallengeDataMap()) ? f.toObject(includeInstance, undefined) : [],
    commonChallengeData: (f = msg.getCommonChallengeData()) && proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.toObject(includeInstance, f),
    attachmentsList: jspb.Message.toObjectList(msg.getAttachmentsList(),
    proto.titanium.Attachment.toObject, includeInstance),
    totalnumberMap: (f = msg.getTotalnumberMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result}
 */
proto.titanium.GetChallengeDetailsResponse.Result.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetChallengeDetailsResponse.Result;
  return proto.titanium.GetChallengeDetailsResponse.Result.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetChallengeDetailsResponse.Result} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result}
 */
proto.titanium.GetChallengeDetailsResponse.Result.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getChallengeDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 2:
      var value = new proto.titanium.GetChallengeDetailsResponse.CommonChallengeData;
      reader.readMessage(value,proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.deserializeBinaryFromReader);
      msg.setCommonChallengeData(value);
      break;
    case 3:
      var value = new proto.titanium.Attachment;
      reader.readMessage(value,proto.titanium.Attachment.deserializeBinaryFromReader);
      msg.addAttachments(value);
      break;
    case 4:
      var value = msg.getTotalnumberMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetChallengeDetailsResponse.Result.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetChallengeDetailsResponse.Result} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsResponse.Result.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChallengeDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCommonChallengeData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.serializeBinaryToWriter
    );
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.titanium.Attachment.serializeBinaryToWriter
    );
  }
  f = message.getTotalnumberMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * map<string, string> challenge_data = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.getChallengeDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result} returns this
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.clearChallengeDataMap = function() {
  this.getChallengeDataMap().clear();
  return this;};


/**
 * optional CommonChallengeData common_challenge_data = 2;
 * @return {?proto.titanium.GetChallengeDetailsResponse.CommonChallengeData}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.getCommonChallengeData = function() {
  return /** @type{?proto.titanium.GetChallengeDetailsResponse.CommonChallengeData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.GetChallengeDetailsResponse.CommonChallengeData, 2));
};


/**
 * @param {?proto.titanium.GetChallengeDetailsResponse.CommonChallengeData|undefined} value
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result} returns this
*/
proto.titanium.GetChallengeDetailsResponse.Result.prototype.setCommonChallengeData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result} returns this
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.clearCommonChallengeData = function() {
  return this.setCommonChallengeData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.hasCommonChallengeData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Attachment attachments = 3;
 * @return {!Array<!proto.titanium.Attachment>}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.getAttachmentsList = function() {
  return /** @type{!Array<!proto.titanium.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.Attachment, 3));
};


/**
 * @param {!Array<!proto.titanium.Attachment>} value
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result} returns this
*/
proto.titanium.GetChallengeDetailsResponse.Result.prototype.setAttachmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.titanium.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.Attachment}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.addAttachments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.titanium.Attachment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result} returns this
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.clearAttachmentsList = function() {
  return this.setAttachmentsList([]);
};


/**
 * map<string, int32> totalNumber = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.getTotalnumberMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.titanium.GetChallengeDetailsResponse.Result} returns this
 */
proto.titanium.GetChallengeDetailsResponse.Result.prototype.clearTotalnumberMap = function() {
  this.getTotalnumberMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: jspb.Message.getFieldWithDefault(msg, 2, ""),
    evidenceType: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData}
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.GetChallengeDetailsResponse.CommonChallengeData;
  return proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData}
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvidenceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEvidenceType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string date = 1;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData} returns this
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string time = 2;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData} returns this
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.setTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string evidence_type = 3;
 * @return {string}
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.getEvidenceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.GetChallengeDetailsResponse.CommonChallengeData} returns this
 */
proto.titanium.GetChallengeDetailsResponse.CommonChallengeData.prototype.setEvidenceType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Result data = 1;
 * @return {?proto.titanium.GetChallengeDetailsResponse.Result}
 */
proto.titanium.GetChallengeDetailsResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.GetChallengeDetailsResponse.Result} */ (
    jspb.Message.getWrapperField(this, proto.titanium.GetChallengeDetailsResponse.Result, 1));
};


/**
 * @param {?proto.titanium.GetChallengeDetailsResponse.Result|undefined} value
 * @return {!proto.titanium.GetChallengeDetailsResponse} returns this
*/
proto.titanium.GetChallengeDetailsResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.GetChallengeDetailsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetChallengeDetailsResponse} returns this
 */
proto.titanium.GetChallengeDetailsResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetChallengeDetailsResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.GetChallengeDetailsResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.GetChallengeDetailsResponse} returns this
*/
proto.titanium.GetChallengeDetailsResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.GetChallengeDetailsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.GetChallengeDetailsResponse} returns this
 */
proto.titanium.GetChallengeDetailsResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.GetChallengeDetailsResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.titanium.ChallengeFreezeAction = {
  CHALLENGE_FREEZE_ACTION_UNSPECIFIED: 0,
  CHALLENGE_FREEZE_ACTION_ENABLE: 1,
  CHALLENGE_FREEZE_ACTION_DISABLE: 2
};

/**
 * @enum {number}
 */
proto.titanium.EvidenceType = {
  EVIDENCE_TYPE_UNSPECIFIED: 0,
  TRADE: 1,
  ORDER: 2
};

goog.object.extend(exports, proto.titanium);
