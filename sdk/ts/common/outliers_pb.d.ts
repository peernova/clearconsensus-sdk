/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: common/outliers.proto

import * as jspb from "google-protobuf";
import * as common_gateway_base_pb from "../common/gateway_base_pb";

export class OutliersRequest extends jspb.Message {
  hasLimit(): boolean;
  clearLimit(): void;
  getLimit(): common_gateway_base_pb.Limit | undefined;
  setLimit(value?: common_gateway_base_pb.Limit): void;

  getOffset(): number;
  setOffset(value: number): void;

  hasOrderby(): boolean;
  clearOrderby(): void;
  getOrderby(): common_gateway_base_pb.OrderBy | undefined;
  setOrderby(value?: common_gateway_base_pb.OrderBy): void;

  getFilter(): string;
  setFilter(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): OutliersRequest.AsObject;
  static toObject(includeInstance: boolean, msg: OutliersRequest): OutliersRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: OutliersRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): OutliersRequest;
  static deserializeBinaryFromReader(message: OutliersRequest, reader: jspb.BinaryReader): OutliersRequest;
}

export namespace OutliersRequest {
  export type AsObject = {
    limit?: common_gateway_base_pb.Limit.AsObject,
    offset: number,
    orderby?: common_gateway_base_pb.OrderBy.AsObject,
    filter: string,
  }
}

export class OutliersResponse extends jspb.Message {
  hasData(): boolean;
  clearData(): void;
  getData(): OutliersResponseData | undefined;
  setData(value?: OutliersResponseData): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  getResponseCase(): OutliersResponse.ResponseCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): OutliersResponse.AsObject;
  static toObject(includeInstance: boolean, msg: OutliersResponse): OutliersResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: OutliersResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): OutliersResponse;
  static deserializeBinaryFromReader(message: OutliersResponse, reader: jspb.BinaryReader): OutliersResponse;
}

export namespace OutliersResponse {
  export type AsObject = {
    data?: OutliersResponseData.AsObject,
    error?: common_gateway_base_pb.Error.AsObject,
  }

  export enum ResponseCase {
    RESPONSE_NOT_SET = 0,
    DATA = 1,
    ERROR = 2,
  }
}

export class OutliersResponseData extends jspb.Message {
  clearColumnsList(): void;
  getColumnsList(): Array<common_gateway_base_pb.ColumnInfo>;
  setColumnsList(value: Array<common_gateway_base_pb.ColumnInfo>): void;
  addColumns(value?: common_gateway_base_pb.ColumnInfo, index?: number): common_gateway_base_pb.ColumnInfo;

  clearRowsList(): void;
  getRowsList(): Array<OutliersRow>;
  setRowsList(value: Array<OutliersRow>): void;
  addRows(value?: OutliersRow, index?: number): OutliersRow;

  getTotalRows(): number;
  setTotalRows(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): OutliersResponseData.AsObject;
  static toObject(includeInstance: boolean, msg: OutliersResponseData): OutliersResponseData.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: OutliersResponseData, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): OutliersResponseData;
  static deserializeBinaryFromReader(message: OutliersResponseData, reader: jspb.BinaryReader): OutliersResponseData;
}

export namespace OutliersResponseData {
  export type AsObject = {
    columnsList: Array<common_gateway_base_pb.ColumnInfo.AsObject>,
    rowsList: Array<OutliersRow.AsObject>,
    totalRows: number,
  }
}

export class OutliersRow extends jspb.Message {
  clearValuesList(): void;
  getValuesList(): Array<string>;
  setValuesList(value: Array<string>): void;
  addValues(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): OutliersRow.AsObject;
  static toObject(includeInstance: boolean, msg: OutliersRow): OutliersRow.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: OutliersRow, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): OutliersRow;
  static deserializeBinaryFromReader(message: OutliersRow, reader: jspb.BinaryReader): OutliersRow;
}

export namespace OutliersRow {
  export type AsObject = {
    valuesList: Array<string>,
  }
}

