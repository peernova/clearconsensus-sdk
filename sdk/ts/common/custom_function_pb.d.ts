/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: common/custom_function.proto

import * as jspb from "google-protobuf";
import * as common_gateway_base_pb from "../common/gateway_base_pb";

export class CustomFunctionIdentifier extends jspb.Message {
  getUid(): string;
  setUid(value: string): void;

  getName(): string;
  setName(value: string): void;

  getOutputType(): CustomFunctionIdentifier.FunctionOutputMap[keyof CustomFunctionIdentifier.FunctionOutputMap];
  setOutputType(value: CustomFunctionIdentifier.FunctionOutputMap[keyof CustomFunctionIdentifier.FunctionOutputMap]): void;

  getScope(): string;
  setScope(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomFunctionIdentifier.AsObject;
  static toObject(includeInstance: boolean, msg: CustomFunctionIdentifier): CustomFunctionIdentifier.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomFunctionIdentifier, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomFunctionIdentifier;
  static deserializeBinaryFromReader(message: CustomFunctionIdentifier, reader: jspb.BinaryReader): CustomFunctionIdentifier;
}

export namespace CustomFunctionIdentifier {
  export type AsObject = {
    uid: string,
    name: string,
    outputType: CustomFunctionIdentifier.FunctionOutputMap[keyof CustomFunctionIdentifier.FunctionOutputMap],
    scope: string,
  }

  export interface FunctionOutputMap {
    NO_TYPE: 0;
    NUMBER: 1;
    STRING: 2;
    DATE: 3;
    TIMESTAMP: 4;
  }

  export const FunctionOutput: FunctionOutputMap;
}

export class CustomFunctionUsage extends jspb.Message {
  hasIdentifier(): boolean;
  clearIdentifier(): void;
  getIdentifier(): common_gateway_base_pb.Identifier | undefined;
  setIdentifier(value?: common_gateway_base_pb.Identifier): void;

  getType(): CustomFunctionUsage.UsageTypeMap[keyof CustomFunctionUsage.UsageTypeMap];
  setType(value: CustomFunctionUsage.UsageTypeMap[keyof CustomFunctionUsage.UsageTypeMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomFunctionUsage.AsObject;
  static toObject(includeInstance: boolean, msg: CustomFunctionUsage): CustomFunctionUsage.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomFunctionUsage, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomFunctionUsage;
  static deserializeBinaryFromReader(message: CustomFunctionUsage, reader: jspb.BinaryReader): CustomFunctionUsage;
}

export namespace CustomFunctionUsage {
  export type AsObject = {
    identifier?: common_gateway_base_pb.Identifier.AsObject,
    type: CustomFunctionUsage.UsageTypeMap[keyof CustomFunctionUsage.UsageTypeMap],
  }

  export interface UsageTypeMap {
    CUSTOMFUNCTION: 0;
    VALIDATION_RULESET: 1;
    NORMALIZATION_RULESET: 2;
    MAPPING_RULESET: 3;
  }

  export const UsageType: UsageTypeMap;
}

export class CustomFunction extends jspb.Message {
  getUid(): string;
  setUid(value: string): void;

  getName(): string;
  setName(value: string): void;

  getOutputType(): CustomFunction.FunctionOutputMap[keyof CustomFunction.FunctionOutputMap];
  setOutputType(value: CustomFunction.FunctionOutputMap[keyof CustomFunction.FunctionOutputMap]): void;

  getDescriptorName(): string;
  setDescriptorName(value: string): void;

  getDefinition(): string;
  setDefinition(value: string): void;

  getCategory(): string;
  setCategory(value: string): void;

  clearUsagesList(): void;
  getUsagesList(): Array<CustomFunctionUsage>;
  setUsagesList(value: Array<CustomFunctionUsage>): void;
  addUsages(value?: CustomFunctionUsage, index?: number): CustomFunctionUsage;

  getScope(): string;
  setScope(value: string): void;

  getDescriptorType(): CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap];
  setDescriptorType(value: CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomFunction.AsObject;
  static toObject(includeInstance: boolean, msg: CustomFunction): CustomFunction.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomFunction, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomFunction;
  static deserializeBinaryFromReader(message: CustomFunction, reader: jspb.BinaryReader): CustomFunction;
}

export namespace CustomFunction {
  export type AsObject = {
    uid: string,
    name: string,
    outputType: CustomFunction.FunctionOutputMap[keyof CustomFunction.FunctionOutputMap],
    descriptorName: string,
    definition: string,
    category: string,
    usagesList: Array<CustomFunctionUsage.AsObject>,
    scope: string,
    descriptorType: CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap],
  }

  export interface FunctionOutputMap {
    NO_TYPE: 0;
    NUMBER: 1;
    STRING: 2;
    DATE: 3;
    TIMESTAMP: 4;
    BOOLEAN: 5;
  }

  export const FunctionOutput: FunctionOutputMap;
}

export class CustomFunctionGetDefinition extends jspb.Message {
  hasIdScope(): boolean;
  clearIdScope(): void;
  getIdScope(): common_gateway_base_pb.GetDefinition | undefined;
  setIdScope(value?: common_gateway_base_pb.GetDefinition): void;

  getDescriptorType(): CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap];
  setDescriptorType(value: CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomFunctionGetDefinition.AsObject;
  static toObject(includeInstance: boolean, msg: CustomFunctionGetDefinition): CustomFunctionGetDefinition.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomFunctionGetDefinition, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomFunctionGetDefinition;
  static deserializeBinaryFromReader(message: CustomFunctionGetDefinition, reader: jspb.BinaryReader): CustomFunctionGetDefinition;
}

export namespace CustomFunctionGetDefinition {
  export type AsObject = {
    idScope?: common_gateway_base_pb.GetDefinition.AsObject,
    descriptorType: CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap],
  }
}

export class CustomFunctionList extends jspb.Message {
  clearResultsList(): void;
  getResultsList(): Array<CustomFunction>;
  setResultsList(value: Array<CustomFunction>): void;
  addResults(value?: CustomFunction, index?: number): CustomFunction;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomFunctionList.AsObject;
  static toObject(includeInstance: boolean, msg: CustomFunctionList): CustomFunctionList.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomFunctionList, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomFunctionList;
  static deserializeBinaryFromReader(message: CustomFunctionList, reader: jspb.BinaryReader): CustomFunctionList;
}

export namespace CustomFunctionList {
  export type AsObject = {
    resultsList: Array<CustomFunction.AsObject>,
  }
}

export class ListCustomFunctionRequest extends jspb.Message {
  hasRequest(): boolean;
  clearRequest(): void;
  getRequest(): common_gateway_base_pb.ListRequest | undefined;
  setRequest(value?: common_gateway_base_pb.ListRequest): void;

  getDescriptorName(): string;
  setDescriptorName(value: string): void;

  getDescriptorType(): CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap];
  setDescriptorType(value: CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListCustomFunctionRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListCustomFunctionRequest): ListCustomFunctionRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ListCustomFunctionRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListCustomFunctionRequest;
  static deserializeBinaryFromReader(message: ListCustomFunctionRequest, reader: jspb.BinaryReader): ListCustomFunctionRequest;
}

export namespace ListCustomFunctionRequest {
  export type AsObject = {
    request?: common_gateway_base_pb.ListRequest.AsObject,
    descriptorName: string,
    descriptorType: CustomFunctionDescriptorTypeMap[keyof CustomFunctionDescriptorTypeMap],
  }
}

export class ListCustomFunctionResponse extends jspb.Message {
  hasData(): boolean;
  clearData(): void;
  getData(): CustomFunctionList | undefined;
  setData(value?: CustomFunctionList): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  getResponseCase(): ListCustomFunctionResponse.ResponseCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListCustomFunctionResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ListCustomFunctionResponse): ListCustomFunctionResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ListCustomFunctionResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListCustomFunctionResponse;
  static deserializeBinaryFromReader(message: ListCustomFunctionResponse, reader: jspb.BinaryReader): ListCustomFunctionResponse;
}

export namespace ListCustomFunctionResponse {
  export type AsObject = {
    data?: CustomFunctionList.AsObject,
    error?: common_gateway_base_pb.Error.AsObject,
  }

  export enum ResponseCase {
    RESPONSE_NOT_SET = 0,
    DATA = 1,
    ERROR = 2,
  }
}

export class CustomFunctionDefinition extends jspb.Message {
  getUid(): string;
  setUid(value: string): void;

  getName(): string;
  setName(value: string): void;

  getDefinition(): string;
  setDefinition(value: string): void;

  getScope(): string;
  setScope(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomFunctionDefinition.AsObject;
  static toObject(includeInstance: boolean, msg: CustomFunctionDefinition): CustomFunctionDefinition.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomFunctionDefinition, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomFunctionDefinition;
  static deserializeBinaryFromReader(message: CustomFunctionDefinition, reader: jspb.BinaryReader): CustomFunctionDefinition;
}

export namespace CustomFunctionDefinition {
  export type AsObject = {
    uid: string,
    name: string,
    definition: string,
    scope: string,
    description: string,
  }
}

export class CustomFunctionDefinitionResponse extends jspb.Message {
  hasData(): boolean;
  clearData(): void;
  getData(): CustomFunction | undefined;
  setData(value?: CustomFunction): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  getResponseCase(): CustomFunctionDefinitionResponse.ResponseCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CustomFunctionDefinitionResponse.AsObject;
  static toObject(includeInstance: boolean, msg: CustomFunctionDefinitionResponse): CustomFunctionDefinitionResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CustomFunctionDefinitionResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CustomFunctionDefinitionResponse;
  static deserializeBinaryFromReader(message: CustomFunctionDefinitionResponse, reader: jspb.BinaryReader): CustomFunctionDefinitionResponse;
}

export namespace CustomFunctionDefinitionResponse {
  export type AsObject = {
    data?: CustomFunction.AsObject,
    error?: common_gateway_base_pb.Error.AsObject,
  }

  export enum ResponseCase {
    RESPONSE_NOT_SET = 0,
    DATA = 1,
    ERROR = 2,
  }
}

export interface CustomFunctionDescriptorTypeMap {
  NO_TYPE: 0;
  DESCRIPTOR: 1;
  DBDESCRIPTOR: 2;
  NO_TYPE: 0;
  DESCRIPTOR: 1;
  DBDESCRIPTOR: 2;
}

export const CustomFunctionDescriptorType: CustomFunctionDescriptorTypeMap;

