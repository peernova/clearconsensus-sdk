/* eslint-disable */
/*Generated by GenDocu.com*/
// source: common/mapper.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_gateway_base_pb = require('../common/gateway_base_pb.js');
goog.object.extend(proto, common_gateway_base_pb);
goog.exportSymbol('proto.titanium.DescriptorPairBasedAcknowledgeResponse', null, global);
goog.exportSymbol('proto.titanium.DescriptorPairBasedAcknowledgeResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.DescriptorPairBasedGetDefinition', null, global);
goog.exportSymbol('proto.titanium.DescriptorPairBasedIdentifier', null, global);
goog.exportSymbol('proto.titanium.DescriptorPairBasedResultsList', null, global);
goog.exportSymbol('proto.titanium.DescriptorPairBasedVersionRequest', null, global);
goog.exportSymbol('proto.titanium.MappingRuleDefinition', null, global);
goog.exportSymbol('proto.titanium.MappingRuleList', null, global);
goog.exportSymbol('proto.titanium.MappingRuleList.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.MappingRuleResponse', null, global);
goog.exportSymbol('proto.titanium.MappingRuleResponse.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorPairBasedGetDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.DescriptorPairBasedGetDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorPairBasedGetDefinition.displayName = 'proto.titanium.DescriptorPairBasedGetDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.DescriptorPairBasedAcknowledgeResponse.oneofGroups_);
};
goog.inherits(proto.titanium.DescriptorPairBasedAcknowledgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorPairBasedAcknowledgeResponse.displayName = 'proto.titanium.DescriptorPairBasedAcknowledgeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.MappingRuleDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.MappingRuleDefinition.repeatedFields_, null);
};
goog.inherits(proto.titanium.MappingRuleDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.MappingRuleDefinition.displayName = 'proto.titanium.MappingRuleDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.MappingRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.MappingRuleResponse.oneofGroups_);
};
goog.inherits(proto.titanium.MappingRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.MappingRuleResponse.displayName = 'proto.titanium.MappingRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorPairBasedIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.DescriptorPairBasedIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorPairBasedIdentifier.displayName = 'proto.titanium.DescriptorPairBasedIdentifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorPairBasedResultsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.DescriptorPairBasedResultsList.repeatedFields_, null);
};
goog.inherits(proto.titanium.DescriptorPairBasedResultsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorPairBasedResultsList.displayName = 'proto.titanium.DescriptorPairBasedResultsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.MappingRuleList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.MappingRuleList.oneofGroups_);
};
goog.inherits(proto.titanium.MappingRuleList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.MappingRuleList.displayName = 'proto.titanium.MappingRuleList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.DescriptorPairBasedVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.DescriptorPairBasedVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.DescriptorPairBasedVersionRequest.displayName = 'proto.titanium.DescriptorPairBasedVersionRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorPairBasedGetDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorPairBasedGetDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedGetDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && common_gateway_base_pb.Identifier.toObject(includeInstance, f),
    scope: jspb.Message.getFieldWithDefault(msg, 2, ""),
    srcDescriptor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    destDescriptor: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorPairBasedGetDefinition}
 */
proto.titanium.DescriptorPairBasedGetDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorPairBasedGetDefinition;
  return proto.titanium.DescriptorPairBasedGetDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorPairBasedGetDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorPairBasedGetDefinition}
 */
proto.titanium.DescriptorPairBasedGetDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_gateway_base_pb.Identifier;
      reader.readMessage(value,common_gateway_base_pb.Identifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcDescriptor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestDescriptor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorPairBasedGetDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorPairBasedGetDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedGetDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_gateway_base_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSrcDescriptor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDestDescriptor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Identifier identifier = 1;
 * @return {?proto.titanium.Identifier}
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.getIdentifier = function() {
  return /** @type{?proto.titanium.Identifier} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Identifier, 1));
};


/**
 * @param {?proto.titanium.Identifier|undefined} value
 * @return {!proto.titanium.DescriptorPairBasedGetDefinition} returns this
*/
proto.titanium.DescriptorPairBasedGetDefinition.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.DescriptorPairBasedGetDefinition} returns this
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string scope = 2;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedGetDefinition} returns this
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string src_descriptor = 3;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.getSrcDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedGetDefinition} returns this
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.setSrcDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dest_descriptor = 4;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.getDestDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedGetDefinition} returns this
 */
proto.titanium.DescriptorPairBasedGetDefinition.prototype.setDestDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.DescriptorPairBasedAcknowledgeResponse.ResponseCase}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.DescriptorPairBasedAcknowledgeResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.DescriptorPairBasedAcknowledgeResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorPairBasedAcknowledgeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorPairBasedAcknowledgeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.DescriptorPairBasedIdentifier.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorPairBasedAcknowledgeResponse}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorPairBasedAcknowledgeResponse;
  return proto.titanium.DescriptorPairBasedAcknowledgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorPairBasedAcknowledgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorPairBasedAcknowledgeResponse}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.DescriptorPairBasedIdentifier;
      reader.readMessage(value,proto.titanium.DescriptorPairBasedIdentifier.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorPairBasedAcknowledgeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorPairBasedAcknowledgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.DescriptorPairBasedIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional DescriptorPairBasedIdentifier data = 1;
 * @return {?proto.titanium.DescriptorPairBasedIdentifier}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.DescriptorPairBasedIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.titanium.DescriptorPairBasedIdentifier, 1));
};


/**
 * @param {?proto.titanium.DescriptorPairBasedIdentifier|undefined} value
 * @return {!proto.titanium.DescriptorPairBasedAcknowledgeResponse} returns this
*/
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.DescriptorPairBasedAcknowledgeResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.DescriptorPairBasedAcknowledgeResponse} returns this
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.DescriptorPairBasedAcknowledgeResponse} returns this
*/
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.DescriptorPairBasedAcknowledgeResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.DescriptorPairBasedAcknowledgeResponse} returns this
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.DescriptorPairBasedAcknowledgeResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.MappingRuleDefinition.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.MappingRuleDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.MappingRuleDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.MappingRuleDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MappingRuleDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    srcDescriptor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destDescriptor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transformationsList: jspb.Message.toObjectList(msg.getTransformationsList(),
    common_gateway_base_pb.Transformation.toObject, includeInstance),
    scope: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.MappingRuleDefinition}
 */
proto.titanium.MappingRuleDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.MappingRuleDefinition;
  return proto.titanium.MappingRuleDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.MappingRuleDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.MappingRuleDefinition}
 */
proto.titanium.MappingRuleDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcDescriptor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestDescriptor(value);
      break;
    case 4:
      var value = new common_gateway_base_pb.Transformation;
      reader.readMessage(value,common_gateway_base_pb.Transformation.deserializeBinaryFromReader);
      msg.addTransformations(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.MappingRuleDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.MappingRuleDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.MappingRuleDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MappingRuleDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSrcDescriptor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestDescriptor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransformationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      common_gateway_base_pb.Transformation.serializeBinaryToWriter
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.titanium.MappingRuleDefinition.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.MappingRuleDefinition} returns this
 */
proto.titanium.MappingRuleDefinition.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string src_descriptor = 2;
 * @return {string}
 */
proto.titanium.MappingRuleDefinition.prototype.getSrcDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.MappingRuleDefinition} returns this
 */
proto.titanium.MappingRuleDefinition.prototype.setSrcDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dest_descriptor = 3;
 * @return {string}
 */
proto.titanium.MappingRuleDefinition.prototype.getDestDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.MappingRuleDefinition} returns this
 */
proto.titanium.MappingRuleDefinition.prototype.setDestDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Transformation transformations = 4;
 * @return {!Array<!proto.titanium.Transformation>}
 */
proto.titanium.MappingRuleDefinition.prototype.getTransformationsList = function() {
  return /** @type{!Array<!proto.titanium.Transformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.Transformation, 4));
};


/**
 * @param {!Array<!proto.titanium.Transformation>} value
 * @return {!proto.titanium.MappingRuleDefinition} returns this
*/
proto.titanium.MappingRuleDefinition.prototype.setTransformationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.titanium.Transformation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.Transformation}
 */
proto.titanium.MappingRuleDefinition.prototype.addTransformations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.titanium.Transformation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.MappingRuleDefinition} returns this
 */
proto.titanium.MappingRuleDefinition.prototype.clearTransformationsList = function() {
  return this.setTransformationsList([]);
};


/**
 * optional string scope = 5;
 * @return {string}
 */
proto.titanium.MappingRuleDefinition.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.MappingRuleDefinition} returns this
 */
proto.titanium.MappingRuleDefinition.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.MappingRuleResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.MappingRuleResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.MappingRuleResponse.ResponseCase}
 */
proto.titanium.MappingRuleResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.MappingRuleResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.MappingRuleResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.MappingRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.MappingRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.MappingRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MappingRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.MappingRuleDefinition.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.MappingRuleResponse}
 */
proto.titanium.MappingRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.MappingRuleResponse;
  return proto.titanium.MappingRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.MappingRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.MappingRuleResponse}
 */
proto.titanium.MappingRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.MappingRuleDefinition;
      reader.readMessage(value,proto.titanium.MappingRuleDefinition.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.MappingRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.MappingRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.MappingRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MappingRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.MappingRuleDefinition.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional MappingRuleDefinition data = 1;
 * @return {?proto.titanium.MappingRuleDefinition}
 */
proto.titanium.MappingRuleResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.MappingRuleDefinition} */ (
    jspb.Message.getWrapperField(this, proto.titanium.MappingRuleDefinition, 1));
};


/**
 * @param {?proto.titanium.MappingRuleDefinition|undefined} value
 * @return {!proto.titanium.MappingRuleResponse} returns this
*/
proto.titanium.MappingRuleResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.MappingRuleResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.MappingRuleResponse} returns this
 */
proto.titanium.MappingRuleResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.MappingRuleResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.MappingRuleResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.MappingRuleResponse} returns this
*/
proto.titanium.MappingRuleResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.MappingRuleResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.MappingRuleResponse} returns this
 */
proto.titanium.MappingRuleResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.MappingRuleResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorPairBasedIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorPairBasedIdentifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    srcDescriptor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destDescriptor: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorPairBasedIdentifier}
 */
proto.titanium.DescriptorPairBasedIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorPairBasedIdentifier;
  return proto.titanium.DescriptorPairBasedIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorPairBasedIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorPairBasedIdentifier}
 */
proto.titanium.DescriptorPairBasedIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcDescriptor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestDescriptor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorPairBasedIdentifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorPairBasedIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedIdentifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSrcDescriptor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestDescriptor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedIdentifier} returns this
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string src_descriptor = 2;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.getSrcDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedIdentifier} returns this
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.setSrcDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dest_descriptor = 3;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.getDestDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedIdentifier} returns this
 */
proto.titanium.DescriptorPairBasedIdentifier.prototype.setDestDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.DescriptorPairBasedResultsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorPairBasedResultsList.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorPairBasedResultsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorPairBasedResultsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedResultsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.titanium.DescriptorPairBasedIdentifier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorPairBasedResultsList}
 */
proto.titanium.DescriptorPairBasedResultsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorPairBasedResultsList;
  return proto.titanium.DescriptorPairBasedResultsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorPairBasedResultsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorPairBasedResultsList}
 */
proto.titanium.DescriptorPairBasedResultsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.DescriptorPairBasedIdentifier;
      reader.readMessage(value,proto.titanium.DescriptorPairBasedIdentifier.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorPairBasedResultsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorPairBasedResultsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorPairBasedResultsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedResultsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.titanium.DescriptorPairBasedIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DescriptorPairBasedIdentifier results = 1;
 * @return {!Array<!proto.titanium.DescriptorPairBasedIdentifier>}
 */
proto.titanium.DescriptorPairBasedResultsList.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.titanium.DescriptorPairBasedIdentifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.DescriptorPairBasedIdentifier, 1));
};


/**
 * @param {!Array<!proto.titanium.DescriptorPairBasedIdentifier>} value
 * @return {!proto.titanium.DescriptorPairBasedResultsList} returns this
*/
proto.titanium.DescriptorPairBasedResultsList.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.DescriptorPairBasedIdentifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.DescriptorPairBasedIdentifier}
 */
proto.titanium.DescriptorPairBasedResultsList.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.DescriptorPairBasedIdentifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.DescriptorPairBasedResultsList} returns this
 */
proto.titanium.DescriptorPairBasedResultsList.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.MappingRuleList.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.MappingRuleList.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.MappingRuleList.ResponseCase}
 */
proto.titanium.MappingRuleList.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.MappingRuleList.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.MappingRuleList.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.MappingRuleList.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.MappingRuleList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.MappingRuleList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MappingRuleList.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.DescriptorPairBasedResultsList.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.MappingRuleList}
 */
proto.titanium.MappingRuleList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.MappingRuleList;
  return proto.titanium.MappingRuleList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.MappingRuleList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.MappingRuleList}
 */
proto.titanium.MappingRuleList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.DescriptorPairBasedResultsList;
      reader.readMessage(value,proto.titanium.DescriptorPairBasedResultsList.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.MappingRuleList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.MappingRuleList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.MappingRuleList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.MappingRuleList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.DescriptorPairBasedResultsList.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional DescriptorPairBasedResultsList data = 1;
 * @return {?proto.titanium.DescriptorPairBasedResultsList}
 */
proto.titanium.MappingRuleList.prototype.getData = function() {
  return /** @type{?proto.titanium.DescriptorPairBasedResultsList} */ (
    jspb.Message.getWrapperField(this, proto.titanium.DescriptorPairBasedResultsList, 1));
};


/**
 * @param {?proto.titanium.DescriptorPairBasedResultsList|undefined} value
 * @return {!proto.titanium.MappingRuleList} returns this
*/
proto.titanium.MappingRuleList.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.MappingRuleList.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.MappingRuleList} returns this
 */
proto.titanium.MappingRuleList.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.MappingRuleList.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.MappingRuleList.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.MappingRuleList} returns this
*/
proto.titanium.MappingRuleList.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.MappingRuleList.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.MappingRuleList} returns this
 */
proto.titanium.MappingRuleList.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.MappingRuleList.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.DescriptorPairBasedVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.DescriptorPairBasedVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcDescriptor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destDescriptor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    versionId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.DescriptorPairBasedVersionRequest}
 */
proto.titanium.DescriptorPairBasedVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.DescriptorPairBasedVersionRequest;
  return proto.titanium.DescriptorPairBasedVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.DescriptorPairBasedVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.DescriptorPairBasedVersionRequest}
 */
proto.titanium.DescriptorPairBasedVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcDescriptor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestDescriptor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.DescriptorPairBasedVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.DescriptorPairBasedVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.DescriptorPairBasedVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcDescriptor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestDescriptor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string src_descriptor = 1;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.getSrcDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedVersionRequest} returns this
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.setSrcDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dest_descriptor = 2;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.getDestDescriptor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedVersionRequest} returns this
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.setDestDescriptor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version_id = 3;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.getVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedVersionRequest} returns this
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.setVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.DescriptorPairBasedVersionRequest} returns this
 */
proto.titanium.DescriptorPairBasedVersionRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.titanium);
