/* eslint-disable */
/*Generated by GenDocu.com*/
// package: com.peernova.titanium.casbin.management.grpc.proto
// file: common/usermanagement_error.proto

import * as jspb from "google-protobuf";

export class Error extends jspb.Message {
  getCode(): number;
  setCode(value: number): void;

  getMessage(): string;
  setMessage(value: string): void;

  clearValidationerrordetailsList(): void;
  getValidationerrordetailsList(): Array<Error.ValidationErrorDetail>;
  setValidationerrordetailsList(value: Array<Error.ValidationErrorDetail>): void;
  addValidationerrordetails(value?: Error.ValidationErrorDetail, index?: number): Error.ValidationErrorDetail;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Error.AsObject;
  static toObject(includeInstance: boolean, msg: Error): Error.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Error, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Error;
  static deserializeBinaryFromReader(message: Error, reader: jspb.BinaryReader): Error;
}

export namespace Error {
  export type AsObject = {
    code: number,
    message: string,
    validationerrordetailsList: Array<Error.ValidationErrorDetail.AsObject>,
  }

  export class ValidationErrorDetail extends jspb.Message {
    getFieldname(): string;
    setFieldname(value: string): void;

    getDescription(): string;
    setDescription(value: string): void;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ValidationErrorDetail.AsObject;
    static toObject(includeInstance: boolean, msg: ValidationErrorDetail): ValidationErrorDetail.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ValidationErrorDetail, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ValidationErrorDetail;
    static deserializeBinaryFromReader(message: ValidationErrorDetail, reader: jspb.BinaryReader): ValidationErrorDetail;
  }

  export namespace ValidationErrorDetail {
    export type AsObject = {
      fieldname: string,
      description: string,
    }
  }
}

