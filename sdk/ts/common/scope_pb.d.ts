/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: common/scope.proto

import * as jspb from "google-protobuf";
import * as common_gateway_base_pb from "../common/gateway_base_pb";

export class ScopeIdentifier extends jspb.Message {
  getScope(): string;
  setScope(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ScopeIdentifier.AsObject;
  static toObject(includeInstance: boolean, msg: ScopeIdentifier): ScopeIdentifier.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ScopeIdentifier, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ScopeIdentifier;
  static deserializeBinaryFromReader(message: ScopeIdentifier, reader: jspb.BinaryReader): ScopeIdentifier;
}

export namespace ScopeIdentifier {
  export type AsObject = {
    scope: string,
  }
}

export class ScopeListResponse extends jspb.Message {
  clearDataList(): void;
  getDataList(): Array<string>;
  setDataList(value: Array<string>): void;
  addData(value: string, index?: number): string;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ScopeListResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ScopeListResponse): ScopeListResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ScopeListResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ScopeListResponse;
  static deserializeBinaryFromReader(message: ScopeListResponse, reader: jspb.BinaryReader): ScopeListResponse;
}

export namespace ScopeListResponse {
  export type AsObject = {
    dataList: Array<string>,
    error?: common_gateway_base_pb.Error.AsObject,
  }
}

export class ScopeExistResponse extends jspb.Message {
  getExist(): boolean;
  setExist(value: boolean): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ScopeExistResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ScopeExistResponse): ScopeExistResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ScopeExistResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ScopeExistResponse;
  static deserializeBinaryFromReader(message: ScopeExistResponse, reader: jspb.BinaryReader): ScopeExistResponse;
}

export namespace ScopeExistResponse {
  export type AsObject = {
    exist: boolean,
    error?: common_gateway_base_pb.Error.AsObject,
  }
}

