/* eslint-disable */
/*Generated by GenDocu.com*/
// source: common/charts.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_gateway_base_pb = require('../common/gateway_base_pb.js');
goog.object.extend(proto, common_gateway_base_pb);
goog.exportSymbol('proto.titanium.Chart', null, global);
goog.exportSymbol('proto.titanium.ChartPoint', null, global);
goog.exportSymbol('proto.titanium.ChartSource', null, global);
goog.exportSymbol('proto.titanium.ChartsCurrenciesRequest', null, global);
goog.exportSymbol('proto.titanium.ChartsCurrenciesResponse', null, global);
goog.exportSymbol('proto.titanium.ChartsCurrenciesResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ChartsCurrenciesResponseData', null, global);
goog.exportSymbol('proto.titanium.ChartsRequest', null, global);
goog.exportSymbol('proto.titanium.ChartsResponse', null, global);
goog.exportSymbol('proto.titanium.ChartsResponse.ResponseCase', null, global);
goog.exportSymbol('proto.titanium.ChartsResponseData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChartsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartsRequest.displayName = 'proto.titanium.ChartsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ChartsResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ChartsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartsResponse.displayName = 'proto.titanium.ChartsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartsResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChartsResponseData.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChartsResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartsResponseData.displayName = 'proto.titanium.ChartsResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChartSource.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChartSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartSource.displayName = 'proto.titanium.ChartSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.Chart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.Chart.repeatedFields_, null);
};
goog.inherits(proto.titanium.Chart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.Chart.displayName = 'proto.titanium.Chart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChartPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartPoint.displayName = 'proto.titanium.ChartPoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartsCurrenciesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.titanium.ChartsCurrenciesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartsCurrenciesRequest.displayName = 'proto.titanium.ChartsCurrenciesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartsCurrenciesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.titanium.ChartsCurrenciesResponse.oneofGroups_);
};
goog.inherits(proto.titanium.ChartsCurrenciesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartsCurrenciesResponse.displayName = 'proto.titanium.ChartsCurrenciesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.titanium.ChartsCurrenciesResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.titanium.ChartsCurrenciesResponseData.repeatedFields_, null);
};
goog.inherits(proto.titanium.ChartsCurrenciesResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.titanium.ChartsCurrenciesResponseData.displayName = 'proto.titanium.ChartsCurrenciesResponseData';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    underlying: jspb.Message.getFieldWithDefault(msg, 2, ""),
    submittedDate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    client: jspb.Message.getFieldWithDefault(msg, 4, ""),
    traceName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartsRequest}
 */
proto.titanium.ChartsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartsRequest;
  return proto.titanium.ChartsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartsRequest}
 */
proto.titanium.ChartsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnderlying(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClient(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnderlying();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubmittedDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClient();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChartsRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsRequest} returns this
 */
proto.titanium.ChartsRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string underlying = 2;
 * @return {string}
 */
proto.titanium.ChartsRequest.prototype.getUnderlying = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsRequest} returns this
 */
proto.titanium.ChartsRequest.prototype.setUnderlying = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string submitted_date = 3;
 * @return {string}
 */
proto.titanium.ChartsRequest.prototype.getSubmittedDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsRequest} returns this
 */
proto.titanium.ChartsRequest.prototype.setSubmittedDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string client = 4;
 * @return {string}
 */
proto.titanium.ChartsRequest.prototype.getClient = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsRequest} returns this
 */
proto.titanium.ChartsRequest.prototype.setClient = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string trace_name = 5;
 * @return {string}
 */
proto.titanium.ChartsRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsRequest} returns this
 */
proto.titanium.ChartsRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ChartsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ChartsResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ChartsResponse.ResponseCase}
 */
proto.titanium.ChartsResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ChartsResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ChartsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ChartsResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartsResponse}
 */
proto.titanium.ChartsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartsResponse;
  return proto.titanium.ChartsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartsResponse}
 */
proto.titanium.ChartsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChartsResponseData;
      reader.readMessage(value,proto.titanium.ChartsResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ChartsResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChartsResponseData data = 1;
 * @return {?proto.titanium.ChartsResponseData}
 */
proto.titanium.ChartsResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ChartsResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChartsResponseData, 1));
};


/**
 * @param {?proto.titanium.ChartsResponseData|undefined} value
 * @return {!proto.titanium.ChartsResponse} returns this
*/
proto.titanium.ChartsResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ChartsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChartsResponse} returns this
 */
proto.titanium.ChartsResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChartsResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ChartsResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ChartsResponse} returns this
*/
proto.titanium.ChartsResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ChartsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChartsResponse} returns this
 */
proto.titanium.ChartsResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChartsResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChartsResponseData.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartsResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartsResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartsResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    outliersList: jspb.Message.toObjectList(msg.getOutliersList(),
    common_gateway_base_pb.OutlierMetadata.toObject, includeInstance),
    benchmarkList: jspb.Message.toObjectList(msg.getBenchmarkList(),
    common_gateway_base_pb.BenchmarkMetadata.toObject, includeInstance),
    chartsourcesList: jspb.Message.toObjectList(msg.getChartsourcesList(),
    proto.titanium.ChartSource.toObject, includeInstance),
    tenorsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartsResponseData}
 */
proto.titanium.ChartsResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartsResponseData;
  return proto.titanium.ChartsResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartsResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartsResponseData}
 */
proto.titanium.ChartsResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_gateway_base_pb.OutlierMetadata;
      reader.readMessage(value,common_gateway_base_pb.OutlierMetadata.deserializeBinaryFromReader);
      msg.addOutliers(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.BenchmarkMetadata;
      reader.readMessage(value,common_gateway_base_pb.BenchmarkMetadata.deserializeBinaryFromReader);
      msg.addBenchmark(value);
      break;
    case 3:
      var value = new proto.titanium.ChartSource;
      reader.readMessage(value,proto.titanium.ChartSource.deserializeBinaryFromReader);
      msg.addChartsources(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTenors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartsResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartsResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartsResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutliersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_gateway_base_pb.OutlierMetadata.serializeBinaryToWriter
    );
  }
  f = message.getBenchmarkList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_gateway_base_pb.BenchmarkMetadata.serializeBinaryToWriter
    );
  }
  f = message.getChartsourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.titanium.ChartSource.serializeBinaryToWriter
    );
  }
  f = message.getTenorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * repeated OutlierMetadata outliers = 1;
 * @return {!Array<!proto.titanium.OutlierMetadata>}
 */
proto.titanium.ChartsResponseData.prototype.getOutliersList = function() {
  return /** @type{!Array<!proto.titanium.OutlierMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.OutlierMetadata, 1));
};


/**
 * @param {!Array<!proto.titanium.OutlierMetadata>} value
 * @return {!proto.titanium.ChartsResponseData} returns this
*/
proto.titanium.ChartsResponseData.prototype.setOutliersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.titanium.OutlierMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.OutlierMetadata}
 */
proto.titanium.ChartsResponseData.prototype.addOutliers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.titanium.OutlierMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChartsResponseData} returns this
 */
proto.titanium.ChartsResponseData.prototype.clearOutliersList = function() {
  return this.setOutliersList([]);
};


/**
 * repeated BenchmarkMetadata benchmark = 2;
 * @return {!Array<!proto.titanium.BenchmarkMetadata>}
 */
proto.titanium.ChartsResponseData.prototype.getBenchmarkList = function() {
  return /** @type{!Array<!proto.titanium.BenchmarkMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_gateway_base_pb.BenchmarkMetadata, 2));
};


/**
 * @param {!Array<!proto.titanium.BenchmarkMetadata>} value
 * @return {!proto.titanium.ChartsResponseData} returns this
*/
proto.titanium.ChartsResponseData.prototype.setBenchmarkList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.BenchmarkMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.BenchmarkMetadata}
 */
proto.titanium.ChartsResponseData.prototype.addBenchmark = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.BenchmarkMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChartsResponseData} returns this
 */
proto.titanium.ChartsResponseData.prototype.clearBenchmarkList = function() {
  return this.setBenchmarkList([]);
};


/**
 * repeated ChartSource chartSources = 3;
 * @return {!Array<!proto.titanium.ChartSource>}
 */
proto.titanium.ChartsResponseData.prototype.getChartsourcesList = function() {
  return /** @type{!Array<!proto.titanium.ChartSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ChartSource, 3));
};


/**
 * @param {!Array<!proto.titanium.ChartSource>} value
 * @return {!proto.titanium.ChartsResponseData} returns this
*/
proto.titanium.ChartsResponseData.prototype.setChartsourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.titanium.ChartSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChartSource}
 */
proto.titanium.ChartsResponseData.prototype.addChartsources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.titanium.ChartSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChartsResponseData} returns this
 */
proto.titanium.ChartsResponseData.prototype.clearChartsourcesList = function() {
  return this.setChartsourcesList([]);
};


/**
 * repeated string tenors = 4;
 * @return {!Array<string>}
 */
proto.titanium.ChartsResponseData.prototype.getTenorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.ChartsResponseData} returns this
 */
proto.titanium.ChartsResponseData.prototype.setTenorsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChartsResponseData} returns this
 */
proto.titanium.ChartsResponseData.prototype.addTenors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChartsResponseData} returns this
 */
proto.titanium.ChartsResponseData.prototype.clearTenorsList = function() {
  return this.setTenorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChartSource.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartSource.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    chartsList: jspb.Message.toObjectList(msg.getChartsList(),
    proto.titanium.Chart.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartSource}
 */
proto.titanium.ChartSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartSource;
  return proto.titanium.ChartSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartSource}
 */
proto.titanium.ChartSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.titanium.Chart;
      reader.readMessage(value,proto.titanium.Chart.deserializeBinaryFromReader);
      msg.addCharts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChartsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.Chart.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.ChartSource.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartSource} returns this
 */
proto.titanium.ChartSource.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Chart charts = 2;
 * @return {!Array<!proto.titanium.Chart>}
 */
proto.titanium.ChartSource.prototype.getChartsList = function() {
  return /** @type{!Array<!proto.titanium.Chart>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.Chart, 2));
};


/**
 * @param {!Array<!proto.titanium.Chart>} value
 * @return {!proto.titanium.ChartSource} returns this
*/
proto.titanium.ChartSource.prototype.setChartsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.Chart=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.Chart}
 */
proto.titanium.ChartSource.prototype.addCharts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.Chart, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChartSource} returns this
 */
proto.titanium.ChartSource.prototype.clearChartsList = function() {
  return this.setChartsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.Chart.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.Chart.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.Chart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.Chart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Chart.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.titanium.ChartPoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.Chart}
 */
proto.titanium.Chart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.Chart;
  return proto.titanium.Chart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.Chart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.Chart}
 */
proto.titanium.Chart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.titanium.ChartPoint;
      reader.readMessage(value,proto.titanium.ChartPoint.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.Chart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.Chart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.Chart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.Chart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.titanium.ChartPoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.titanium.Chart.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.Chart} returns this
 */
proto.titanium.Chart.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ChartPoint points = 2;
 * @return {!Array<!proto.titanium.ChartPoint>}
 */
proto.titanium.Chart.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.titanium.ChartPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.titanium.ChartPoint, 2));
};


/**
 * @param {!Array<!proto.titanium.ChartPoint>} value
 * @return {!proto.titanium.Chart} returns this
*/
proto.titanium.Chart.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.titanium.ChartPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChartPoint}
 */
proto.titanium.Chart.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.titanium.ChartPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.Chart} returns this
 */
proto.titanium.Chart.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    tenor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartPoint}
 */
proto.titanium.ChartPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartPoint;
  return proto.titanium.ChartPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartPoint}
 */
proto.titanium.ChartPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTenor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string tenor = 1;
 * @return {string}
 */
proto.titanium.ChartPoint.prototype.getTenor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartPoint} returns this
 */
proto.titanium.ChartPoint.prototype.setTenor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.titanium.ChartPoint.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.titanium.ChartPoint} returns this
 */
proto.titanium.ChartPoint.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartsCurrenciesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartsCurrenciesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartsCurrenciesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsCurrenciesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submittedDate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    traceName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartsCurrenciesRequest}
 */
proto.titanium.ChartsCurrenciesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartsCurrenciesRequest;
  return proto.titanium.ChartsCurrenciesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartsCurrenciesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartsCurrenciesRequest}
 */
proto.titanium.ChartsCurrenciesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmittedDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartsCurrenciesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartsCurrenciesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartsCurrenciesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsCurrenciesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmittedDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTraceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.titanium.ChartsCurrenciesRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsCurrenciesRequest} returns this
 */
proto.titanium.ChartsCurrenciesRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitted_date = 2;
 * @return {string}
 */
proto.titanium.ChartsCurrenciesRequest.prototype.getSubmittedDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsCurrenciesRequest} returns this
 */
proto.titanium.ChartsCurrenciesRequest.prototype.setSubmittedDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string trace_name = 3;
 * @return {string}
 */
proto.titanium.ChartsCurrenciesRequest.prototype.getTraceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.titanium.ChartsCurrenciesRequest} returns this
 */
proto.titanium.ChartsCurrenciesRequest.prototype.setTraceName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.titanium.ChartsCurrenciesResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.titanium.ChartsCurrenciesResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.titanium.ChartsCurrenciesResponse.ResponseCase}
 */
proto.titanium.ChartsCurrenciesResponse.prototype.getResponseCase = function() {
  return /** @type {proto.titanium.ChartsCurrenciesResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.titanium.ChartsCurrenciesResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartsCurrenciesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartsCurrenciesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartsCurrenciesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsCurrenciesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.titanium.ChartsCurrenciesResponseData.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_gateway_base_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartsCurrenciesResponse}
 */
proto.titanium.ChartsCurrenciesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartsCurrenciesResponse;
  return proto.titanium.ChartsCurrenciesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartsCurrenciesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartsCurrenciesResponse}
 */
proto.titanium.ChartsCurrenciesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.titanium.ChartsCurrenciesResponseData;
      reader.readMessage(value,proto.titanium.ChartsCurrenciesResponseData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_gateway_base_pb.Error;
      reader.readMessage(value,common_gateway_base_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartsCurrenciesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartsCurrenciesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartsCurrenciesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsCurrenciesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.titanium.ChartsCurrenciesResponseData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_gateway_base_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChartsCurrenciesResponseData data = 1;
 * @return {?proto.titanium.ChartsCurrenciesResponseData}
 */
proto.titanium.ChartsCurrenciesResponse.prototype.getData = function() {
  return /** @type{?proto.titanium.ChartsCurrenciesResponseData} */ (
    jspb.Message.getWrapperField(this, proto.titanium.ChartsCurrenciesResponseData, 1));
};


/**
 * @param {?proto.titanium.ChartsCurrenciesResponseData|undefined} value
 * @return {!proto.titanium.ChartsCurrenciesResponse} returns this
*/
proto.titanium.ChartsCurrenciesResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.titanium.ChartsCurrenciesResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChartsCurrenciesResponse} returns this
 */
proto.titanium.ChartsCurrenciesResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChartsCurrenciesResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.titanium.Error}
 */
proto.titanium.ChartsCurrenciesResponse.prototype.getError = function() {
  return /** @type{?proto.titanium.Error} */ (
    jspb.Message.getWrapperField(this, common_gateway_base_pb.Error, 2));
};


/**
 * @param {?proto.titanium.Error|undefined} value
 * @return {!proto.titanium.ChartsCurrenciesResponse} returns this
*/
proto.titanium.ChartsCurrenciesResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.titanium.ChartsCurrenciesResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.titanium.ChartsCurrenciesResponse} returns this
 */
proto.titanium.ChartsCurrenciesResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.titanium.ChartsCurrenciesResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.titanium.ChartsCurrenciesResponseData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.titanium.ChartsCurrenciesResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.titanium.ChartsCurrenciesResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.titanium.ChartsCurrenciesResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsCurrenciesResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencypairsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.titanium.ChartsCurrenciesResponseData}
 */
proto.titanium.ChartsCurrenciesResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.titanium.ChartsCurrenciesResponseData;
  return proto.titanium.ChartsCurrenciesResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.titanium.ChartsCurrenciesResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.titanium.ChartsCurrenciesResponseData}
 */
proto.titanium.ChartsCurrenciesResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCurrencypairs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.titanium.ChartsCurrenciesResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.titanium.ChartsCurrenciesResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.titanium.ChartsCurrenciesResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.titanium.ChartsCurrenciesResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencypairsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string currencyPairs = 1;
 * @return {!Array<string>}
 */
proto.titanium.ChartsCurrenciesResponseData.prototype.getCurrencypairsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.titanium.ChartsCurrenciesResponseData} returns this
 */
proto.titanium.ChartsCurrenciesResponseData.prototype.setCurrencypairsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.titanium.ChartsCurrenciesResponseData} returns this
 */
proto.titanium.ChartsCurrenciesResponseData.prototype.addCurrencypairs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.titanium.ChartsCurrenciesResponseData} returns this
 */
proto.titanium.ChartsCurrenciesResponseData.prototype.clearCurrencypairsList = function() {
  return this.setCurrencypairsList([]);
};


goog.object.extend(exports, proto.titanium);
