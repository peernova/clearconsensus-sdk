/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: public/key_storage.proto

import * as jspb from "google-protobuf";
import * as google_api_annotations_pb from "../google/api/annotations_pb";
import * as google_protobuf_struct_pb from "google-protobuf/google/protobuf/struct_pb";
import * as common_gateway_base_pb from "../common/gateway_base_pb";

export class KVAsset extends jspb.Message {
  getKey(): string;
  setKey(value: string): void;

  hasValue(): boolean;
  clearValue(): void;
  getValue(): google_protobuf_struct_pb.Struct | undefined;
  setValue(value?: google_protobuf_struct_pb.Struct): void;

  getTtl(): string;
  setTtl(value: string): void;

  getTtlFrom(): TTLTypesMap[keyof TTLTypesMap];
  setTtlFrom(value: TTLTypesMap[keyof TTLTypesMap]): void;

  getTtlDate(): string;
  setTtlDate(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): KVAsset.AsObject;
  static toObject(includeInstance: boolean, msg: KVAsset): KVAsset.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: KVAsset, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): KVAsset;
  static deserializeBinaryFromReader(message: KVAsset, reader: jspb.BinaryReader): KVAsset;
}

export namespace KVAsset {
  export type AsObject = {
    key: string,
    value?: google_protobuf_struct_pb.Struct.AsObject,
    ttl: string,
    ttlFrom: TTLTypesMap[keyof TTLTypesMap],
    ttlDate: string,
  }
}

export class KVRequest extends jspb.Message {
  getKey(): string;
  setKey(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): KVRequest.AsObject;
  static toObject(includeInstance: boolean, msg: KVRequest): KVRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: KVRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): KVRequest;
  static deserializeBinaryFromReader(message: KVRequest, reader: jspb.BinaryReader): KVRequest;
}

export namespace KVRequest {
  export type AsObject = {
    key: string,
  }
}

export class KVOperationResponse extends jspb.Message {
  hasMessage(): boolean;
  clearMessage(): void;
  getMessage(): string;
  setMessage(value: string): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  getResponseCase(): KVOperationResponse.ResponseCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): KVOperationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: KVOperationResponse): KVOperationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: KVOperationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): KVOperationResponse;
  static deserializeBinaryFromReader(message: KVOperationResponse, reader: jspb.BinaryReader): KVOperationResponse;
}

export namespace KVOperationResponse {
  export type AsObject = {
    message: string,
    error?: common_gateway_base_pb.Error.AsObject,
  }

  export enum ResponseCase {
    RESPONSE_NOT_SET = 0,
    MESSAGE = 1,
    ERROR = 2,
  }
}

export class GetKVResponse extends jspb.Message {
  hasData(): boolean;
  clearData(): void;
  getData(): KVAsset | undefined;
  setData(value?: KVAsset): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  getResponseCase(): GetKVResponse.ResponseCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetKVResponse.AsObject;
  static toObject(includeInstance: boolean, msg: GetKVResponse): GetKVResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GetKVResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetKVResponse;
  static deserializeBinaryFromReader(message: GetKVResponse, reader: jspb.BinaryReader): GetKVResponse;
}

export namespace GetKVResponse {
  export type AsObject = {
    data?: KVAsset.AsObject,
    error?: common_gateway_base_pb.Error.AsObject,
  }

  export enum ResponseCase {
    RESPONSE_NOT_SET = 0,
    DATA = 1,
    ERROR = 2,
  }
}

export class ListKVRequest extends jspb.Message {
  getFilter(): string;
  setFilter(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListKVRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListKVRequest): ListKVRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ListKVRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListKVRequest;
  static deserializeBinaryFromReader(message: ListKVRequest, reader: jspb.BinaryReader): ListKVRequest;
}

export namespace ListKVRequest {
  export type AsObject = {
    filter: string,
  }
}

export class KVListAsset extends jspb.Message {
  getKey(): string;
  setKey(value: string): void;

  getTtlDate(): string;
  setTtlDate(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): KVListAsset.AsObject;
  static toObject(includeInstance: boolean, msg: KVListAsset): KVListAsset.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: KVListAsset, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): KVListAsset;
  static deserializeBinaryFromReader(message: KVListAsset, reader: jspb.BinaryReader): KVListAsset;
}

export namespace KVListAsset {
  export type AsObject = {
    key: string,
    ttlDate: string,
  }
}

export class KVList extends jspb.Message {
  clearResultsList(): void;
  getResultsList(): Array<KVListAsset>;
  setResultsList(value: Array<KVListAsset>): void;
  addResults(value?: KVListAsset, index?: number): KVListAsset;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): KVList.AsObject;
  static toObject(includeInstance: boolean, msg: KVList): KVList.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: KVList, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): KVList;
  static deserializeBinaryFromReader(message: KVList, reader: jspb.BinaryReader): KVList;
}

export namespace KVList {
  export type AsObject = {
    resultsList: Array<KVListAsset.AsObject>,
  }
}

export class ListKVResponse extends jspb.Message {
  hasData(): boolean;
  clearData(): void;
  getData(): KVList | undefined;
  setData(value?: KVList): void;

  hasError(): boolean;
  clearError(): void;
  getError(): common_gateway_base_pb.Error | undefined;
  setError(value?: common_gateway_base_pb.Error): void;

  getResponseCase(): ListKVResponse.ResponseCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListKVResponse.AsObject;
  static toObject(includeInstance: boolean, msg: ListKVResponse): ListKVResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ListKVResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListKVResponse;
  static deserializeBinaryFromReader(message: ListKVResponse, reader: jspb.BinaryReader): ListKVResponse;
}

export namespace ListKVResponse {
  export type AsObject = {
    data?: KVList.AsObject,
    error?: common_gateway_base_pb.Error.AsObject,
  }

  export enum ResponseCase {
    RESPONSE_NOT_SET = 0,
    DATA = 1,
    ERROR = 2,
  }
}

export interface TTLTypesMap {
  NONE: 0;
  READ: 1;
  WRITE: 2;
}

export const TTLTypes: TTLTypesMap;

