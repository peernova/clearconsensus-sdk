/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: public/chart_service.proto

var public_chart_service_pb = require("../public/chart_service_pb");
var grpc = require("@improbable-eng/grpc-web").grpc;

var ChartService = (function () {
  function ChartService() {}
  ChartService.serviceName = "titanium.ChartService";
  return ChartService;
}());

ChartService.getChartData = {
  methodName: "getChartData",
  service: ChartService,
  requestStream: false,
  responseStream: false,
  requestType: public_chart_service_pb.GetChartDataRequest,
  responseType: public_chart_service_pb.GetChartDataResponse
};

ChartService.getTableData = {
  methodName: "getTableData",
  service: ChartService,
  requestStream: false,
  responseStream: false,
  requestType: public_chart_service_pb.GetChartDataRequest,
  responseType: public_chart_service_pb.GetTableResponse
};

exports.ChartService = ChartService;

function ChartServiceClient(serviceHost, options) {
  this.serviceHost = serviceHost;
  this.options = options || {};
}

ChartServiceClient.prototype.getChartData = function getChartData(requestMessage, metadata, callback) {
  if (arguments.length === 2) {
    callback = arguments[1];
  }
  var client = grpc.unary(ChartService.getChartData, {
    request: requestMessage,
    host: this.serviceHost,
    metadata: metadata,
    transport: this.options.transport,
    debug: this.options.debug,
    onEnd: function (response) {
      if (callback) {
        if (response.status !== grpc.Code.OK) {
          var err = new Error(response.statusMessage);
          err.code = response.status;
          err.metadata = response.trailers;
          callback(err, null);
        } else {
          callback(null, response.message);
        }
      }
    }
  });
  return {
    cancel: function () {
      callback = null;
      client.close();
    }
  };
};

ChartServiceClient.prototype.getTableData = function getTableData(requestMessage, metadata, callback) {
  if (arguments.length === 2) {
    callback = arguments[1];
  }
  var client = grpc.unary(ChartService.getTableData, {
    request: requestMessage,
    host: this.serviceHost,
    metadata: metadata,
    transport: this.options.transport,
    debug: this.options.debug,
    onEnd: function (response) {
      if (callback) {
        if (response.status !== grpc.Code.OK) {
          var err = new Error(response.statusMessage);
          err.code = response.status;
          err.metadata = response.trailers;
          callback(err, null);
        } else {
          callback(null, response.message);
        }
      }
    }
  });
  return {
    cancel: function () {
      callback = null;
      client.close();
    }
  };
};

exports.ChartServiceClient = ChartServiceClient;

