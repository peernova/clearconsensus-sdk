/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: public/key_storage.proto

import * as public_key_storage_pb from "../public/key_storage_pb";
import {grpc} from "@improbable-eng/grpc-web";

type KVServiceAddKey = {
  readonly methodName: string;
  readonly service: typeof KVService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_key_storage_pb.KVAsset;
  readonly responseType: typeof public_key_storage_pb.KVOperationResponse;
};

type KVServiceUpdateKey = {
  readonly methodName: string;
  readonly service: typeof KVService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_key_storage_pb.KVAsset;
  readonly responseType: typeof public_key_storage_pb.KVOperationResponse;
};

type KVServiceGetKey = {
  readonly methodName: string;
  readonly service: typeof KVService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_key_storage_pb.KVRequest;
  readonly responseType: typeof public_key_storage_pb.GetKVResponse;
};

type KVServiceDeleteKey = {
  readonly methodName: string;
  readonly service: typeof KVService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_key_storage_pb.KVRequest;
  readonly responseType: typeof public_key_storage_pb.KVOperationResponse;
};

type KVServiceListKeys = {
  readonly methodName: string;
  readonly service: typeof KVService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_key_storage_pb.ListKVRequest;
  readonly responseType: typeof public_key_storage_pb.ListKVResponse;
};

export class KVService {
  static readonly serviceName: string;
  static readonly AddKey: KVServiceAddKey;
  static readonly UpdateKey: KVServiceUpdateKey;
  static readonly GetKey: KVServiceGetKey;
  static readonly DeleteKey: KVServiceDeleteKey;
  static readonly ListKeys: KVServiceListKeys;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class KVServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  addKey(
    requestMessage: public_key_storage_pb.KVAsset,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.KVOperationResponse|null) => void
  ): UnaryResponse;
  addKey(
    requestMessage: public_key_storage_pb.KVAsset,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.KVOperationResponse|null) => void
  ): UnaryResponse;
  updateKey(
    requestMessage: public_key_storage_pb.KVAsset,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.KVOperationResponse|null) => void
  ): UnaryResponse;
  updateKey(
    requestMessage: public_key_storage_pb.KVAsset,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.KVOperationResponse|null) => void
  ): UnaryResponse;
  getKey(
    requestMessage: public_key_storage_pb.KVRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.GetKVResponse|null) => void
  ): UnaryResponse;
  getKey(
    requestMessage: public_key_storage_pb.KVRequest,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.GetKVResponse|null) => void
  ): UnaryResponse;
  deleteKey(
    requestMessage: public_key_storage_pb.KVRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.KVOperationResponse|null) => void
  ): UnaryResponse;
  deleteKey(
    requestMessage: public_key_storage_pb.KVRequest,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.KVOperationResponse|null) => void
  ): UnaryResponse;
  listKeys(
    requestMessage: public_key_storage_pb.ListKVRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.ListKVResponse|null) => void
  ): UnaryResponse;
  listKeys(
    requestMessage: public_key_storage_pb.ListKVRequest,
    callback: (error: ServiceError|null, responseMessage: public_key_storage_pb.ListKVResponse|null) => void
  ): UnaryResponse;
}

