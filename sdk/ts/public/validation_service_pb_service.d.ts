/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: public/validation_service.proto

import * as public_validation_service_pb from "../public/validation_service_pb";
import * as common_gateway_base_pb from "../common/gateway_base_pb";
import * as common_validation_pb from "../common/validation_pb";
import {grpc} from "@improbable-eng/grpc-web";

type ValidatorServiceAddValidationRule = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_validation_pb.ValidationRuleDefinition;
  readonly responseType: typeof common_gateway_base_pb.AcknowledgeResponse;
};

type ValidatorServiceGetValidationRule = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_validation_pb.GetValidationRuleResponse;
};

type ValidatorServiceDisableValidationRule = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_gateway_base_pb.AcknowledgeResponse;
};

type ValidatorServiceEnableValidationRule = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_gateway_base_pb.AcknowledgeResponse;
};

type ValidatorServiceListValidationRules = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.ListRequest;
  readonly responseType: typeof common_gateway_base_pb.ListRuleResponse;
};

type ValidatorServiceListValidationRuleVersions = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_gateway_base_pb.ListVersionResponse;
};

type ValidatorServiceGetValidationRuleVersion = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.VersionRequest;
  readonly responseType: typeof common_validation_pb.GetValidationRuleResponse;
};

type ValidatorServiceGetGeneratedValidationRule = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_validation_pb.GetGeneratedValidationRuleResponse;
};

type ValidatorServiceListGeneratedValidationRuleVersions = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_gateway_base_pb.ListVersionResponse;
};

type ValidatorServiceGetGeneratedValidationRuleVersion = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.VersionRequest;
  readonly responseType: typeof common_validation_pb.GetGeneratedValidationRuleResponse;
};

type ValidatorServiceRdlCheck = {
  readonly methodName: string;
  readonly service: typeof ValidatorService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_validation_pb.RdlCheckRequest;
  readonly responseType: typeof common_gateway_base_pb.MessageResponse;
};

export class ValidatorService {
  static readonly serviceName: string;
  static readonly AddValidationRule: ValidatorServiceAddValidationRule;
  static readonly GetValidationRule: ValidatorServiceGetValidationRule;
  static readonly DisableValidationRule: ValidatorServiceDisableValidationRule;
  static readonly EnableValidationRule: ValidatorServiceEnableValidationRule;
  static readonly ListValidationRules: ValidatorServiceListValidationRules;
  static readonly ListValidationRuleVersions: ValidatorServiceListValidationRuleVersions;
  static readonly GetValidationRuleVersion: ValidatorServiceGetValidationRuleVersion;
  static readonly GetGeneratedValidationRule: ValidatorServiceGetGeneratedValidationRule;
  static readonly ListGeneratedValidationRuleVersions: ValidatorServiceListGeneratedValidationRuleVersions;
  static readonly GetGeneratedValidationRuleVersion: ValidatorServiceGetGeneratedValidationRuleVersion;
  static readonly RdlCheck: ValidatorServiceRdlCheck;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class ValidatorServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  addValidationRule(
    requestMessage: common_validation_pb.ValidationRuleDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  addValidationRule(
    requestMessage: common_validation_pb.ValidationRuleDefinition,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  getValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetValidationRuleResponse|null) => void
  ): UnaryResponse;
  getValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetValidationRuleResponse|null) => void
  ): UnaryResponse;
  disableValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  disableValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  enableValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  enableValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  listValidationRules(
    requestMessage: common_gateway_base_pb.ListRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListRuleResponse|null) => void
  ): UnaryResponse;
  listValidationRules(
    requestMessage: common_gateway_base_pb.ListRequest,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListRuleResponse|null) => void
  ): UnaryResponse;
  listValidationRuleVersions(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListVersionResponse|null) => void
  ): UnaryResponse;
  listValidationRuleVersions(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListVersionResponse|null) => void
  ): UnaryResponse;
  getValidationRuleVersion(
    requestMessage: common_gateway_base_pb.VersionRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetValidationRuleResponse|null) => void
  ): UnaryResponse;
  getValidationRuleVersion(
    requestMessage: common_gateway_base_pb.VersionRequest,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetValidationRuleResponse|null) => void
  ): UnaryResponse;
  getGeneratedValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetGeneratedValidationRuleResponse|null) => void
  ): UnaryResponse;
  getGeneratedValidationRule(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetGeneratedValidationRuleResponse|null) => void
  ): UnaryResponse;
  listGeneratedValidationRuleVersions(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListVersionResponse|null) => void
  ): UnaryResponse;
  listGeneratedValidationRuleVersions(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListVersionResponse|null) => void
  ): UnaryResponse;
  getGeneratedValidationRuleVersion(
    requestMessage: common_gateway_base_pb.VersionRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetGeneratedValidationRuleResponse|null) => void
  ): UnaryResponse;
  getGeneratedValidationRuleVersion(
    requestMessage: common_gateway_base_pb.VersionRequest,
    callback: (error: ServiceError|null, responseMessage: common_validation_pb.GetGeneratedValidationRuleResponse|null) => void
  ): UnaryResponse;
  rdlCheck(
    requestMessage: common_validation_pb.RdlCheckRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  rdlCheck(
    requestMessage: common_validation_pb.RdlCheckRequest,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
}

