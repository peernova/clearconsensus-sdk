/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: public/admin_service.proto

import * as public_admin_service_pb from "../public/admin_service_pb";
import * as common_gateway_base_pb from "../common/gateway_base_pb";
import {grpc} from "@improbable-eng/grpc-web";

type AdminServiceOnBoard = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_admin_service_pb.OnBoardRequest;
  readonly responseType: typeof common_gateway_base_pb.MessageResponse;
};

type AdminServiceRunCalculator = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_admin_service_pb.RunCalculatorRequest;
  readonly responseType: typeof common_gateway_base_pb.MessageResponse;
};

type AdminServiceUploadEvaluatedPrice = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_admin_service_pb.UploadEvaluatedPriceRequest;
  readonly responseType: typeof common_gateway_base_pb.MessageResponse;
};

type AdminServiceRunConsensus = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof public_admin_service_pb.RunConsensusRequest;
  readonly responseType: typeof common_gateway_base_pb.MessageResponse;
};

export class AdminService {
  static readonly serviceName: string;
  static readonly OnBoard: AdminServiceOnBoard;
  static readonly RunCalculator: AdminServiceRunCalculator;
  static readonly UploadEvaluatedPrice: AdminServiceUploadEvaluatedPrice;
  static readonly RunConsensus: AdminServiceRunConsensus;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class AdminServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  onBoard(
    requestMessage: public_admin_service_pb.OnBoardRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  onBoard(
    requestMessage: public_admin_service_pb.OnBoardRequest,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  runCalculator(
    requestMessage: public_admin_service_pb.RunCalculatorRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  runCalculator(
    requestMessage: public_admin_service_pb.RunCalculatorRequest,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  uploadEvaluatedPrice(
    requestMessage: public_admin_service_pb.UploadEvaluatedPriceRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  uploadEvaluatedPrice(
    requestMessage: public_admin_service_pb.UploadEvaluatedPriceRequest,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  runConsensus(
    requestMessage: public_admin_service_pb.RunConsensusRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
  runConsensus(
    requestMessage: public_admin_service_pb.RunConsensusRequest,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.MessageResponse|null) => void
  ): UnaryResponse;
}

