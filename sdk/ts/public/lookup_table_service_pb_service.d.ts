/* eslint-disable */
/*Generated by GenDocu.com*/
// package: titanium
// file: public/lookup_table_service.proto

import * as public_lookup_table_service_pb from "../public/lookup_table_service_pb";
import * as common_gateway_base_pb from "../common/gateway_base_pb";
import * as common_lookup_table_pb from "../common/lookup_table_pb";
import {grpc} from "@improbable-eng/grpc-web";

type LookupTableServiceAddLookupTable = {
  readonly methodName: string;
  readonly service: typeof LookupTableService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_lookup_table_pb.AddLookupTableRequest;
  readonly responseType: typeof common_gateway_base_pb.AcknowledgeResponse;
};

type LookupTableServiceGetLookupTable = {
  readonly methodName: string;
  readonly service: typeof LookupTableService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_lookup_table_pb.GetLookupTableResponse;
};

type LookupTableServiceListLookupTables = {
  readonly methodName: string;
  readonly service: typeof LookupTableService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.ListRequest;
  readonly responseType: typeof common_lookup_table_pb.ListLookupTableResponse;
};

type LookupTableServiceListLookupTableVersions = {
  readonly methodName: string;
  readonly service: typeof LookupTableService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_gateway_base_pb.GetDefinition;
  readonly responseType: typeof common_gateway_base_pb.ListVersionResponse;
};

export class LookupTableService {
  static readonly serviceName: string;
  static readonly AddLookupTable: LookupTableServiceAddLookupTable;
  static readonly GetLookupTable: LookupTableServiceGetLookupTable;
  static readonly ListLookupTables: LookupTableServiceListLookupTables;
  static readonly ListLookupTableVersions: LookupTableServiceListLookupTableVersions;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class LookupTableServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  addLookupTable(
    requestMessage: common_lookup_table_pb.AddLookupTableRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  addLookupTable(
    requestMessage: common_lookup_table_pb.AddLookupTableRequest,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.AcknowledgeResponse|null) => void
  ): UnaryResponse;
  getLookupTable(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_lookup_table_pb.GetLookupTableResponse|null) => void
  ): UnaryResponse;
  getLookupTable(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_lookup_table_pb.GetLookupTableResponse|null) => void
  ): UnaryResponse;
  listLookupTables(
    requestMessage: common_gateway_base_pb.ListRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_lookup_table_pb.ListLookupTableResponse|null) => void
  ): UnaryResponse;
  listLookupTables(
    requestMessage: common_gateway_base_pb.ListRequest,
    callback: (error: ServiceError|null, responseMessage: common_lookup_table_pb.ListLookupTableResponse|null) => void
  ): UnaryResponse;
  listLookupTableVersions(
    requestMessage: common_gateway_base_pb.GetDefinition,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListVersionResponse|null) => void
  ): UnaryResponse;
  listLookupTableVersions(
    requestMessage: common_gateway_base_pb.GetDefinition,
    callback: (error: ServiceError|null, responseMessage: common_gateway_base_pb.ListVersionResponse|null) => void
  ): UnaryResponse;
}

