/* eslint-disable */
/*Generated by GenDocu.com*/
// package: com.peernova.titanium.casbin.management.grpc.service
// file: public/usermanagement_user_service.proto

import * as public_usermanagement_user_service_pb from "../public/usermanagement_user_service_pb";
import * as common_usermanagement_user_pb from "../common/usermanagement_user_pb";
import * as common_usermanagement_fe_specific_pb from "../common/usermanagement_fe_specific_pb";
import {grpc} from "@improbable-eng/grpc-web";

type UserServicecreate = {
  readonly methodName: string;
  readonly service: typeof UserService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_usermanagement_user_pb.UserDto;
  readonly responseType: typeof common_usermanagement_fe_specific_pb.ServiceResponse;
};

type UserServiceupdate = {
  readonly methodName: string;
  readonly service: typeof UserService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_usermanagement_user_pb.UserDto;
  readonly responseType: typeof common_usermanagement_fe_specific_pb.ServiceResponse;
};

type UserServicegetById = {
  readonly methodName: string;
  readonly service: typeof UserService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_usermanagement_user_pb.UserId;
  readonly responseType: typeof common_usermanagement_fe_specific_pb.ServiceResponse;
};

type UserServicegetAll = {
  readonly methodName: string;
  readonly service: typeof UserService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof common_usermanagement_user_pb.UserEnabled;
  readonly responseType: typeof common_usermanagement_fe_specific_pb.ServiceResponse;
};

export class UserService {
  static readonly serviceName: string;
  static readonly create: UserServicecreate;
  static readonly update: UserServiceupdate;
  static readonly getById: UserServicegetById;
  static readonly getAll: UserServicegetAll;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class UserServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  create(
    requestMessage: common_usermanagement_user_pb.UserDto,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
  create(
    requestMessage: common_usermanagement_user_pb.UserDto,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
  update(
    requestMessage: common_usermanagement_user_pb.UserDto,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
  update(
    requestMessage: common_usermanagement_user_pb.UserDto,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
  getById(
    requestMessage: common_usermanagement_user_pb.UserId,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
  getById(
    requestMessage: common_usermanagement_user_pb.UserId,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
  getAll(
    requestMessage: common_usermanagement_user_pb.UserEnabled,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
  getAll(
    requestMessage: common_usermanagement_user_pb.UserEnabled,
    callback: (error: ServiceError|null, responseMessage: common_usermanagement_fe_specific_pb.ServiceResponse|null) => void
  ): UnaryResponse;
}

