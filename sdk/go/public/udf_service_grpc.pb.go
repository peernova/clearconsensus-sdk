// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package public

import (
	context "context"
	common "github.com/peernova/clearconsensus-sdk/sdk/go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UdfServiceClient is the client API for UdfService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UdfServiceClient interface {
	ListUdfs(ctx context.Context, in *common.ListRequest, opts ...grpc.CallOption) (*common.ListUdfResponse, error)
	GetUdfDefinition(ctx context.Context, in *common.UdfNameRequest, opts ...grpc.CallOption) (*common.GetUdfResponse, error)
	DisableUdf(ctx context.Context, in *common.UdfNameRequest, opts ...grpc.CallOption) (*common.MessageResponse, error)
}

type udfServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUdfServiceClient(cc grpc.ClientConnInterface) UdfServiceClient {
	return &udfServiceClient{cc}
}

func (c *udfServiceClient) ListUdfs(ctx context.Context, in *common.ListRequest, opts ...grpc.CallOption) (*common.ListUdfResponse, error) {
	out := new(common.ListUdfResponse)
	err := c.cc.Invoke(ctx, "/titanium.UdfService/ListUdfs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *udfServiceClient) GetUdfDefinition(ctx context.Context, in *common.UdfNameRequest, opts ...grpc.CallOption) (*common.GetUdfResponse, error) {
	out := new(common.GetUdfResponse)
	err := c.cc.Invoke(ctx, "/titanium.UdfService/GetUdfDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *udfServiceClient) DisableUdf(ctx context.Context, in *common.UdfNameRequest, opts ...grpc.CallOption) (*common.MessageResponse, error) {
	out := new(common.MessageResponse)
	err := c.cc.Invoke(ctx, "/titanium.UdfService/DisableUdf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UdfServiceServer is the server API for UdfService service.
// All implementations must embed UnimplementedUdfServiceServer
// for forward compatibility
type UdfServiceServer interface {
	ListUdfs(context.Context, *common.ListRequest) (*common.ListUdfResponse, error)
	GetUdfDefinition(context.Context, *common.UdfNameRequest) (*common.GetUdfResponse, error)
	DisableUdf(context.Context, *common.UdfNameRequest) (*common.MessageResponse, error)
	mustEmbedUnimplementedUdfServiceServer()
}

// UnimplementedUdfServiceServer must be embedded to have forward compatible implementations.
type UnimplementedUdfServiceServer struct {
}

func (UnimplementedUdfServiceServer) ListUdfs(context.Context, *common.ListRequest) (*common.ListUdfResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUdfs not implemented")
}
func (UnimplementedUdfServiceServer) GetUdfDefinition(context.Context, *common.UdfNameRequest) (*common.GetUdfResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUdfDefinition not implemented")
}
func (UnimplementedUdfServiceServer) DisableUdf(context.Context, *common.UdfNameRequest) (*common.MessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableUdf not implemented")
}
func (UnimplementedUdfServiceServer) mustEmbedUnimplementedUdfServiceServer() {}

// UnsafeUdfServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UdfServiceServer will
// result in compilation errors.
type UnsafeUdfServiceServer interface {
	mustEmbedUnimplementedUdfServiceServer()
}

func RegisterUdfServiceServer(s grpc.ServiceRegistrar, srv UdfServiceServer) {
	s.RegisterService(&UdfService_ServiceDesc, srv)
}

func _UdfService_ListUdfs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UdfServiceServer).ListUdfs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/titanium.UdfService/ListUdfs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UdfServiceServer).ListUdfs(ctx, req.(*common.ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UdfService_GetUdfDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.UdfNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UdfServiceServer).GetUdfDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/titanium.UdfService/GetUdfDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UdfServiceServer).GetUdfDefinition(ctx, req.(*common.UdfNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UdfService_DisableUdf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.UdfNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UdfServiceServer).DisableUdf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/titanium.UdfService/DisableUdf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UdfServiceServer).DisableUdf(ctx, req.(*common.UdfNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UdfService_ServiceDesc is the grpc.ServiceDesc for UdfService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UdfService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "titanium.UdfService",
	HandlerType: (*UdfServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUdfs",
			Handler:    _UdfService_ListUdfs_Handler,
		},
		{
			MethodName: "GetUdfDefinition",
			Handler:    _UdfService_GetUdfDefinition_Handler,
		},
		{
			MethodName: "DisableUdf",
			Handler:    _UdfService_DisableUdf_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "public/udf_service.proto",
}
