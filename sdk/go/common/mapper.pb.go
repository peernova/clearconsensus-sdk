// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: common/mapper.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DescriptorPairBasedGetDefinition is used to identify mapping rule (because descriptor identify rules) and this definition can be used to get specific rule
type DescriptorPairBasedGetDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     *Identifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Scope          string      `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	SrcDescriptor  string      `protobuf:"bytes,3,opt,name=src_descriptor,json=srcDescriptor,proto3" json:"src_descriptor,omitempty"`
	DestDescriptor string      `protobuf:"bytes,4,opt,name=dest_descriptor,json=destDescriptor,proto3" json:"dest_descriptor,omitempty"`
}

func (x *DescriptorPairBasedGetDefinition) Reset() {
	*x = DescriptorPairBasedGetDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptorPairBasedGetDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptorPairBasedGetDefinition) ProtoMessage() {}

func (x *DescriptorPairBasedGetDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptorPairBasedGetDefinition.ProtoReflect.Descriptor instead.
func (*DescriptorPairBasedGetDefinition) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{0}
}

func (x *DescriptorPairBasedGetDefinition) GetIdentifier() *Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *DescriptorPairBasedGetDefinition) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *DescriptorPairBasedGetDefinition) GetSrcDescriptor() string {
	if x != nil {
		return x.SrcDescriptor
	}
	return ""
}

func (x *DescriptorPairBasedGetDefinition) GetDestDescriptor() string {
	if x != nil {
		return x.DestDescriptor
	}
	return ""
}

type DescriptorPairBasedAcknowledgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DescriptorPairBasedAcknowledgeResponse_Data
	//	*DescriptorPairBasedAcknowledgeResponse_Error
	Response isDescriptorPairBasedAcknowledgeResponse_Response `protobuf_oneof:"response"`
}

func (x *DescriptorPairBasedAcknowledgeResponse) Reset() {
	*x = DescriptorPairBasedAcknowledgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptorPairBasedAcknowledgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptorPairBasedAcknowledgeResponse) ProtoMessage() {}

func (x *DescriptorPairBasedAcknowledgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptorPairBasedAcknowledgeResponse.ProtoReflect.Descriptor instead.
func (*DescriptorPairBasedAcknowledgeResponse) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{1}
}

func (m *DescriptorPairBasedAcknowledgeResponse) GetResponse() isDescriptorPairBasedAcknowledgeResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DescriptorPairBasedAcknowledgeResponse) GetData() *DescriptorPairBasedIdentifier {
	if x, ok := x.GetResponse().(*DescriptorPairBasedAcknowledgeResponse_Data); ok {
		return x.Data
	}
	return nil
}

func (x *DescriptorPairBasedAcknowledgeResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*DescriptorPairBasedAcknowledgeResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isDescriptorPairBasedAcknowledgeResponse_Response interface {
	isDescriptorPairBasedAcknowledgeResponse_Response()
}

type DescriptorPairBasedAcknowledgeResponse_Data struct {
	Data *DescriptorPairBasedIdentifier `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type DescriptorPairBasedAcknowledgeResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*DescriptorPairBasedAcknowledgeResponse_Data) isDescriptorPairBasedAcknowledgeResponse_Response() {
}

func (*DescriptorPairBasedAcknowledgeResponse_Error) isDescriptorPairBasedAcknowledgeResponse_Response() {
}

// representation of mapping rule (which specifies rules for transformation data into the system)
type MappingRuleDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SrcDescriptor   string            `protobuf:"bytes,2,opt,name=src_descriptor,json=srcDescriptor,proto3" json:"src_descriptor,omitempty"`
	DestDescriptor  string            `protobuf:"bytes,3,opt,name=dest_descriptor,json=destDescriptor,proto3" json:"dest_descriptor,omitempty"`
	Transformations []*Transformation `protobuf:"bytes,4,rep,name=transformations,proto3" json:"transformations,omitempty"`
	Scope           string            `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *MappingRuleDefinition) Reset() {
	*x = MappingRuleDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingRuleDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingRuleDefinition) ProtoMessage() {}

func (x *MappingRuleDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingRuleDefinition.ProtoReflect.Descriptor instead.
func (*MappingRuleDefinition) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{2}
}

func (x *MappingRuleDefinition) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MappingRuleDefinition) GetSrcDescriptor() string {
	if x != nil {
		return x.SrcDescriptor
	}
	return ""
}

func (x *MappingRuleDefinition) GetDestDescriptor() string {
	if x != nil {
		return x.DestDescriptor
	}
	return ""
}

func (x *MappingRuleDefinition) GetTransformations() []*Transformation {
	if x != nil {
		return x.Transformations
	}
	return nil
}

func (x *MappingRuleDefinition) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type MappingRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*MappingRuleResponse_Data
	//	*MappingRuleResponse_Error
	Response isMappingRuleResponse_Response `protobuf_oneof:"response"`
}

func (x *MappingRuleResponse) Reset() {
	*x = MappingRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingRuleResponse) ProtoMessage() {}

func (x *MappingRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingRuleResponse.ProtoReflect.Descriptor instead.
func (*MappingRuleResponse) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{3}
}

func (m *MappingRuleResponse) GetResponse() isMappingRuleResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *MappingRuleResponse) GetData() *MappingRuleDefinition {
	if x, ok := x.GetResponse().(*MappingRuleResponse_Data); ok {
		return x.Data
	}
	return nil
}

func (x *MappingRuleResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*MappingRuleResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isMappingRuleResponse_Response interface {
	isMappingRuleResponse_Response()
}

type MappingRuleResponse_Data struct {
	Data *MappingRuleDefinition `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type MappingRuleResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*MappingRuleResponse_Data) isMappingRuleResponse_Response() {}

func (*MappingRuleResponse_Error) isMappingRuleResponse_Response() {}

type DescriptorPairBasedIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                             // entity id
	SrcDescriptor  string `protobuf:"bytes,2,opt,name=src_descriptor,json=srcDescriptor,proto3" json:"src_descriptor,omitempty"`    // the src descriptor name that the entity is depend on
	DestDescriptor string `protobuf:"bytes,3,opt,name=dest_descriptor,json=destDescriptor,proto3" json:"dest_descriptor,omitempty"` // the dest descriptor name that the entity is depend on
}

func (x *DescriptorPairBasedIdentifier) Reset() {
	*x = DescriptorPairBasedIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptorPairBasedIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptorPairBasedIdentifier) ProtoMessage() {}

func (x *DescriptorPairBasedIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptorPairBasedIdentifier.ProtoReflect.Descriptor instead.
func (*DescriptorPairBasedIdentifier) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{4}
}

func (x *DescriptorPairBasedIdentifier) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DescriptorPairBasedIdentifier) GetSrcDescriptor() string {
	if x != nil {
		return x.SrcDescriptor
	}
	return ""
}

func (x *DescriptorPairBasedIdentifier) GetDestDescriptor() string {
	if x != nil {
		return x.DestDescriptor
	}
	return ""
}

type DescriptorPairBasedResultsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*DescriptorPairBasedIdentifier `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *DescriptorPairBasedResultsList) Reset() {
	*x = DescriptorPairBasedResultsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptorPairBasedResultsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptorPairBasedResultsList) ProtoMessage() {}

func (x *DescriptorPairBasedResultsList) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptorPairBasedResultsList.ProtoReflect.Descriptor instead.
func (*DescriptorPairBasedResultsList) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{5}
}

func (x *DescriptorPairBasedResultsList) GetResults() []*DescriptorPairBasedIdentifier {
	if x != nil {
		return x.Results
	}
	return nil
}

// representation of mapping rule list(representation of rules using pair based descriptors)
type MappingRuleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*MappingRuleList_Data
	//	*MappingRuleList_Error
	Response isMappingRuleList_Response `protobuf_oneof:"response"`
}

func (x *MappingRuleList) Reset() {
	*x = MappingRuleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingRuleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingRuleList) ProtoMessage() {}

func (x *MappingRuleList) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingRuleList.ProtoReflect.Descriptor instead.
func (*MappingRuleList) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{6}
}

func (m *MappingRuleList) GetResponse() isMappingRuleList_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *MappingRuleList) GetData() *DescriptorPairBasedResultsList {
	if x, ok := x.GetResponse().(*MappingRuleList_Data); ok {
		return x.Data
	}
	return nil
}

func (x *MappingRuleList) GetError() *Error {
	if x, ok := x.GetResponse().(*MappingRuleList_Error); ok {
		return x.Error
	}
	return nil
}

type isMappingRuleList_Response interface {
	isMappingRuleList_Response()
}

type MappingRuleList_Data struct {
	Data *DescriptorPairBasedResultsList `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type MappingRuleList_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*MappingRuleList_Data) isMappingRuleList_Response() {}

func (*MappingRuleList_Error) isMappingRuleList_Response() {}

type DescriptorPairBasedVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcDescriptor  string `protobuf:"bytes,1,opt,name=src_descriptor,json=srcDescriptor,proto3" json:"src_descriptor,omitempty"`
	DestDescriptor string `protobuf:"bytes,2,opt,name=dest_descriptor,json=destDescriptor,proto3" json:"dest_descriptor,omitempty"`
	VersionId      string `protobuf:"bytes,3,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Scope          string `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *DescriptorPairBasedVersionRequest) Reset() {
	*x = DescriptorPairBasedVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_mapper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptorPairBasedVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptorPairBasedVersionRequest) ProtoMessage() {}

func (x *DescriptorPairBasedVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_mapper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptorPairBasedVersionRequest.ProtoReflect.Descriptor instead.
func (*DescriptorPairBasedVersionRequest) Descriptor() ([]byte, []int) {
	return file_common_mapper_proto_rawDescGZIP(), []int{7}
}

func (x *DescriptorPairBasedVersionRequest) GetSrcDescriptor() string {
	if x != nil {
		return x.SrcDescriptor
	}
	return ""
}

func (x *DescriptorPairBasedVersionRequest) GetDestDescriptor() string {
	if x != nil {
		return x.DestDescriptor
	}
	return ""
}

func (x *DescriptorPairBasedVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *DescriptorPairBasedVersionRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

var File_common_mapper_proto protoreflect.FileDescriptor

var file_common_mapper_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x1a,
	0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x20, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61, 0x73,
	0x65, 0x64, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x72, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x72, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x26,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x64, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x15, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x72, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
	0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61, 0x73, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x72, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x1e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61, 0x73, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x69,
	0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61, 0x73, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x86, 0x01,
	0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61, 0x73, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x69, 0x72, 0x42, 0x61, 0x73, 0x65, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x72, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x72, 0x63, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x42, 0x75, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x6e, 0x6f, 0x76,
	0x61, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x42, 0x19, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x65, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67,
	0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_mapper_proto_rawDescOnce sync.Once
	file_common_mapper_proto_rawDescData = file_common_mapper_proto_rawDesc
)

func file_common_mapper_proto_rawDescGZIP() []byte {
	file_common_mapper_proto_rawDescOnce.Do(func() {
		file_common_mapper_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_mapper_proto_rawDescData)
	})
	return file_common_mapper_proto_rawDescData
}

var file_common_mapper_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_mapper_proto_goTypes = []interface{}{
	(*DescriptorPairBasedGetDefinition)(nil),       // 0: titanium.DescriptorPairBasedGetDefinition
	(*DescriptorPairBasedAcknowledgeResponse)(nil), // 1: titanium.DescriptorPairBasedAcknowledgeResponse
	(*MappingRuleDefinition)(nil),                  // 2: titanium.MappingRuleDefinition
	(*MappingRuleResponse)(nil),                    // 3: titanium.MappingRuleResponse
	(*DescriptorPairBasedIdentifier)(nil),          // 4: titanium.DescriptorPairBasedIdentifier
	(*DescriptorPairBasedResultsList)(nil),         // 5: titanium.DescriptorPairBasedResultsList
	(*MappingRuleList)(nil),                        // 6: titanium.MappingRuleList
	(*DescriptorPairBasedVersionRequest)(nil),      // 7: titanium.DescriptorPairBasedVersionRequest
	(*Identifier)(nil),                             // 8: titanium.Identifier
	(*Error)(nil),                                  // 9: titanium.Error
	(*Transformation)(nil),                         // 10: titanium.Transformation
}
var file_common_mapper_proto_depIdxs = []int32{
	8,  // 0: titanium.DescriptorPairBasedGetDefinition.identifier:type_name -> titanium.Identifier
	4,  // 1: titanium.DescriptorPairBasedAcknowledgeResponse.data:type_name -> titanium.DescriptorPairBasedIdentifier
	9,  // 2: titanium.DescriptorPairBasedAcknowledgeResponse.error:type_name -> titanium.Error
	10, // 3: titanium.MappingRuleDefinition.transformations:type_name -> titanium.Transformation
	2,  // 4: titanium.MappingRuleResponse.data:type_name -> titanium.MappingRuleDefinition
	9,  // 5: titanium.MappingRuleResponse.error:type_name -> titanium.Error
	4,  // 6: titanium.DescriptorPairBasedResultsList.results:type_name -> titanium.DescriptorPairBasedIdentifier
	5,  // 7: titanium.MappingRuleList.data:type_name -> titanium.DescriptorPairBasedResultsList
	9,  // 8: titanium.MappingRuleList.error:type_name -> titanium.Error
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_common_mapper_proto_init() }
func file_common_mapper_proto_init() {
	if File_common_mapper_proto != nil {
		return
	}
	file_common_gateway_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_mapper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptorPairBasedGetDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_mapper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptorPairBasedAcknowledgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_mapper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingRuleDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_mapper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_mapper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptorPairBasedIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_mapper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptorPairBasedResultsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_mapper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingRuleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_mapper_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptorPairBasedVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_mapper_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DescriptorPairBasedAcknowledgeResponse_Data)(nil),
		(*DescriptorPairBasedAcknowledgeResponse_Error)(nil),
	}
	file_common_mapper_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*MappingRuleResponse_Data)(nil),
		(*MappingRuleResponse_Error)(nil),
	}
	file_common_mapper_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*MappingRuleList_Data)(nil),
		(*MappingRuleList_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_mapper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_mapper_proto_goTypes,
		DependencyIndexes: file_common_mapper_proto_depIdxs,
		MessageInfos:      file_common_mapper_proto_msgTypes,
	}.Build()
	File_common_mapper_proto = out.File
	file_common_mapper_proto_rawDesc = nil
	file_common_mapper_proto_goTypes = nil
	file_common_mapper_proto_depIdxs = nil
}
