// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: common/data.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadMode int32

const (
	UploadMode_SUBMISSION UploadMode = 0
	UploadMode_PARTIAL    UploadMode = 1
	UploadMode_CUSTOM     UploadMode = 2
	UploadMode_CORRECTION UploadMode = 3
	UploadMode_submission UploadMode = 0
	UploadMode_partial    UploadMode = 1
	UploadMode_custom     UploadMode = 2
	UploadMode_correction UploadMode = 3
)

// Enum value maps for UploadMode.
var (
	UploadMode_name = map[int32]string{
		0: "SUBMISSION",
		1: "PARTIAL",
		2: "CUSTOM",
		3: "CORRECTION",
		// Duplicate value: 0: "submission",
		// Duplicate value: 1: "partial",
		// Duplicate value: 2: "custom",
		// Duplicate value: 3: "correction",
	}
	UploadMode_value = map[string]int32{
		"SUBMISSION": 0,
		"PARTIAL":    1,
		"CUSTOM":     2,
		"CORRECTION": 3,
		"submission": 0,
		"partial":    1,
		"custom":     2,
		"correction": 3,
	}
)

func (x UploadMode) Enum() *UploadMode {
	p := new(UploadMode)
	*p = x
	return p
}

func (x UploadMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_data_proto_enumTypes[0].Descriptor()
}

func (UploadMode) Type() protoreflect.EnumType {
	return &file_common_data_proto_enumTypes[0]
}

func (x UploadMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadMode.Descriptor instead.
func (UploadMode) EnumDescriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{0}
}

type Protocol int32

const (
	Protocol_S3  Protocol = 0
	Protocol_TUS Protocol = 1
	Protocol_s3  Protocol = 0
	Protocol_tus Protocol = 1
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "S3",
		1: "TUS",
		// Duplicate value: 0: "s3",
		// Duplicate value: 1: "tus",
	}
	Protocol_value = map[string]int32{
		"S3":  0,
		"TUS": 1,
		"s3":  0,
		"tus": 1,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_common_data_proto_enumTypes[1].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_common_data_proto_enumTypes[1]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{1}
}

type UploadAuthorizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid    bool   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Uuid       string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TargetPath string `protobuf:"bytes,3,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
}

func (x *UploadAuthorizationResponse) Reset() {
	*x = UploadAuthorizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAuthorizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAuthorizationResponse) ProtoMessage() {}

func (x *UploadAuthorizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAuthorizationResponse.ProtoReflect.Descriptor instead.
func (*UploadAuthorizationResponse) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{0}
}

func (x *UploadAuthorizationResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *UploadAuthorizationResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UploadAuthorizationResponse) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

type UploadNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CurrentPath string `protobuf:"bytes,2,opt,name=current_path,json=currentPath,proto3" json:"current_path,omitempty"`
	TargetPath  string `protobuf:"bytes,3,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
}

func (x *UploadNotifyRequest) Reset() {
	*x = UploadNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadNotifyRequest) ProtoMessage() {}

func (x *UploadNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadNotifyRequest.ProtoReflect.Descriptor instead.
func (*UploadNotifyRequest) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{1}
}

func (x *UploadNotifyRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UploadNotifyRequest) GetCurrentPath() string {
	if x != nil {
		return x.CurrentPath
	}
	return ""
}

func (x *UploadNotifyRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

type SubmittedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId               string      `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	SubmittedDate         string      `protobuf:"bytes,2,opt,name=submitted_date,json=submittedDate,proto3" json:"submitted_date,omitempty"`
	ConsensusRunTimestamp string      `protobuf:"bytes,3,opt,name=consensus_run_timestamp,json=consensusRunTimestamp,proto3" json:"consensus_run_timestamp,omitempty"`
	Filter                string      `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Filters               []*Filter   `protobuf:"bytes,5,rep,name=filters,proto3" json:"filters,omitempty"`
	FilterPack            *FilterPack `protobuf:"bytes,6,opt,name=filter_pack,json=filterPack,proto3" json:"filter_pack,omitempty"`
	OrderBy               *OrderBy    `protobuf:"bytes,7,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	TraceName             string      `protobuf:"bytes,8,opt,name=trace_name,json=traceName,proto3" json:"trace_name,omitempty"`
	Page                  *Page       `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SubmittedRequest) Reset() {
	*x = SubmittedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmittedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmittedRequest) ProtoMessage() {}

func (x *SubmittedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmittedRequest.ProtoReflect.Descriptor instead.
func (*SubmittedRequest) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{2}
}

func (x *SubmittedRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *SubmittedRequest) GetSubmittedDate() string {
	if x != nil {
		return x.SubmittedDate
	}
	return ""
}

func (x *SubmittedRequest) GetConsensusRunTimestamp() string {
	if x != nil {
		return x.ConsensusRunTimestamp
	}
	return ""
}

func (x *SubmittedRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *SubmittedRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SubmittedRequest) GetFilterPack() *FilterPack {
	if x != nil {
		return x.FilterPack
	}
	return nil
}

func (x *SubmittedRequest) GetOrderBy() *OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *SubmittedRequest) GetTraceName() string {
	if x != nil {
		return x.TraceName
	}
	return ""
}

func (x *SubmittedRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// SubmittedResponse is collected submitted data
type SubmittedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*SubmittedResponse_Data
	//	*SubmittedResponse_Error
	Response isSubmittedResponse_Response `protobuf_oneof:"response"`
}

func (x *SubmittedResponse) Reset() {
	*x = SubmittedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmittedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmittedResponse) ProtoMessage() {}

func (x *SubmittedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmittedResponse.ProtoReflect.Descriptor instead.
func (*SubmittedResponse) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{3}
}

func (m *SubmittedResponse) GetResponse() isSubmittedResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SubmittedResponse) GetData() *SubmittedResponseData {
	if x, ok := x.GetResponse().(*SubmittedResponse_Data); ok {
		return x.Data
	}
	return nil
}

func (x *SubmittedResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*SubmittedResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isSubmittedResponse_Response interface {
	isSubmittedResponse_Response()
}

type SubmittedResponse_Data struct {
	Data *SubmittedResponseData `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type SubmittedResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SubmittedResponse_Data) isSubmittedResponse_Response() {}

func (*SubmittedResponse_Error) isSubmittedResponse_Response() {}

// SubmittedResponseData is data collected from the submitted data request
type SubmittedResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*ColumnInfo   `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"` //List of column information for the data
	Rows    []*SubmittedRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`       //List of rows of submitted data
	Page    *Page           `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`       //Total number of rows of submitted data
}

func (x *SubmittedResponseData) Reset() {
	*x = SubmittedResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmittedResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmittedResponseData) ProtoMessage() {}

func (x *SubmittedResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmittedResponseData.ProtoReflect.Descriptor instead.
func (*SubmittedResponseData) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{4}
}

func (x *SubmittedResponseData) GetColumns() []*ColumnInfo {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *SubmittedResponseData) GetRows() []*SubmittedRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *SubmittedResponseData) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// SubmittedRow is representation of a row of submitted data (values, validation error count, outlier, benchmark)
type SubmittedRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*structpb.Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` //Values of the data in the row
	// Types that are assignable to Metadata:
	//
	//	*SubmittedRow_ValidationErrorCount
	//	*SubmittedRow_Outlier
	//	*SubmittedRow_Benchmark
	Metadata isSubmittedRow_Metadata `protobuf_oneof:"metadata"`
}

func (x *SubmittedRow) Reset() {
	*x = SubmittedRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmittedRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmittedRow) ProtoMessage() {}

func (x *SubmittedRow) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmittedRow.ProtoReflect.Descriptor instead.
func (*SubmittedRow) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{5}
}

func (x *SubmittedRow) GetValues() []*structpb.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

func (m *SubmittedRow) GetMetadata() isSubmittedRow_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *SubmittedRow) GetValidationErrorCount() int32 {
	if x, ok := x.GetMetadata().(*SubmittedRow_ValidationErrorCount); ok {
		return x.ValidationErrorCount
	}
	return 0
}

func (x *SubmittedRow) GetOutlier() string {
	if x, ok := x.GetMetadata().(*SubmittedRow_Outlier); ok {
		return x.Outlier
	}
	return ""
}

func (x *SubmittedRow) GetBenchmark() string {
	if x, ok := x.GetMetadata().(*SubmittedRow_Benchmark); ok {
		return x.Benchmark
	}
	return ""
}

type isSubmittedRow_Metadata interface {
	isSubmittedRow_Metadata()
}

type SubmittedRow_ValidationErrorCount struct {
	ValidationErrorCount int32 `protobuf:"varint,2,opt,name=validation_error_count,json=validationErrorCount,proto3,oneof"` //Number of validation errors for the data in the row
}

type SubmittedRow_Outlier struct {
	Outlier string `protobuf:"bytes,3,opt,name=outlier,proto3,oneof"` // Outlier information for the data in the row
}

type SubmittedRow_Benchmark struct {
	Benchmark string `protobuf:"bytes,4,opt,name=benchmark,proto3,oneof"` //Benchmark information for the data in the row
}

func (*SubmittedRow_ValidationErrorCount) isSubmittedRow_Metadata() {}

func (*SubmittedRow_Outlier) isSubmittedRow_Metadata() {}

func (*SubmittedRow_Benchmark) isSubmittedRow_Metadata() {}

type ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId               string      `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	SubmissionDate        string      `protobuf:"bytes,2,opt,name=submission_date,json=submissionDate,proto3" json:"submission_date,omitempty"`
	ConsensusRunTimestamp string      `protobuf:"bytes,3,opt,name=consensus_run_timestamp,json=consensusRunTimestamp,proto3" json:"consensus_run_timestamp,omitempty"`
	IncludeHeader         bool        `protobuf:"varint,4,opt,name=include_header,json=includeHeader,proto3" json:"include_header,omitempty"`
	FilterPack            *FilterPack `protobuf:"bytes,5,opt,name=filter_pack,json=filterPack,proto3" json:"filter_pack,omitempty"`
	Filters               []*Filter   `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	OrderBy               *OrderBy    `protobuf:"bytes,7,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	TraceName             string      `protobuf:"bytes,8,opt,name=trace_name,json=traceName,proto3" json:"trace_name,omitempty"`
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{6}
}

func (x *ExportRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ExportRequest) GetSubmissionDate() string {
	if x != nil {
		return x.SubmissionDate
	}
	return ""
}

func (x *ExportRequest) GetConsensusRunTimestamp() string {
	if x != nil {
		return x.ConsensusRunTimestamp
	}
	return ""
}

func (x *ExportRequest) GetIncludeHeader() bool {
	if x != nil {
		return x.IncludeHeader
	}
	return false
}

func (x *ExportRequest) GetFilterPack() *FilterPack {
	if x != nil {
		return x.FilterPack
	}
	return nil
}

func (x *ExportRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ExportRequest) GetOrderBy() *OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *ExportRequest) GetTraceName() string {
	if x != nil {
		return x.TraceName
	}
	return ""
}

// ExportReportRequest is a request for exporting report data
type ExportReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId               string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`                                             //Unique identifier for the asset
	ConsensusRunTimestamp string `protobuf:"bytes,2,opt,name=consensus_run_timestamp,json=consensusRunTimestamp,proto3" json:"consensus_run_timestamp,omitempty"` //ID of the consensus run
	TraceName             string `protobuf:"bytes,3,opt,name=trace_name,json=traceName,proto3" json:"trace_name,omitempty"`                                       //Name of the trace associated with the data
}

func (x *ExportReportRequest) Reset() {
	*x = ExportReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportReportRequest) ProtoMessage() {}

func (x *ExportReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportReportRequest.ProtoReflect.Descriptor instead.
func (*ExportReportRequest) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{7}
}

func (x *ExportReportRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ExportReportRequest) GetConsensusRunTimestamp() string {
	if x != nil {
		return x.ConsensusRunTimestamp
	}
	return ""
}

func (x *ExportReportRequest) GetTraceName() string {
	if x != nil {
		return x.TraceName
	}
	return ""
}

// ExportResponse is a response containing pre-signed URLs and compression type for exporting report
type ExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ExportResponse_Data
	//	*ExportResponse_Error
	Response isExportResponse_Response `protobuf_oneof:"response"`
}

func (x *ExportResponse) Reset() {
	*x = ExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResponse) ProtoMessage() {}

func (x *ExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResponse.ProtoReflect.Descriptor instead.
func (*ExportResponse) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{8}
}

func (m *ExportResponse) GetResponse() isExportResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ExportResponse) GetData() *ExportPresignedUrlResponseResponseData {
	if x, ok := x.GetResponse().(*ExportResponse_Data); ok {
		return x.Data
	}
	return nil
}

func (x *ExportResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*ExportResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isExportResponse_Response interface {
	isExportResponse_Response()
}

type ExportResponse_Data struct {
	Data *ExportPresignedUrlResponseResponseData `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type ExportResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ExportResponse_Data) isExportResponse_Response() {}

func (*ExportResponse_Error) isExportResponse_Response() {}

// ExportPresignedUrlResponseResponseData is data that contains pre signed url and compression type
type ExportPresignedUrlResponseResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetRequestUrl string `protobuf:"bytes,1,opt,name=getRequestUrl,proto3" json:"getRequestUrl,omitempty"` // a string that represent url to get export data.
	FileName      string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Compression   string `protobuf:"bytes,3,opt,name=compression,proto3" json:"compression,omitempty"` //a string that represents a type of compression for export data.
}

func (x *ExportPresignedUrlResponseResponseData) Reset() {
	*x = ExportPresignedUrlResponseResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPresignedUrlResponseResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPresignedUrlResponseResponseData) ProtoMessage() {}

func (x *ExportPresignedUrlResponseResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPresignedUrlResponseResponseData.ProtoReflect.Descriptor instead.
func (*ExportPresignedUrlResponseResponseData) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{9}
}

func (x *ExportPresignedUrlResponseResponseData) GetGetRequestUrl() string {
	if x != nil {
		return x.GetRequestUrl
	}
	return ""
}

func (x *ExportPresignedUrlResponseResponseData) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ExportPresignedUrlResponseResponseData) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

type ExportResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header      string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Compression string `protobuf:"bytes,2,opt,name=compression,proto3" json:"compression,omitempty"`
	Data        string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExportResponseData) Reset() {
	*x = ExportResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResponseData) ProtoMessage() {}

func (x *ExportResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResponseData.ProtoReflect.Descriptor instead.
func (*ExportResponseData) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{10}
}

func (x *ExportResponseData) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *ExportResponseData) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

func (x *ExportResponseData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// UploadURLRequest is a request to get pre-signed url for data uploading.
type UploadURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date           string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	AssetId        string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	FileName       string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Client         string `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	TraceName      string `protobuf:"bytes,5,opt,name=trace_name,json=traceName,proto3" json:"trace_name,omitempty"`
	DescriptorName string `protobuf:"bytes,6,opt,name=descriptor_name,json=descriptorName,proto3" json:"descriptor_name,omitempty"`
}

func (x *UploadURLRequest) Reset() {
	*x = UploadURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadURLRequest) ProtoMessage() {}

func (x *UploadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadURLRequest.ProtoReflect.Descriptor instead.
func (*UploadURLRequest) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{11}
}

func (x *UploadURLRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UploadURLRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *UploadURLRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadURLRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *UploadURLRequest) GetTraceName() string {
	if x != nil {
		return x.TraceName
	}
	return ""
}

func (x *UploadURLRequest) GetDescriptorName() string {
	if x != nil {
		return x.DescriptorName
	}
	return ""
}

type UploadDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*UploadDataResponse_S3Url
	//	*UploadDataResponse_Error
	//	*UploadDataResponse_TusPayload
	Response isUploadDataResponse_Response `protobuf_oneof:"response"`
}

func (x *UploadDataResponse) Reset() {
	*x = UploadDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataResponse) ProtoMessage() {}

func (x *UploadDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataResponse.ProtoReflect.Descriptor instead.
func (*UploadDataResponse) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{12}
}

func (m *UploadDataResponse) GetResponse() isUploadDataResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *UploadDataResponse) GetS3Url() string {
	if x, ok := x.GetResponse().(*UploadDataResponse_S3Url); ok {
		return x.S3Url
	}
	return ""
}

func (x *UploadDataResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*UploadDataResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UploadDataResponse) GetTusPayload() string {
	if x, ok := x.GetResponse().(*UploadDataResponse_TusPayload); ok {
		return x.TusPayload
	}
	return ""
}

type isUploadDataResponse_Response interface {
	isUploadDataResponse_Response()
}

type UploadDataResponse_S3Url struct {
	S3Url string `protobuf:"bytes,1,opt,name=s3_url,json=s3Url,proto3,oneof"`
}

type UploadDataResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type UploadDataResponse_TusPayload struct {
	TusPayload string `protobuf:"bytes,3,opt,name=tus_payload,json=tusPayload,proto3,oneof"`
}

func (*UploadDataResponse_S3Url) isUploadDataResponse_Response() {}

func (*UploadDataResponse_Error) isUploadDataResponse_Response() {}

func (*UploadDataResponse_TusPayload) isUploadDataResponse_Response() {}

type CompleteDataUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client   string `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	AssetId  string `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Asset    string `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	SubAsset string `protobuf:"bytes,4,opt,name=sub_asset,json=subAsset,proto3" json:"sub_asset,omitempty"`
	Service  string `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	SnapTime string `protobuf:"bytes,6,opt,name=snap_time,json=snapTime,proto3" json:"snap_time,omitempty"`
	Date     string `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *CompleteDataUploadRequest) Reset() {
	*x = CompleteDataUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteDataUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteDataUploadRequest) ProtoMessage() {}

func (x *CompleteDataUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteDataUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteDataUploadRequest) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{13}
}

func (x *CompleteDataUploadRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *CompleteDataUploadRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *CompleteDataUploadRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *CompleteDataUploadRequest) GetSubAsset() string {
	if x != nil {
		return x.SubAsset
	}
	return ""
}

func (x *CompleteDataUploadRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CompleteDataUploadRequest) GetSnapTime() string {
	if x != nil {
		return x.SnapTime
	}
	return ""
}

func (x *CompleteDataUploadRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type CompleteDataUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*CompleteDataUploadResponse_Success
	//	*CompleteDataUploadResponse_Error
	Response isCompleteDataUploadResponse_Response `protobuf_oneof:"response"`
}

func (x *CompleteDataUploadResponse) Reset() {
	*x = CompleteDataUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteDataUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteDataUploadResponse) ProtoMessage() {}

func (x *CompleteDataUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteDataUploadResponse.ProtoReflect.Descriptor instead.
func (*CompleteDataUploadResponse) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{14}
}

func (m *CompleteDataUploadResponse) GetResponse() isCompleteDataUploadResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *CompleteDataUploadResponse) GetSuccess() bool {
	if x, ok := x.GetResponse().(*CompleteDataUploadResponse_Success); ok {
		return x.Success
	}
	return false
}

func (x *CompleteDataUploadResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*CompleteDataUploadResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isCompleteDataUploadResponse_Response interface {
	isCompleteDataUploadResponse_Response()
}

type CompleteDataUploadResponse_Success struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3,oneof"`
}

type CompleteDataUploadResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*CompleteDataUploadResponse_Success) isCompleteDataUploadResponse_Response() {}

func (*CompleteDataUploadResponse_Error) isCompleteDataUploadResponse_Response() {}

type UploadDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client     string      `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	FileName   string      `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Annotation *Annotation `protobuf:"bytes,3,opt,name=annotation,proto3" json:"annotation,omitempty"`
	Protocol   Protocol    `protobuf:"varint,4,opt,name=protocol,proto3,enum=titanium.Protocol" json:"protocol,omitempty"`
}

func (x *UploadDataRequest) Reset() {
	*x = UploadDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataRequest) ProtoMessage() {}

func (x *UploadDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataRequest.ProtoReflect.Descriptor instead.
func (*UploadDataRequest) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{15}
}

func (x *UploadDataRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *UploadDataRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadDataRequest) GetAnnotation() *Annotation {
	if x != nil {
		return x.Annotation
	}
	return nil
}

func (x *UploadDataRequest) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_S3
}

type Annotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode        UploadMode       `protobuf:"varint,1,opt,name=mode,proto3,enum=titanium.UploadMode" json:"mode,omitempty"`
	AssetId     string           `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Asset       string           `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	SubAsset    string           `protobuf:"bytes,4,opt,name=sub_asset,json=subAsset,proto3" json:"sub_asset,omitempty"`
	Service     string           `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	SnapTime    string           `protobuf:"bytes,6,opt,name=snap_time,json=snapTime,proto3" json:"snap_time,omitempty"`
	Date        string           `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Description string           `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Annotations *structpb.Struct `protobuf:"bytes,9,opt,name=annotations,proto3" json:"annotations,omitempty"`
}

func (x *Annotation) Reset() {
	*x = Annotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotation) ProtoMessage() {}

func (x *Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_common_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotation.ProtoReflect.Descriptor instead.
func (*Annotation) Descriptor() ([]byte, []int) {
	return file_common_data_proto_rawDescGZIP(), []int{16}
}

func (x *Annotation) GetMode() UploadMode {
	if x != nil {
		return x.Mode
	}
	return UploadMode_SUBMISSION
}

func (x *Annotation) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Annotation) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Annotation) GetSubAsset() string {
	if x != nil {
		return x.SubAsset
	}
	return ""
}

func (x *Annotation) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Annotation) GetSnapTime() string {
	if x != nil {
		return x.SnapTime
	}
	return ""
}

func (x *Annotation) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Annotation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Annotation) GetAnnotations() *structpb.Struct {
	if x != nil {
		return x.Annotations
	}
	return nil
}

var File_common_data_proto protoreflect.FileDescriptor

var file_common_data_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x1b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x6d, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x22, 0xf7, 0x02, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74,
	0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x2b,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e,
	0x69, 0x75, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x7f,
	0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61,
	0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x97, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x74,
	0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69,
	0x75, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x0c, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x2e, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x14, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x09, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe1, 0x02, 0x0a, 0x0d, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69,
	0x75, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x87,
	0x01, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x72,
	0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x75, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x69, 0x74, 0x61,
	0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x26, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x01, 0x0a,
	0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x73, 0x33, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x73, 0x33, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0b, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x74,
	0x75, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x27,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
	0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xac, 0x02, 0x0a, 0x0a, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2a, 0x82, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x03, 0x1a, 0x02, 0x10, 0x01, 0x2a, 0x30, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x73, 0x33, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x74, 0x75, 0x73, 0x10, 0x01, 0x1a, 0x02, 0x10, 0x01, 0x42, 0x70, 0x0a, 0x20, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e,
	0x69, 0x75, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x42, 0x14,
	0x44, 0x61, 0x74, 0x61, 0x55, 0x74, 0x69, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73,
	0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_data_proto_rawDescOnce sync.Once
	file_common_data_proto_rawDescData = file_common_data_proto_rawDesc
)

func file_common_data_proto_rawDescGZIP() []byte {
	file_common_data_proto_rawDescOnce.Do(func() {
		file_common_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_data_proto_rawDescData)
	})
	return file_common_data_proto_rawDescData
}

var file_common_data_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_data_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_common_data_proto_goTypes = []interface{}{
	(UploadMode)(0),                                // 0: titanium.UploadMode
	(Protocol)(0),                                  // 1: titanium.Protocol
	(*UploadAuthorizationResponse)(nil),            // 2: titanium.UploadAuthorizationResponse
	(*UploadNotifyRequest)(nil),                    // 3: titanium.UploadNotifyRequest
	(*SubmittedRequest)(nil),                       // 4: titanium.SubmittedRequest
	(*SubmittedResponse)(nil),                      // 5: titanium.SubmittedResponse
	(*SubmittedResponseData)(nil),                  // 6: titanium.SubmittedResponseData
	(*SubmittedRow)(nil),                           // 7: titanium.SubmittedRow
	(*ExportRequest)(nil),                          // 8: titanium.ExportRequest
	(*ExportReportRequest)(nil),                    // 9: titanium.ExportReportRequest
	(*ExportResponse)(nil),                         // 10: titanium.ExportResponse
	(*ExportPresignedUrlResponseResponseData)(nil), // 11: titanium.ExportPresignedUrlResponseResponseData
	(*ExportResponseData)(nil),                     // 12: titanium.ExportResponseData
	(*UploadURLRequest)(nil),                       // 13: titanium.UploadURLRequest
	(*UploadDataResponse)(nil),                     // 14: titanium.UploadDataResponse
	(*CompleteDataUploadRequest)(nil),              // 15: titanium.CompleteDataUploadRequest
	(*CompleteDataUploadResponse)(nil),             // 16: titanium.CompleteDataUploadResponse
	(*UploadDataRequest)(nil),                      // 17: titanium.UploadDataRequest
	(*Annotation)(nil),                             // 18: titanium.Annotation
	(*Filter)(nil),                                 // 19: titanium.Filter
	(*FilterPack)(nil),                             // 20: titanium.FilterPack
	(*OrderBy)(nil),                                // 21: titanium.OrderBy
	(*Page)(nil),                                   // 22: titanium.Page
	(*Error)(nil),                                  // 23: titanium.Error
	(*ColumnInfo)(nil),                             // 24: titanium.ColumnInfo
	(*structpb.Value)(nil),                         // 25: google.protobuf.Value
	(*structpb.Struct)(nil),                        // 26: google.protobuf.Struct
}
var file_common_data_proto_depIdxs = []int32{
	19, // 0: titanium.SubmittedRequest.filters:type_name -> titanium.Filter
	20, // 1: titanium.SubmittedRequest.filter_pack:type_name -> titanium.FilterPack
	21, // 2: titanium.SubmittedRequest.orderBy:type_name -> titanium.OrderBy
	22, // 3: titanium.SubmittedRequest.page:type_name -> titanium.Page
	6,  // 4: titanium.SubmittedResponse.data:type_name -> titanium.SubmittedResponseData
	23, // 5: titanium.SubmittedResponse.error:type_name -> titanium.Error
	24, // 6: titanium.SubmittedResponseData.columns:type_name -> titanium.ColumnInfo
	7,  // 7: titanium.SubmittedResponseData.rows:type_name -> titanium.SubmittedRow
	22, // 8: titanium.SubmittedResponseData.page:type_name -> titanium.Page
	25, // 9: titanium.SubmittedRow.values:type_name -> google.protobuf.Value
	20, // 10: titanium.ExportRequest.filter_pack:type_name -> titanium.FilterPack
	19, // 11: titanium.ExportRequest.filters:type_name -> titanium.Filter
	21, // 12: titanium.ExportRequest.orderBy:type_name -> titanium.OrderBy
	11, // 13: titanium.ExportResponse.data:type_name -> titanium.ExportPresignedUrlResponseResponseData
	23, // 14: titanium.ExportResponse.error:type_name -> titanium.Error
	23, // 15: titanium.UploadDataResponse.error:type_name -> titanium.Error
	23, // 16: titanium.CompleteDataUploadResponse.error:type_name -> titanium.Error
	18, // 17: titanium.UploadDataRequest.annotation:type_name -> titanium.Annotation
	1,  // 18: titanium.UploadDataRequest.protocol:type_name -> titanium.Protocol
	0,  // 19: titanium.Annotation.mode:type_name -> titanium.UploadMode
	26, // 20: titanium.Annotation.annotations:type_name -> google.protobuf.Struct
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_common_data_proto_init() }
func file_common_data_proto_init() {
	if File_common_data_proto != nil {
		return
	}
	file_common_gateway_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAuthorizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmittedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmittedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmittedResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmittedRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportPresignedUrlResponseResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteDataUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteDataUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Annotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_data_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SubmittedResponse_Data)(nil),
		(*SubmittedResponse_Error)(nil),
	}
	file_common_data_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SubmittedRow_ValidationErrorCount)(nil),
		(*SubmittedRow_Outlier)(nil),
		(*SubmittedRow_Benchmark)(nil),
	}
	file_common_data_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ExportResponse_Data)(nil),
		(*ExportResponse_Error)(nil),
	}
	file_common_data_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*UploadDataResponse_S3Url)(nil),
		(*UploadDataResponse_Error)(nil),
		(*UploadDataResponse_TusPayload)(nil),
	}
	file_common_data_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*CompleteDataUploadResponse_Success)(nil),
		(*CompleteDataUploadResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_data_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_data_proto_goTypes,
		DependencyIndexes: file_common_data_proto_depIdxs,
		EnumInfos:         file_common_data_proto_enumTypes,
		MessageInfos:      file_common_data_proto_msgTypes,
	}.Build()
	File_common_data_proto = out.File
	file_common_data_proto_rawDesc = nil
	file_common_data_proto_goTypes = nil
	file_common_data_proto_depIdxs = nil
}
