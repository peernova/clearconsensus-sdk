// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: common/submission.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSubmissionFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId      string      `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	TraceName    string      `protobuf:"bytes,2,opt,name=trace_name,json=traceName,proto3" json:"trace_name,omitempty"`
	SnapDateFrom string      `protobuf:"bytes,3,opt,name=snap_date_from,json=snapDateFrom,proto3" json:"snap_date_from,omitempty"`
	SnapDateTo   string      `protobuf:"bytes,4,opt,name=snap_date_to,json=snapDateTo,proto3" json:"snap_date_to,omitempty"`
	OrderBy      *OrderBy    `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	FilterPack   *FilterPack `protobuf:"bytes,6,opt,name=filter_pack,json=filterPack,proto3" json:"filter_pack,omitempty"`
	Page         *Page       `protobuf:"bytes,7,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetSubmissionFilesRequest) Reset() {
	*x = GetSubmissionFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_submission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmissionFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionFilesRequest) ProtoMessage() {}

func (x *GetSubmissionFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_submission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionFilesRequest.ProtoReflect.Descriptor instead.
func (*GetSubmissionFilesRequest) Descriptor() ([]byte, []int) {
	return file_common_submission_proto_rawDescGZIP(), []int{0}
}

func (x *GetSubmissionFilesRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *GetSubmissionFilesRequest) GetTraceName() string {
	if x != nil {
		return x.TraceName
	}
	return ""
}

func (x *GetSubmissionFilesRequest) GetSnapDateFrom() string {
	if x != nil {
		return x.SnapDateFrom
	}
	return ""
}

func (x *GetSubmissionFilesRequest) GetSnapDateTo() string {
	if x != nil {
		return x.SnapDateTo
	}
	return ""
}

func (x *GetSubmissionFilesRequest) GetOrderBy() *OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *GetSubmissionFilesRequest) GetFilterPack() *FilterPack {
	if x != nil {
		return x.FilterPack
	}
	return nil
}

func (x *GetSubmissionFilesRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetSubmissionFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetSubmissionFilesResponse_Error
	//	*GetSubmissionFilesResponse_Data
	Response isGetSubmissionFilesResponse_Response `protobuf_oneof:"response"`
}

func (x *GetSubmissionFilesResponse) Reset() {
	*x = GetSubmissionFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_submission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmissionFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionFilesResponse) ProtoMessage() {}

func (x *GetSubmissionFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_submission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionFilesResponse.ProtoReflect.Descriptor instead.
func (*GetSubmissionFilesResponse) Descriptor() ([]byte, []int) {
	return file_common_submission_proto_rawDescGZIP(), []int{1}
}

func (m *GetSubmissionFilesResponse) GetResponse() isGetSubmissionFilesResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetSubmissionFilesResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*GetSubmissionFilesResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetSubmissionFilesResponse) GetData() *GetSubmissionFilesData {
	if x, ok := x.GetResponse().(*GetSubmissionFilesResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isGetSubmissionFilesResponse_Response interface {
	isGetSubmissionFilesResponse_Response()
}

type GetSubmissionFilesResponse_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetSubmissionFilesResponse_Data struct {
	Data *GetSubmissionFilesData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetSubmissionFilesResponse_Error) isGetSubmissionFilesResponse_Response() {}

func (*GetSubmissionFilesResponse_Data) isGetSubmissionFilesResponse_Response() {}

type GetSubmissionFilesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*ColumnInfo `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows    []*ValuesRow  `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	Page    *Page         `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetSubmissionFilesData) Reset() {
	*x = GetSubmissionFilesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_submission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmissionFilesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionFilesData) ProtoMessage() {}

func (x *GetSubmissionFilesData) ProtoReflect() protoreflect.Message {
	mi := &file_common_submission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionFilesData.ProtoReflect.Descriptor instead.
func (*GetSubmissionFilesData) Descriptor() ([]byte, []int) {
	return file_common_submission_proto_rawDescGZIP(), []int{2}
}

func (x *GetSubmissionFilesData) GetColumns() []*ColumnInfo {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GetSubmissionFilesData) GetRows() []*ValuesRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *GetSubmissionFilesData) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

var File_common_submission_proto protoreflect.FileDescriptor

var file_common_submission_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x69, 0x74, 0x61, 0x6e,
	0x69, 0x75, 0x6d, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6,
	0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x2c,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x35, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e,
	0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x6f,
	0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42, 0x78, 0x0a, 0x20, 0x63,
	0x6f, 0x6d, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x74, 0x69, 0x74, 0x61,
	0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x42,
	0x1c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x01, 0x5a,
	0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x65, 0x72,
	0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_submission_proto_rawDescOnce sync.Once
	file_common_submission_proto_rawDescData = file_common_submission_proto_rawDesc
)

func file_common_submission_proto_rawDescGZIP() []byte {
	file_common_submission_proto_rawDescOnce.Do(func() {
		file_common_submission_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_submission_proto_rawDescData)
	})
	return file_common_submission_proto_rawDescData
}

var file_common_submission_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_common_submission_proto_goTypes = []interface{}{
	(*GetSubmissionFilesRequest)(nil),  // 0: titanium.GetSubmissionFilesRequest
	(*GetSubmissionFilesResponse)(nil), // 1: titanium.GetSubmissionFilesResponse
	(*GetSubmissionFilesData)(nil),     // 2: titanium.GetSubmissionFilesData
	(*OrderBy)(nil),                    // 3: titanium.OrderBy
	(*FilterPack)(nil),                 // 4: titanium.FilterPack
	(*Page)(nil),                       // 5: titanium.Page
	(*Error)(nil),                      // 6: titanium.Error
	(*ColumnInfo)(nil),                 // 7: titanium.ColumnInfo
	(*ValuesRow)(nil),                  // 8: titanium.ValuesRow
}
var file_common_submission_proto_depIdxs = []int32{
	3, // 0: titanium.GetSubmissionFilesRequest.order_by:type_name -> titanium.OrderBy
	4, // 1: titanium.GetSubmissionFilesRequest.filter_pack:type_name -> titanium.FilterPack
	5, // 2: titanium.GetSubmissionFilesRequest.page:type_name -> titanium.Page
	6, // 3: titanium.GetSubmissionFilesResponse.error:type_name -> titanium.Error
	2, // 4: titanium.GetSubmissionFilesResponse.data:type_name -> titanium.GetSubmissionFilesData
	7, // 5: titanium.GetSubmissionFilesData.columns:type_name -> titanium.ColumnInfo
	8, // 6: titanium.GetSubmissionFilesData.rows:type_name -> titanium.ValuesRow
	5, // 7: titanium.GetSubmissionFilesData.page:type_name -> titanium.Page
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_common_submission_proto_init() }
func file_common_submission_proto_init() {
	if File_common_submission_proto != nil {
		return
	}
	file_common_gateway_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_submission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmissionFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_submission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmissionFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_submission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubmissionFilesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_submission_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetSubmissionFilesResponse_Error)(nil),
		(*GetSubmissionFilesResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_submission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_submission_proto_goTypes,
		DependencyIndexes: file_common_submission_proto_depIdxs,
		MessageInfos:      file_common_submission_proto_msgTypes,
	}.Build()
	File_common_submission_proto = out.File
	file_common_submission_proto_rawDesc = nil
	file_common_submission_proto_goTypes = nil
	file_common_submission_proto_depIdxs = nil
}
