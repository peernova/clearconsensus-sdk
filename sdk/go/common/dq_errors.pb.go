// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: common/dq_errors.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Severity int32

const (
	Severity_UNDEFINED_SEVERITY Severity = 0
	Severity_HIGH               Severity = 1
	Severity_MEDIUM             Severity = 2
	Severity_LOW                Severity = 3
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "UNDEFINED_SEVERITY",
		1: "HIGH",
		2: "MEDIUM",
		3: "LOW",
	}
	Severity_value = map[string]int32{
		"UNDEFINED_SEVERITY": 0,
		"HIGH":               1,
		"MEDIUM":             2,
		"LOW":                3,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_common_dq_errors_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_common_dq_errors_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{0}
}

// request for data quality errors related to submitted date , id , asset and etc.
type GetDataQualityErrorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// Types that are assignable to Id:
	//
	//	*GetDataQualityErrorsRequest_SubmissionId
	//	*GetDataQualityErrorsRequest_ConsensusId
	//	*GetDataQualityErrorsRequest_EvaluatedPriceId
	Id            isGetDataQualityErrorsRequest_Id `protobuf_oneof:"id"`
	SubmittedDate string                           `protobuf:"bytes,5,opt,name=submitted_date,json=submittedDate,proto3" json:"submitted_date,omitempty"`
	TraceName     string                           `protobuf:"bytes,6,opt,name=trace_name,json=traceName,proto3" json:"trace_name,omitempty"`
}

func (x *GetDataQualityErrorsRequest) Reset() {
	*x = GetDataQualityErrorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityErrorsRequest) ProtoMessage() {}

func (x *GetDataQualityErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityErrorsRequest.ProtoReflect.Descriptor instead.
func (*GetDataQualityErrorsRequest) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{0}
}

func (x *GetDataQualityErrorsRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (m *GetDataQualityErrorsRequest) GetId() isGetDataQualityErrorsRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *GetDataQualityErrorsRequest) GetSubmissionId() string {
	if x, ok := x.GetId().(*GetDataQualityErrorsRequest_SubmissionId); ok {
		return x.SubmissionId
	}
	return ""
}

func (x *GetDataQualityErrorsRequest) GetConsensusId() string {
	if x, ok := x.GetId().(*GetDataQualityErrorsRequest_ConsensusId); ok {
		return x.ConsensusId
	}
	return ""
}

func (x *GetDataQualityErrorsRequest) GetEvaluatedPriceId() string {
	if x, ok := x.GetId().(*GetDataQualityErrorsRequest_EvaluatedPriceId); ok {
		return x.EvaluatedPriceId
	}
	return ""
}

func (x *GetDataQualityErrorsRequest) GetSubmittedDate() string {
	if x != nil {
		return x.SubmittedDate
	}
	return ""
}

func (x *GetDataQualityErrorsRequest) GetTraceName() string {
	if x != nil {
		return x.TraceName
	}
	return ""
}

type isGetDataQualityErrorsRequest_Id interface {
	isGetDataQualityErrorsRequest_Id()
}

type GetDataQualityErrorsRequest_SubmissionId struct {
	SubmissionId string `protobuf:"bytes,2,opt,name=submission_id,json=submissionId,proto3,oneof"`
}

type GetDataQualityErrorsRequest_ConsensusId struct {
	ConsensusId string `protobuf:"bytes,3,opt,name=consensus_id,json=consensusId,proto3,oneof"`
}

type GetDataQualityErrorsRequest_EvaluatedPriceId struct {
	EvaluatedPriceId string `protobuf:"bytes,4,opt,name=evaluated_price_id,json=evaluatedPriceId,proto3,oneof"`
}

func (*GetDataQualityErrorsRequest_SubmissionId) isGetDataQualityErrorsRequest_Id() {}

func (*GetDataQualityErrorsRequest_ConsensusId) isGetDataQualityErrorsRequest_Id() {}

func (*GetDataQualityErrorsRequest_EvaluatedPriceId) isGetDataQualityErrorsRequest_Id() {}

// response that consists of dq errors(information for those which have errors : colum info values and etc) distributed by severity
type GetDataQualityErrorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*GetDataQualityErrorsResponse_Data
	//	*GetDataQualityErrorsResponse_Error
	Response isGetDataQualityErrorsResponse_Response `protobuf_oneof:"response"`
}

func (x *GetDataQualityErrorsResponse) Reset() {
	*x = GetDataQualityErrorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityErrorsResponse) ProtoMessage() {}

func (x *GetDataQualityErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityErrorsResponse.ProtoReflect.Descriptor instead.
func (*GetDataQualityErrorsResponse) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{1}
}

func (m *GetDataQualityErrorsResponse) GetResponse() isGetDataQualityErrorsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *GetDataQualityErrorsResponse) GetData() *DataQualityErrorsResponse {
	if x, ok := x.GetResponse().(*GetDataQualityErrorsResponse_Data); ok {
		return x.Data
	}
	return nil
}

func (x *GetDataQualityErrorsResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*GetDataQualityErrorsResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isGetDataQualityErrorsResponse_Response interface {
	isGetDataQualityErrorsResponse_Response()
}

type GetDataQualityErrorsResponse_Data struct {
	Data *DataQualityErrorsResponse `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type GetDataQualityErrorsResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*GetDataQualityErrorsResponse_Data) isGetDataQualityErrorsResponse_Response() {}

func (*GetDataQualityErrorsResponse_Error) isGetDataQualityErrorsResponse_Response() {}

type DataQualityErrorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataQualityErrors *SeverityToDataQuality `protobuf:"bytes,1,opt,name=data_quality_errors,json=dataQualityErrors,proto3" json:"data_quality_errors,omitempty"`
	SubmittedData     []*SubmittedData       `protobuf:"bytes,2,rep,name=submitted_data,json=submittedData,proto3" json:"submitted_data,omitempty"`
	TotalRows         int32                  `protobuf:"varint,3,opt,name=total_rows,json=totalRows,proto3" json:"total_rows,omitempty"`
}

func (x *DataQualityErrorsResponse) Reset() {
	*x = DataQualityErrorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataQualityErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataQualityErrorsResponse) ProtoMessage() {}

func (x *DataQualityErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataQualityErrorsResponse.ProtoReflect.Descriptor instead.
func (*DataQualityErrorsResponse) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{2}
}

func (x *DataQualityErrorsResponse) GetDataQualityErrors() *SeverityToDataQuality {
	if x != nil {
		return x.DataQualityErrors
	}
	return nil
}

func (x *DataQualityErrorsResponse) GetSubmittedData() []*SubmittedData {
	if x != nil {
		return x.SubmittedData
	}
	return nil
}

func (x *DataQualityErrorsResponse) GetTotalRows() int32 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

type SeverityToDataQuality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High   []*DQError `protobuf:"bytes,1,rep,name=high,proto3" json:"high,omitempty"`
	Medium []*DQError `protobuf:"bytes,2,rep,name=medium,proto3" json:"medium,omitempty"`
	Low    []*DQError `protobuf:"bytes,3,rep,name=low,proto3" json:"low,omitempty"`
}

func (x *SeverityToDataQuality) Reset() {
	*x = SeverityToDataQuality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeverityToDataQuality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeverityToDataQuality) ProtoMessage() {}

func (x *SeverityToDataQuality) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeverityToDataQuality.ProtoReflect.Descriptor instead.
func (*SeverityToDataQuality) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{3}
}

func (x *SeverityToDataQuality) GetHigh() []*DQError {
	if x != nil {
		return x.High
	}
	return nil
}

func (x *SeverityToDataQuality) GetMedium() []*DQError {
	if x != nil {
		return x.Medium
	}
	return nil
}

func (x *SeverityToDataQuality) GetLow() []*DQError {
	if x != nil {
		return x.Low
	}
	return nil
}

// data quality error(data submitted by dealer)
type DQError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RulesetName  string   `protobuf:"bytes,1,opt,name=ruleset_name,json=rulesetName,proto3" json:"ruleset_name,omitempty"`
	CriteriaName string   `protobuf:"bytes,2,opt,name=criteria_name,json=criteriaName,proto3" json:"criteria_name,omitempty"`
	RuleName     string   `protobuf:"bytes,3,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Severity     Severity `protobuf:"varint,4,opt,name=severity,proto3,enum=titanium.Severity" json:"severity,omitempty"`
	ErrorMessage string   `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *DQError) Reset() {
	*x = DQError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DQError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DQError) ProtoMessage() {}

func (x *DQError) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DQError.ProtoReflect.Descriptor instead.
func (*DQError) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{4}
}

func (x *DQError) GetRulesetName() string {
	if x != nil {
		return x.RulesetName
	}
	return ""
}

func (x *DQError) GetCriteriaName() string {
	if x != nil {
		return x.CriteriaName
	}
	return ""
}

func (x *DQError) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *DQError) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_UNDEFINED_SEVERITY
}

func (x *DQError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// request for data quality errors related to submitted date , id , asset and etc.
type DQErrorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmittedDate string   `protobuf:"bytes,1,opt,name=submitted_date,json=submittedDate,proto3" json:"submitted_date,omitempty"`
	SubmittedId   string   `protobuf:"bytes,2,opt,name=submitted_id,json=submittedId,proto3" json:"submitted_id,omitempty"`
	AssetId       string   `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Filter        string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       *OrderBy `protobuf:"bytes,5,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	Limit         *Limit   `protobuf:"bytes,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32    `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	TraceName     string   `protobuf:"bytes,8,opt,name=trace_name,json=traceName,proto3" json:"trace_name,omitempty"`
}

func (x *DQErrorsRequest) Reset() {
	*x = DQErrorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DQErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DQErrorsRequest) ProtoMessage() {}

func (x *DQErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DQErrorsRequest.ProtoReflect.Descriptor instead.
func (*DQErrorsRequest) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{5}
}

func (x *DQErrorsRequest) GetSubmittedDate() string {
	if x != nil {
		return x.SubmittedDate
	}
	return ""
}

func (x *DQErrorsRequest) GetSubmittedId() string {
	if x != nil {
		return x.SubmittedId
	}
	return ""
}

func (x *DQErrorsRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *DQErrorsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *DQErrorsRequest) GetOrderBy() *OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *DQErrorsRequest) GetLimit() *Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *DQErrorsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DQErrorsRequest) GetTraceName() string {
	if x != nil {
		return x.TraceName
	}
	return ""
}

type SubmittedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values *structpb.Value `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *SubmittedData) Reset() {
	*x = SubmittedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmittedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmittedData) ProtoMessage() {}

func (x *SubmittedData) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmittedData.ProtoReflect.Descriptor instead.
func (*SubmittedData) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{6}
}

func (x *SubmittedData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SubmittedData) GetValues() *structpb.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

// response that consists of column info and values for those which has errors.
type DQErrorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DQErrorsResponse_Data
	//	*DQErrorsResponse_Error
	Response isDQErrorsResponse_Response `protobuf_oneof:"response"`
}

func (x *DQErrorsResponse) Reset() {
	*x = DQErrorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_dq_errors_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DQErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DQErrorsResponse) ProtoMessage() {}

func (x *DQErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_dq_errors_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DQErrorsResponse.ProtoReflect.Descriptor instead.
func (*DQErrorsResponse) Descriptor() ([]byte, []int) {
	return file_common_dq_errors_proto_rawDescGZIP(), []int{7}
}

func (m *DQErrorsResponse) GetResponse() isDQErrorsResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DQErrorsResponse) GetData() *ResponseData {
	if x, ok := x.GetResponse().(*DQErrorsResponse_Data); ok {
		return x.Data
	}
	return nil
}

func (x *DQErrorsResponse) GetError() *Error {
	if x, ok := x.GetResponse().(*DQErrorsResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isDQErrorsResponse_Response interface {
	isDQErrorsResponse_Response()
}

type DQErrorsResponse_Data struct {
	Data *ResponseData `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type DQErrorsResponse_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*DQErrorsResponse_Data) isDQErrorsResponse_Response() {}

func (*DQErrorsResponse_Error) isDQErrorsResponse_Response() {}

var File_common_dq_errors_proto protoreflect.FileDescriptor

var file_common_dq_errors_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x71, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69,
	0x75, 0x6d, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x10, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x8e,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61,
	0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xcb, 0x01, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x13, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x69, 0x74,
	0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x11, 0x64, 0x61, 0x74,
	0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x3e,
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
	0x6d, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x8e, 0x01,
	0x0a, 0x15, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
	0x2e, 0x44, 0x51, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x29,
	0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x44, 0x51, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x03, 0x6c, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
	0x6d, 0x2e, 0x44, 0x51, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0xc3,
	0x01, 0x0a, 0x07, 0x44, 0x51, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x0f, 0x44, 0x51, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75,
	0x6d, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x51, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x10, 0x44, 0x51, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x69, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x41, 0x0a, 0x08, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49,
	0x55, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x03, 0x42, 0x79, 0x0a,
	0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x65, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x74, 0x69,
	0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x42, 0x1d, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x65, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x67,
	0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_dq_errors_proto_rawDescOnce sync.Once
	file_common_dq_errors_proto_rawDescData = file_common_dq_errors_proto_rawDesc
)

func file_common_dq_errors_proto_rawDescGZIP() []byte {
	file_common_dq_errors_proto_rawDescOnce.Do(func() {
		file_common_dq_errors_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_dq_errors_proto_rawDescData)
	})
	return file_common_dq_errors_proto_rawDescData
}

var file_common_dq_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_dq_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_dq_errors_proto_goTypes = []interface{}{
	(Severity)(0),                        // 0: titanium.Severity
	(*GetDataQualityErrorsRequest)(nil),  // 1: titanium.GetDataQualityErrorsRequest
	(*GetDataQualityErrorsResponse)(nil), // 2: titanium.GetDataQualityErrorsResponse
	(*DataQualityErrorsResponse)(nil),    // 3: titanium.DataQualityErrorsResponse
	(*SeverityToDataQuality)(nil),        // 4: titanium.SeverityToDataQuality
	(*DQError)(nil),                      // 5: titanium.DQError
	(*DQErrorsRequest)(nil),              // 6: titanium.DQErrorsRequest
	(*SubmittedData)(nil),                // 7: titanium.SubmittedData
	(*DQErrorsResponse)(nil),             // 8: titanium.DQErrorsResponse
	(*Error)(nil),                        // 9: titanium.Error
	(*OrderBy)(nil),                      // 10: titanium.OrderBy
	(*Limit)(nil),                        // 11: titanium.Limit
	(*structpb.Value)(nil),               // 12: google.protobuf.Value
	(*ResponseData)(nil),                 // 13: titanium.ResponseData
}
var file_common_dq_errors_proto_depIdxs = []int32{
	3,  // 0: titanium.GetDataQualityErrorsResponse.data:type_name -> titanium.DataQualityErrorsResponse
	9,  // 1: titanium.GetDataQualityErrorsResponse.error:type_name -> titanium.Error
	4,  // 2: titanium.DataQualityErrorsResponse.data_quality_errors:type_name -> titanium.SeverityToDataQuality
	7,  // 3: titanium.DataQualityErrorsResponse.submitted_data:type_name -> titanium.SubmittedData
	5,  // 4: titanium.SeverityToDataQuality.high:type_name -> titanium.DQError
	5,  // 5: titanium.SeverityToDataQuality.medium:type_name -> titanium.DQError
	5,  // 6: titanium.SeverityToDataQuality.low:type_name -> titanium.DQError
	0,  // 7: titanium.DQError.severity:type_name -> titanium.Severity
	10, // 8: titanium.DQErrorsRequest.orderBy:type_name -> titanium.OrderBy
	11, // 9: titanium.DQErrorsRequest.limit:type_name -> titanium.Limit
	12, // 10: titanium.SubmittedData.values:type_name -> google.protobuf.Value
	13, // 11: titanium.DQErrorsResponse.data:type_name -> titanium.ResponseData
	9,  // 12: titanium.DQErrorsResponse.error:type_name -> titanium.Error
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_common_dq_errors_proto_init() }
func file_common_dq_errors_proto_init() {
	if File_common_dq_errors_proto != nil {
		return
	}
	file_common_gateway_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_dq_errors_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityErrorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_dq_errors_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityErrorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_dq_errors_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataQualityErrorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_dq_errors_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeverityToDataQuality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_dq_errors_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DQError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_dq_errors_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DQErrorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_dq_errors_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmittedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_dq_errors_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DQErrorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_dq_errors_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GetDataQualityErrorsRequest_SubmissionId)(nil),
		(*GetDataQualityErrorsRequest_ConsensusId)(nil),
		(*GetDataQualityErrorsRequest_EvaluatedPriceId)(nil),
	}
	file_common_dq_errors_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetDataQualityErrorsResponse_Data)(nil),
		(*GetDataQualityErrorsResponse_Error)(nil),
	}
	file_common_dq_errors_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*DQErrorsResponse_Data)(nil),
		(*DQErrorsResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_dq_errors_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_dq_errors_proto_goTypes,
		DependencyIndexes: file_common_dq_errors_proto_depIdxs,
		EnumInfos:         file_common_dq_errors_proto_enumTypes,
		MessageInfos:      file_common_dq_errors_proto_msgTypes,
	}.Build()
	File_common_dq_errors_proto = out.File
	file_common_dq_errors_proto_rawDesc = nil
	file_common_dq_errors_proto_goTypes = nil
	file_common_dq_errors_proto_depIdxs = nil
}
